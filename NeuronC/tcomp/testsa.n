#! /usr/mont/bin/nc -c
#
/* testsa */

/* Test Simulated Annealing */

silent = 1;
info = 1;

expt = "etd";			/* different experiments to test */
expt = "spikeshape";
expt = "etd";

x = setvar();

runsa = 1;

if (expt=="etd") {		/* electrotonic decay */

timinc=1e-4;
ploti = 1e-4;
endexp=.1;
crit=1e-8;

/* free parameters */

RM1   = 0;	/* index into sastart[][] */
RM2   = 1;
RM3   = 2;
VREV  = 3;
DIA1  = 4;
DIA2  = 5;
DUR   = 6;
nsap  = 7;	/* number of simulated annealing parameters */

maxt = int(endexp/ploti + 1);
dim outb1[maxt];
dim outb2[maxt];


} else if (expt=="spikeshape") {

maxt = int(endexp/ploti + 1);
dim outb1[maxt];
dim outb2[maxt];

RM1   = 0;
RM2   = 1;
RM3   = 2;
VREV  = 3;
DIA1  = 4;
DIA2  = 5;
DUR   = 6;
nsap  = 7;	/* number of simulated annealing parameters */

};


/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */

func runsim()			/* run from simulated annealing routine */
{
    local sum;

  t = time= 0;
  runmod();
  for (sum=i=0; i<maxt; i++) {	/* calculate match */
    dy = outb2[i] - outb1[i];
    if (info>5) print i,outb1[i], outb2[i];
    sum += dy*dy /** (maxt-i)*/; 
  }; 
  return sum/maxt;
};

/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */

proc setupsim() {		/* run once to set up template */
  local k;

  t = time= 0;
  runmod();
  for (k=0; k<maxt; k++) {	/* copy to make template */
    outb2[k] = outb1[k];
  };
};

/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */

if (runsa) {
  //include "simann.n";
  include "stsrch.n";
} else {
 nstart = 4;
// dim sastart[nstart][nsap]; /* The starting, max, min values, set by user */
// dim satest[nsap];       /* The test values, used by simulation */
};


/*---------------------------------------------------------------*/

if (expt=="etd") {		/* electrotonic decay */


/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */

proc onplot()

{
   outb1[t++] = V[3];
};

/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */

proc runmod()

/* model to test electrotonic decay */

{
erase model;

at 1 sphere dia 20 rm=satest[RM1] vrev=satest[VREV];

at 2 sphere dia 20 rm=satest[RM2] vrev=-.07;
at 3 sphere dia 20 rm=satest[RM3] vrev=-.07;

conn 1 to 2 cable length 10 dia satest[DIA1] vrev=-.07;
conn 2 to 3 cable length 10 dia satest[DIA2] vrev=-.07;

stim node 1 cclamp 200e-12 start 0 dur satest[DUR]; 

if (info >= 6) plot V[3] max -.068 min -.071;
step .1;
};


/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */

satest[RM1]  = 10000;		/* target values to test algorithm */
satest[RM2]  = 10000;
satest[RM3]  = 10000;
satest[VREV] = -.07;
satest[DIA1] = .1;
satest[DIA2] = .1;
satest[DUR]  = 2e-3;

//for (i=0; i<maxt; i++) {
// print i,outb1[i];
//};

saname[RM1] = "rm1";
saname[RM2] = "rm2";
saname[RM3] = "rm3";
saname[VREV]= "vrev";
saname[DIA1]= "dia1";
saname[DIA2]= "dia2";
saname[DUR] = "dur";


sastart[SAVAL][RM1] = 7000;		/* arbitrary starting values */
sastart[SAVAL][RM2] = 20000;
sastart[SAVAL][RM3] = 20000;
sastart[SAVAL][VREV]= -.055;
sastart[SAVAL][DIA1]= .2;
sastart[SAVAL][DIA2]= .15;
sastart[SAVAL][DUR] = 3e-3;


sastart[SAMAX][RM1] = 100000;		/* max, min constraints */
sastart[SAMIN][RM1] = 1000;

sastart[SAMAX][RM2] = 100000;
sastart[SAMIN][RM2] = 1000;
sastart[SAMAX][RM2] = 10000;
sastart[SAMIN][RM2] = 10000;

sastart[SAMAX][RM3] = 100000;
sastart[SAMIN][RM3] = 1000;
sastart[SAMAX][RM3] = 10000;
sastart[SAMIN][RM3] = 10000;

sastart[SAMAX][VREV] = -.050;
sastart[SAMIN][VREV] = -.080;
sastart[SAMAX][VREV] = -.070;
sastart[SAMIN][VREV] = -.070;

sastart[SAMAX][DIA1] = 2;
sastart[SAMIN][DIA1] = .05;

sastart[SAMAX][DIA2] = 2;
sastart[SAMIN][DIA2] = .05;
sastart[SAMAX][DIA2] = .1;
sastart[SAMIN][DIA2] = .1;

sastart[SAMAX][DUR] = 10e-3;
sastart[SAMIN][DUR] = .1e-3;

			/* set starting values to mean of max,min */

for (i=0; i<nsap; i++) {
  sastart[SAVAL][i] = (sastart[SAMAX][i] + sastart[SAMIN][i]) * .5;
};

sastart[SAVAL][RM1] = 21000;		/* arbitrary starting values */
sastart[SAVAL][RM2] = 9800;
sastart[SAVAL][RM3] = 13100;
sastart[SAVAL][VREV]= -.055;
sastart[SAVAL][DIA1]= .12;
sastart[SAVAL][DIA2]= .25;
sastart[SAVAL][DUR] = 2.2e-3;


/*sastart[SAVAL][RM1]  = 62638;		// a tough case 
sastart[SAVAL][RM2]  = 9581.2;
sastart[SAVAL][RM3]  = 30139;
sastart[SAVAL][VREV] = -0.070481;
sastart[SAVAL][DIA1] = 0.19573;
sastart[SAVAL][DIA2] = 0.19371; 
sastart[SAVAL][DUR]  = 0.00020425;
*/

}		/* etd */

/*-------------------------------------------------------------*/

else if (expt=="spikeshape") {		/* spike shape */

};		/* spike shape */

/*-------------------------------------------------------------*/

setupsim();
ssrch();
