
# line 3 "nc.y"
#include <stdio.h>
#include "nc.h"
#define code2(c1,c2)	code(c1); code(c2)
#define code3(c1,c2,c3)	code(c1); code(c2); code(c3)
#define code4(c1,c2,c3,c4) code(c1); code(c2); code(c3); code(c4)
extern int indef, inlocal, savlocal, argcount, arrcount, formal, starg;

# line 10 "nc.y"
typedef union  { Symbol	*sym;	/* symbol table pointer */
	Inst	*inst;	/* machine instructions */
	int	narg;	/* number of arguments */
} YYSTYPE;
# define NUMBER 257
# define STRING 258
# define PRINT 259
# define PRINTF 260
# define SPRINTF 261
# define FPRINTF 262
# define NUMSTR 263
# define STRNUM 264
# define SCANF 265
# define FSCANF 266
# define SSCANF 267
# define FOPEN 268
# define FCLOSE 269
# define FGETS 270
# define FGETC 271
# define FPUTC 272
# define GETFLDS 273
# define CONST 274
# define VAR 275
# define BLTIN 276
# define UNDEF 277
# define WHILE 278
# define IF 279
# define ELSE 280
# define DEBUGF 281
# define FUNCTION 282
# define PROCEDURE 283
# define RETURN 284
# define EXIT 285
# define FUNC 286
# define PROC 287
# define READ 288
# define FREAD 289
# define FREADS 290
# define FWRITE 291
# define UNLINK 292
# define FOR 293
# define BREAK 294
# define CONTINUE 295
# define EDIT 296
# define INCLUDE 297
# define COMNDLINE 298
# define SYSTEM 299
# define FOREACH 300
# define WITHIN2D 301
# define WITHIN3D 302
# define OF 303
# define INCROP 304
# define DECROP 305
# define PFIELD 306
# define ARG 307
# define LOCAL 308
# define GLOBAL 309
# define LOCALVAR 310
# define TEMP 311
# define DIM 312
# define DIMS 313
# define ARRAY 314
# define ARRAYVAL 315
# define ARRAYCONST 316
# define ARGARRVAL 317
# define LOCALARR 318
# define LOCALARRVAL 319
# define SIZEOF 320
# define FFT 321
# define IFFT 322
# define PFFT 323
# define ACOV 324
# define LMFIT 325
# define LMFIT2D 326
# define SFILE 327
# define PLOT 328
# define V 329
# define VM 330
# define I 331
# define IM 332
# define L 333
# define S 334
# define MAX 335
# define MIN 336
# define CHAR 337
# define CCHAR 338
# define VPEN 339
# define LITCHAR 340
# define DISPLAY 341
# define GRAPH 342
# define INIT 343
# define PEN 344
# define RESTART 345
# define X 346
# define Y 347
# define Z 348
# define XLOC 349
# define YLOC 350
# define ZLOC 351
# define FA0 352
# define FA1 353
# define FA2 354
# define FA3 355
# define FA4 356
# define FA8 357
# define FA9 358
# define FH0 359
# define FH1 360
# define FH2 361
# define FH3 362
# define FH4 363
# define FB0 364
# define FB1 365
# define FB2 366
# define FB3 367
# define FB4 368
# define FC0 369
# define FC1 370
# define FC2 371
# define FC3 372
# define FC4 373
# define FC9 374
# define G 375
# define M 376
# define H 377
# define G0 378
# define G1 379
# define G2 380
# define G3 381
# define GMOVE 382
# define GDRAW 383
# define GRMOVE 384
# define GRDRAW 385
# define GPEN 386
# define GFRAME 387
# define GSIZ 388
# define GROT 389
# define GCROT 390
# define GCWID 391
# define GDASH 392
# define GTEXT 393
# define GLABEL 394
# define GORIG 395
# define GCIRC 396
# define GRECT 397
# define RMOVE 398
# define GWINDOW 399
# define GVPEN 400
# define GPURGE 401
# define ELEMENT 402
# define EXCEPT 403
# define RANGE 404
# define MATCHING 405
# define SIZE 406
# define WINDOW 407
# define DSCALE 408
# define COLOR 409
# define HIDE 410
# define COMPS 411
# define XROT 412
# define YROT 413
# define ZROT 414
# define CALIBLIN 415
# define PLNAME 416
# define PLNUM 417
# define PLSIZE 418
# define PLVAL 419
# define PLARR 420
# define CMAP 421
# define NEWPAGE 422
# define CABLE 423
# define SPHERE 424
# define GJ 425
# define PNX 426
# define SYNAPSE 427
# define LOAD 428
# define RESISTOR 429
# define DIODE 430
# define ELECTRODE 431
# define AXIALRES 432
# define MAXCOND 433
# define CENTER 434
# define WAVEL 435
# define XENON 436
# define SUN 437
# define TUNGSTEN 438
# define PIGM 439
# define PATHL 440
# define ATTF 441
# define ROD 442
# define CONE 443
# define PHOTREC 444
# define ITRANSDUCER 445
# define VTRANSDUCER 446
# define LINIT 447
# define CHR 448
# define RRPOOL 449
# define RRPOOLG 450
# define MRRPOOL 451
# define MAXSRATE 452
# define DYAD 453
# define SDYAD 454
# define SCURVE 455
# define NUMDYAD 456
# define SPOST 457
# define NUMSPRE 458
# define SENS 459
# define RSD 460
# define INITRAND 461
# define STIM 462
# define BAR 463
# define SPOT 464
# define SINE 465
# define GABOR 466
# define SINEANN 467
# define WINDMILL 468
# define SIMAGE 469
# define WIDTH 470
# define LOC 471
# define DUR 472
# define CHECKERBOARD 473
# define RECT 474
# define TFREQ 475
# define ORIENT 476
# define SPHASE 477
# define CONTRAST 478
# define SSCALE 479
# define DRIFT 480
# define XENV 481
# define YENV 482
# define SQ 483
# define STIMCHAN 484
# define MASK 485
# define SECTOR 486
# define START 487
# define STOP 488
# define INTEN 489
# define BACKGR 490
# define BLUR 491
# define SCATTER 492
# define FILT 493
# define SAVE 494
# define RESTORE 495
# define LENGTH 496
# define DIA 497
# define DIA2 498
# define RADIUS 499
# define VCLAMP 500
# define CCLAMP 501
# define GNDBATT 502
# define BATT 503
# define GNDCAP 504
# define CAP 505
# define NODE 506
# define NNODE 507
# define LABEL 508
# define CHAN 509
# define HH 510
# define NA 511
# define K 512
# define KCa 513
# define ClCa 514
# define MG 515
# define CA 516
# define CAO 517
# define CAI 518
# define TCAI 519
# define CACOMP 520
# define IP 521
# define IE 522
# define IPE 523
# define BTOT 524
# define BTOTI 525
# define CAPUMP 526
# define VMAX 527
# define KM 528
# define CAEXCH 529
# define KEX 530
# define CASHELL 531
# define CAOSHELL 532
# define CAPERM 533
# define CBOUND 534
# define CABUF 535
# define CABUFB 536
# define CICR 537
# define CAS 538
# define CAS2 539
# define VM2 540
# define VM3 541
# define P 542
# define KA 543
# define KF 544
# define KR 545
# define C1 546
# define IP3 547
# define IP3I 548
# define BIP3 549
# define VIP3 550
# define V2 551
# define V3 552
# define V4 553
# define B2 554
# define OI 555
# define A3 556
# define D3 557
# define D4 558
# define A2 559
# define K3 560
# define MTYPE 561
# define MIP3 562
# define HIP3 563
# define TYPE 564
# define NTYPE 565
# define STYPE 566
# define REGION 567
# define DENSITY 568
# define NDENSITY 569
# define NSTATE 570
# define UNIT 571
# define RM 572
# define RI 573
# define RG 574
# define CM 575
# define RS 576
# define OPAMP 577
# define BUF 578
# define NBUF 579
# define PUFF 580
# define JNOISE 581
# define CONNECT 582
# define AT 583
# define TO 584
# define EEDIST 585
# define E3DIST 586
# define E2DIST 587
# define EZDIST 588
# define EFRAC 589
# define N3DIST 590
# define N2DIST 591
# define NZDIST 592
# define ONLY 593
# define NUMCONN 594
# define NUMSYN 595
# define EXIST 596
# define ELNUM 597
# define NODE1A 598
# define NODE1B 599
# define NODE1C 600
# define NODE1D 601
# define NODE2A 602
# define NODE2B 603
# define NODE2C 604
# define NODE2D 605
# define CCHNOISE 606
# define PHOTNOISE 607
# define CHANNOISE 608
# define DARKNOISE 609
# define VESNOISE 610
# define N 611
# define VSIZE 612
# define VCOV 613
# define NUNIT 614
# define GLU 615
# define AMPA 616
# define KAINATE 617
# define NMDA 618
# define CNQX 619
# define GABA 620
# define BIC 621
# define PTX 622
# define GLY 623
# define CHRC 624
# define STRY 625
# define CAMP 626
# define CGMP 627
# define PH 628
# define ATP 629
# define LPFILT 630
# define LP 631
# define HP 632
# define MFILT 633
# define BESSFILT 634
# define GAUSNN 635
# define NND 636
# define NNSTD 637
# define GINFO 638
# define REG 639
# define COV 640
# define REFR 641
# define NOTINIT 642
# define VARNUM 643
# define VARSTR 644
# define VARCHR 645
# define LINEAR 646
# define EXPON 647
# define NFILT1 648
# define NFILT1H 649
# define NFILT2 650
# define NFILT3 651
# define RESP 652
# define MESGIN 653
# define MESGOUT 654
# define SYN2 655
# define LOOPG 656
# define TIMEC1 657
# define TIMEC1H 658
# define TIMEC2 659
# define TIMEC3 660
# define TFALL2 661
# define TFALL3 662
# define OPEN 663
# define CLOSE 664
# define THRESH 665
# define VVREV 666
# define VREST 667
# define DELAY 668
# define HGAIN 669
# define CGAIN 670
# define COFF 671
# define KD 672
# define HCOF 673
# define CKD 674
# define CHC 675
# define TRCONC 676
# define MESGCONC 677
# define TAU 678
# define TAUM 679
# define TAUH 680
# define TAUN 681
# define TAUA 682
# define TAUB 683
# define TAUC 684
# define TAUD 685
# define TAUE 686
# define TAUF 687
# define D1 688
# define D2 689
# define K1 690
# define K2 691
# define AREA 692
# define CAKD 693
# define CAHC 694
# define BGAIN 695
# define BOFFSET 696
# define VGAIN 697
# define EGAIN 698
# define GMAX 699
# define GNV 700
# define REV 701
# define MODIFY 702
# define ENAME 703
# define ELABL 704
# define PLACE 705
# define CPLAM 706
# define OFFSET 707
# define OFFSETM 708
# define OFFSETH 709
# define PUT 710
# define RUN 711
# define STEP 712
# define ERASE 713
# define MODEL 714
# define ELIMIT 715
# define ADDEQ 716
# define SUBEQ 717
# define MULEQ 718
# define DIVEQ 719
# define ANDEQ 720
# define OREQ 721
# define OR 722
# define AND 723
# define XOR 724
# define BITAND 725
# define BITOR 726
# define GT 727
# define GE 728
# define LT 729
# define LE 730
# define EQ 731
# define NE 732
# define UNARYMINUS 733
# define UNARYPLUS 734
# define NOT 735
#define yyclearin yychar = -1
#define yyerrok yyerrflag = 0
extern int yychar;
extern int yyerrflag;
#ifndef YYMAXDEPTH
#define YYMAXDEPTH 150
#endif
YYSTYPE yylval, yyval;
typedef int yytabelem;
# define YYERRCODE 256

# line 1264 "nc.y"

	/* end of grammar */
yytabelem yyexca[] ={
-1, 1,
	0, -1,
	-2, 0,
-1, 11,
	40, 645,
	-2, 731,
-1, 84,
	64, 645,
	-2, 447,
-1, 101,
	91, 645,
	-2, 733,
-1, 102,
	91, 645,
	-2, 734,
-1, 103,
	91, 645,
	-2, 736,
-1, 111,
	308, 645,
	-2, 649,
-1, 355,
	64, 645,
	-2, 447,
-1, 409,
	40, 645,
	-2, 409,
-1, 487,
	44, 377,
	-2, 727,
-1, 934,
	41, 489,
	-2, 449,
-1, 945,
	41, 481,
	-2, 449,
-1, 948,
	41, 484,
	-2, 495,
-1, 1073,
	617, 37,
	619, 37,
	621, 37,
	622, 37,
	625, 37,
	626, 37,
	628, 37,
	629, 37,
	-2, 34,
-1, 1074,
	617, 38,
	619, 38,
	621, 38,
	622, 38,
	625, 38,
	626, 38,
	628, 38,
	629, 38,
	-2, 35,
-1, 1097,
	64, 645,
	-2, 447,
-1, 1146,
	61, 415,
	-2, 414,
-1, 1473,
	61, 833,
	-2, 832,
-1, 1559,
	308, 645,
	-2, 649,
-1, 1561,
	61, 838,
	-2, 837,
	};
# define YYNPROD 847
# define YYLAST 9775
yytabelem yyact[]={

   632,    26,     5,  1439,    52,  1548,  1398,  1409,  1396,   839,
   222,  1311,   564,   238,  1168,   611,   571,   230,   502,  1391,
   955,  1130,   257,   578,   357,  1129,    82,     2,   243,   243,
   189,   192,   193,   194,   212,    77,    83,    78,   805,   786,
   717,    80,   909,   242,    79,   432,   961,    81,   213,   436,
   440,   439,   438,  1566,    76,  1478,  1245,   489,   353,     4,
  1030,  1031,  1032,  1059,  1058,   613,   618,   348,   354,   349,
   617,   616,   244,   351,   293,  1480,   350,   615,  1337,   352,
   614,   733,   190,   191,   199,  1336,   347,   827,   435,   197,
   195,   990,   196,  1243,   198,  1040,   199,   487,   490,   491,
   492,   197,   195,  1567,   196,  1479,   198,  1124,   734,   735,
   851,   636,   637,   638,   991,   992,   634,   464,   464,   464,
   736,   142,   368,   995,   996,   426,   993,  1491,  1335,   579,
   497,   498,  1213,  1214,  1215,  1175,   363,   410,  1216,   240,
   241,   200,  1332,  1060,  1333,   712,   711,   412,   414,   413,
   415,   416,   842,   200,   714,  1395,   199,   788,   789,  1552,
  1556,   197,   195,  1551,   196,  1437,   198,  1436,  1433,  1244,
   427,   428,   429,  1148,  1475,   908,   433,   531,  1131,  1132,
  1134,  1530,  1527,  1399,  1565,  1133,  1397,  1392,  1399,  1217,
   975,   841,   891,   890,   304,   463,   532,   533,   534,   535,
   536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
   546,   547,   548,   200,   549,   550,   551,   552,   553,   554,
   555,  1225,   199,   572,  1150,   713,   430,   197,   195,   559,
   196,  1149,   198,   500,  1061,   487,   567,   487,   567,   567,
  1223,   574,   575,  1477,   240,   241,  1222,  1135,   576,  1253,
   715,   573,   250,   391,   249,   641,   565,  1137,  1138,  1139,
  1140,   716,   716,   726,   727,   728,   729,   730,   731,   732,
  1033,   994,  1581,   691,   610,   466,   467,  1534,   470,   200,
   434,  1401,  1041,   289,   332,   473,   625,  1230,   619,   620,
   621,   220,   221,   566,   224,   569,   570,   627,  1559,   504,
   626,   978,   623,   624,   200,   622,   628,   199,   629,   572,
  1476,  1006,   197,   195,  1482,   196,  1420,   198,   630,   876,
   411,   639,  1562,  1474,  1430,   757,   758,   759,   760,   761,
   762,   226,   227,   765,  1136,   243,   769,   573,   231,   232,
   233,   972,   973,   974,   239,  1334,   243,   358,   361,  1147,
   804,   804,   804,   486,   359,   360,   417,   418,   419,   420,
   421,   422,   423,   424,   200,  1547,  1420,   465,  1231,  1423,
   977,   976,   483,   484,  1118,   881,   904,  1589,   768,   444,
   612,  1588,   447,   448,  1420,   649,   225,   719,  1564,   784,
  1563,  1435,   737,   458,   459,   460,  1434,   461,   462,   903,
   901,   823,   468,   469,  1413,   474,   475,   476,   477,   478,
   479,   480,   481,   482,     7,  1492,   485,   979,   103,   960,
  1571,   104,   494,   495,   496,   101,   829,  1493,  1457,   102,
  1481,  1447,   503,  1419,   505,   506,   507,   508,   509,   510,
   511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
   521,   522,   523,  1472,   243,   833,   834,  1574,   870,  1448,
  1573,   240,   241,  1514,   780,  1501,   877,   847,   848,   849,
  1500,  1496,  1495,   997,   880,   998,   999,  1007,  1000,  1001,
  1002,  1008,  1380,  1379,   199,  1445,   804,  1378,   437,   197,
   195,  1576,   196,   568,   198,   529,   530,   866,   741,   813,
   464,   464,   472,   567,  1572,   910,  1242,  1573,  1377,   690,
  1376,   689,   725,   199,  1375,  1374,  1373,  1452,   197,   195,
   225,   196,  1362,   198,  1359,   930,   932,   940,   941,   943,
   804,   804,  1358,   897,   898,   899,  1353,  1503,  1352,   556,
  1502,   200,  1469,  1067,  1351,  1468,  1005,   830,  1230,  1250,
  1166,   846,   103,  1068,  1069,   104,  1165,   332,   952,   101,
   906,   954,   956,   102,   959,  1467,  1164,   199,  1468,   859,
   200,   722,   197,  1246,   968,  1163,  1230,   198,   895,   894,
   560,  1575,   718,  1541,  1525,   965,  1524,   720,   966,   723,
   724,  1070,  1523,  1443,  1522,  1521,  1520,   721,  1519,  1518,
   951,  1516,  1515,  1497,  1483,  1404,  1403,  1367,   739,  1361,
   740,  1360,  1357,  1354,  1249,  1247,   963,   964,  1240,  1236,
  1220,  1162,  1161,  1160,   200,  1003,  1004,   742,   743,  1159,
  1157,  1156,  1155,   810,  1028,   962,  1440,   893,   557,   525,
  1224,   756,  1221,   929,   928,   889,   817,   888,   887,   886,
   885,   763,   764,   766,   767,   884,   883,   874,   875,   882,
   873,  1441,  1442,  1446,  1444,   872,   871,   861,   801,   802,
   855,   854,   845,   808,   809,  1049,   811,   983,   988,   844,
   843,   838,   987,   986,   837,   814,   815,   816,   836,   985,
   835,   563,   984,   562,   820,   561,   528,   527,   526,   524,
   825,   826,   493,   214,   215,   216,   217,   218,   219,   850,
   457,   456,   852,   199,   610,   455,   235,  1451,   197,   195,
   454,   196,   453,   198,   452,   451,  1050,   450,   449,   446,
   445,   441,   236,   234,   228,   832,   223,  1471,     3,  1229,
     8,   237,  1577,  1532,  1528,   902,  1526,   878,   879,   900,
  1355,     1,   907,  1453,   957,   853,  1066,   983,   988,   942,
   931,   647,   987,   986,   952,   952,  1066,   558,   804,   985,
   200,   692,   984,  1028,   201,   202,   203,   204,   205,   206,
    40,   208,   207,   211,   209,   210,   201,   202,   203,   204,
   205,   206,   251,   646,   840,   787,  1108,   442,   443,  1438,
   346,  1113,   804,   804,  1381,  1082,  1080,  1081,  1184,  1055,
  1099,  1212,  1095,   431,   425,   804,   804,   804,  1105,  1045,
   612,  1090,  1096,  1091,   471,   279,   371,  1093,  1127,   362,
  1092,    33,   258,  1094,   471,   471,   243,   243,   243,   243,
  1089,   208,   207,   211,   209,   210,   201,   202,   203,   204,
   205,   206,  1039,   781,   804,   243,   243,   650,   651,   255,
  1141,   648,  1123,   252,   112,   245,   710,   640,   635,   409,
   321,  1158,  1169,  1170,  1171,   323,   322,  1172,  1146,  1142,
  1143,  1144,  1145,   305,   804,   804,   804,   804,   804,   804,
   804,   303,   270,   269,   246,  1218,  1219,    29,  1153,  1154,
   499,    25,    20,    75,    12,    24,    23,   208,   207,   211,
   209,   210,   201,   202,   203,   204,   205,   206,   199,   229,
   488,     0,     0,   197,   195,  1450,   196,     0,   198,   956,
   956,     0,     0,     0,  1227,  1228,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,   631,  1233,
  1234,   831,   177,   178,   179,   180,   181,   182,   183,   184,
   185,   487,   186,   190,   191,   187,   188,     0,     0,     0,
   804,   804,     0,  1252,     0,   200,     0,     0,     0,     0,
  1255,     0,     0,  1256,   857,     0,     0,   860,     0,   577,
     0,     0,   208,   207,   211,   209,   210,   201,   202,   203,
   204,   205,   206,     0,     0,     0,     0,   803,     0,  1056,
   199,     0,  1254,     0,  1449,   197,   195,     0,   196,     0,
   198,   199,     0,     0,     0,     0,   197,   195,     0,   196,
     0,   198,   199,     0,     0,     0,     0,   197,   195,  1370,
   196,     0,   198,     0,  1312,   911,   912,   913,   914,   915,
   916,   917,   918,   919,   920,   921,   922,   923,   924,   925,
   926,   927,     0,     0,     0,   199,     0,   200,  1314,  1313,
   197,   195,  1369,   196,     0,   198,     0,  1371,   200,     0,
     0,     0,     0,     0,     0,     0,     0,  1116,  1117,   200,
   804,   804,   804,   804,   804,   471,     0,   812,  1321,     0,
     0,   199,     0,     0,     0,     0,   197,   195,   471,   196,
     0,   198,     0,     0,     0,     0,  1107,     0,     0,     0,
     0,     0,   200,     0,     0,     0,   199,     0,     0,     0,
     0,   197,   195,  1368,   196,     0,   198,  1346,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,   877,     0,
     0,  1339,     0,     0,     0,     0,     0,  1257,   200,  1343,
     0,  1176,     0,  1339,  1363,  1364,  1365,  1366,     0,     0,
     0,   471,     0,     0,   471,     0,     0,     0,     0,     0,
     0,     0,   856,   200,     0,     0,   858,     0,     0,     0,
   862,   863,   864,   865,     0,   867,   868,   869,   208,   207,
   211,   209,   210,   201,   202,   203,   204,   205,   206,   471,
   471,     0,     0,     0,   199,     0,     0,     0,  1389,   197,
   195,  1251,   196,     0,   198,     0,     0,     0,     0,     0,
     0,  1400,     0,  1402,   896,   738,     0,     0,     0,     0,
     0,     0,     0,     0,  1393,   804,     0,  1394,     0,  1410,
     0,  1411,   956,     0,   567,   567,     0,   744,   745,   746,
   747,   748,   749,   750,   751,   752,   753,   754,   755,     0,
  1417,   200,  1412,  1418,     0,     0,     0,     0,     0,     0,
  1076,     0,  1077,  1078,     0,   770,   775,   776,   777,   778,
   779,     0,   782,   783,     0,     0,  1079,     0,     0,     0,
   199,     0,  1416,   958,     0,   197,   195,  1248,   196,     0,
   198,  1414,  1415,   967,     0,     0,     0,     0,     0,     0,
   818,   819,   804,   821,   822,     0,   824,     0,     0,     0,
   691,     0,     0,   828,     0,  1312,     0,   804,   804,   199,
     0,     0,     0,  1241,   197,   195,  1426,   196,     0,   198,
     0,     0,     0,     0,     0,     0,     0,   200,   806,   807,
  1122,  1431,  1432,     0,     0,  1125,  1126,     0,     0,     0,
  1169,  1169,  1128,  1327,  1328,  1329,     0,     0,     0,   804,
   804,   804,     0,     0,  1455,  1456,     0,     0,     0,     0,
     0,  1466,     0,     0,     0,   567,   200,     0,   208,   207,
   211,   209,   210,   201,   202,   203,   204,   205,   206,     0,
     0,     0,     0,     0,   487,     0,     0,   567,  1330,     0,
     0,  1490,     0,     0,     0,     0,  1484,     0,     0,     0,
     0,  1312,  1489,     0,     0,     0,     0,  1473,     0,  1498,
  1499,     0,  1494,     0,     0,     0,     0,     0,     0,     0,
     0,  1513,   906,     0,  1372,     0,     0,  1345,  1517,     0,
     0,  1485,  1486,     0,  1488,     0,     0,     0,     0,     0,
     0,     0,     0,     0,  1487,   877,     0,     0,  1535,  1531,
  1529,   804,  1539,  1410,     0,     0,     0,     0,     0,   567,
  1540,     0,     0,   892,  1546,     0,     0,     0,     0,     0,
     0,     0,  1550,     0,     0,     0,  1553,     0,     0,     0,
     0,     0,     0,     0,     0,   271,   272,   273,   274,     0,
   292,     0,  1406,     0,     0,     0,     0,   971,  1558,     0,
  1560,     0,     0,     0,  1542,     0,  1544,   949,   950,     0,
     0,     0,   567,     0,     0,   567,  1543,     0,     0,   471,
   471,     0,     0,     0,     0,     0,     0,   980,   981,   982,
     0,     0,   989,   877,     0,     0,     0,   804,  1579,  1580,
  1561,     0,  1586,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,  1029,     0,  1034,  1035,  1036,  1037,     0,
  1569,  1038,     0,  1590,  1591,  1042,  1044,     0,     0,  1568,
     0,     0,  1570,   208,   207,   211,   209,   210,   201,   202,
   203,   204,   205,   206,  1427,  1584,     0,  1585,     0,   275,
   301,     0,   300,   471,   276,     0,     0,   277,   278,     0,
     0,   299,  1051,  1052,  1053,  1054,     0,     0,     0,     0,
     0,  1057,     0,     0,     0,  1226,     0,     0,     0,     0,
     0,     0,  1458,  1459,  1460,  1461,  1462,     0,     0,   302,
  1062,  1063,  1064,  1065,  1338,     0,  1071,     0,     0,     0,
     0,   199,     0,     0,     0,  1239,   197,   195,     0,   196,
     0,   198,  1072,  1073,  1074,  1075,     0,     0,     0,     0,
     0,     0,     0,     0,     0,   208,   207,   211,   209,   210,
   201,   202,   203,   204,   205,   206,   208,   207,   211,   209,
   210,   201,   202,   203,   204,   205,   206,   208,   207,   211,
   209,   210,   201,   202,   203,   204,   205,   206,   200,  1087,
  1088,     0,     0,     0,     0,     0,     0,  1100,  1101,  1102,
  1103,  1104,     0,  1106,     0,  1109,  1110,  1111,  1112,     0,
   208,   207,   211,   209,   210,   201,   202,   203,   204,   205,
   206,     0,     0,     0,     0,     0,     0,     0,  1511,  1512,
  1545,     0,     0,     0,     0,  1083,     0,     0,     0,     0,
     0,     0,  1405,     0,     0,  1408,   208,   207,   211,   209,
   210,   201,   202,   203,   204,   205,   206,     0,     0,     0,
  1151,     0,     0,     0,     0,     0,     0,     0,     0,  1114,
  1115,   208,   207,   211,   209,   210,   201,   202,   203,   204,
   205,   206,  1119,  1120,  1121,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,   471,   471,   471,     0,  1331,
   177,   178,   179,   180,   181,   182,   183,   184,   185,     0,
   186,   190,   191,   187,   188,     0,     0,     0,     0,     0,
     0,  1152,     0,     0,     0,     0,     0,     0,     0,   785,
     0,     0,     0,   199,     0,     0,     0,  1238,   197,   195,
   503,   196,     0,   198,     0,     0,     0,     0,     0,     0,
     0,  1177,  1178,  1179,  1180,  1181,  1182,  1183,     0,   208,
   207,   211,   209,   210,   201,   202,   203,   204,   205,   206,
     0,     0,     0,     0,     0,     0,   471,     0,     0,     0,
     0,  1260,  1261,  1262,  1263,  1264,  1265,  1266,  1267,     0,
   200,     0,  1268,     0,     0,     0,     0,     0,     0,  1269,
  1270,  1271,  1272,  1273,  1274,  1275,  1276,  1277,  1278,  1279,
  1280,  1281,  1282,  1283,  1284,  1285,  1286,  1287,  1288,  1289,
  1290,  1291,  1292,  1293,  1294,  1295,  1296,  1297,  1298,  1299,
  1300,  1301,  1302,  1303,  1304,  1305,  1306,  1258,  1259,  1307,
  1308,  1309,  1310,     0,   471,   208,   207,   211,   209,   210,
   201,   202,   203,   204,   205,   206,     0,     0,  1315,     0,
     0,     0,     0,     0,     0,     0,     0,  1316,  1317,  1318,
  1319,     0,   199,     0,     0,  1320,  1237,   197,   195,  1537,
   196,     0,   198,     0,   208,   207,   211,   209,   210,   201,
   202,   203,   204,   205,   206,     0,     0,     0,     0,     0,
     0,   596,     0,     0,     0,     0,     0,     0,     0,     0,
     0,  1554,  1555,     0,     0,     0,     0,     0,     0,     0,
     0,     0,   199,     0,     0,     0,  1235,   197,   195,   200,
   196,     0,   198,     0,     0,     0,   471,     0,     0,     0,
  1340,  1341,  1342,     0,  1344,     0,  1347,  1348,  1349,  1350,
     0,     0,     0,     0,     0,     0,     0,  1322,  1323,  1324,
  1325,  1326,     0,     0,     0,     0,     0,  1583,     0,  1454,
     0,     0,     0,     0,   471,   471,   471,   471,   471,   200,
     0,     0,     0,   625,     0,   619,   620,   621,     0,     0,
     0,     0,     0,     0,   627,     0,     0,   626,     0,   623,
   624,   597,   622,   628,     0,   629,     0,     0,     0,     0,
     0,     0,     0,     0,     0,   630,     0,     0,     0,     0,
   788,   789,   790,   791,   793,     0,     0,     0,     0,   792,
     0,     0,   580,     0,     0,     0,   600,   601,     0,   607,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    96,     0,     0,    98,     0,    97,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     7,
     0,     0,     0,     0,   608,     0,     0,     0,   609,   606,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,   794,   471,     0,     0,     0,  1549,  1549,     0,     0,
     0,   796,   797,   798,   799,   800,     0,     0,     0,     0,
     0,     0,  1407,     0,     0,  1557,     0,     0,     0,     0,
     0,     0,  1421,     0,     0,     0,     0,     0,     0,     0,
   199,     0,     0,   111,   581,   197,   195,     0,   196,     0,
   198,  1424,  1425,     0,   595,     0,   585,   586,   587,   588,
   589,   590,   591,   592,   593,   594,   604,   605,   602,   603,
     0,   598,   599,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,  1587,   582,   583,   584,   795,     0,
     0,     0,     0,     0,     0,   199,  1173,   200,     0,  1422,
   197,   195,     0,   196,     0,   198,     0,     0,     0,     0,
     0,     0,     0,   199,  1428,  1429,  1232,  1174,   197,   195,
     0,   196,     0,   198,     0,     0,   208,   207,   211,   209,
   210,   201,   202,   203,   204,   205,   206,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,   200,     0,     0,     0,  1463,  1464,  1465,  1504,
  1505,  1506,  1507,  1508,  1509,  1510,     0,     0,     0,     0,
   200,     0,     0,     0,     0,     0,     6,    50,    55,    16,
    17,    18,    19,     0,     0,    72,    73,    74,    67,    15,
    68,    69,    70,    71,    51,    11,    61,  1536,   108,   109,
     0,    14,    58,    10,     9,    13,   105,   106,    59,    35,
    36,    37,    38,   107,    21,    22,    27,    28,   136,   137,
   110,     0,     0,     0,    56,    57,     0,   103,     0,     0,
   104,     0,    39,    53,   101,     0,     0,     0,   102,     0,
   100,   132,   133,   134,   135,    41,    42,     0,    31,    84,
   138,   139,   140,   141,     0,     0,     0,     0,  1538,     0,
    54,    32,    34,     0,     0,     0,     0,     0,     0,     0,
     0,     0,   146,   147,   148,   149,   150,   151,   152,   153,
   154,   155,   156,   157,   158,   159,   160,   161,   162,   163,
   164,   165,   166,   167,   168,   173,     0,     0,   169,   170,
   171,   172,   113,   114,   115,   116,   119,   128,   126,   121,
   124,   123,   125,   130,   131,   122,   117,   118,     0,   127,
   120,   129,    93,     0,     0,     0,     0,     0,   208,   207,
   211,   209,   210,   201,   202,   203,   204,   205,   206,     0,
     0,     0,     0,     0,  1582,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,    96,     0,     0,    98,
     0,    97,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,  1009,
     0,    44,    30,     0,     0,     0,     0,     0,  1010,  1011,
  1012,  1023,  1022,  1024,  1020,  1013,  1014,  1017,  1018,  1019,
  1021,  1025,  1026,  1027,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,    46,    47,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,    95,     0,     0,    94,
     0,     0,     0,     0,     0,     0,   143,     0,   199,   111,
     0,  1470,  1167,   197,   195,     0,   196,     0,   198,     0,
     0,     0,     0,     0,     0,   144,   145,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,   208,   207,   211,
   209,   210,   201,   202,   203,   204,   205,   206,     0,     0,
     0,     0,     0,     0,     0,    60,     0,     0,     0,     0,
     0,     0,     0,     0,     0,   200,     0,     0,     0,     0,
     0,     0,   175,   174,     0,    85,    86,    87,    88,    89,
    90,    91,    92,     0,     0,     0,     0,   208,   207,   211,
   209,   210,   201,   202,   203,   204,   205,   206,  1015,  1016,
     0,     0,     0,     0,     0,   177,   178,   179,   180,   181,
   182,   183,   184,   185,     0,   186,   190,   191,   187,   188,
     0,     0,     0,     0,     0,    62,     0,     0,     0,     0,
     0,     0,    63,    64,    65,    66,     0,     0,     0,     0,
     0,     0,     0,    50,    55,    16,    17,    18,    19,     0,
     0,    72,    73,    74,    67,    15,    68,    69,    70,    71,
    51,    11,    61,     0,   108,   109,     0,    14,    58,    10,
     9,    13,   105,   106,    59,    35,    36,    37,    38,   107,
    21,    22,    27,    28,   136,   137,   110,     0,     0,     0,
    56,    57,   176,   103,     0,     0,   104,     0,    39,    53,
   101,    48,    49,    45,   102,    43,   100,   132,   133,   134,
   135,    41,    42,     0,    31,    84,   138,   139,   140,   141,
     0,     0,     0,     0,     0,    99,    54,    32,    34,     0,
     0,     0,     0,     0,     0,     0,     0,     0,   146,   147,
   148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
   158,   159,   160,   161,   162,   163,   164,   165,   166,   167,
   168,   173,     0,     0,   169,   170,   171,   172,   113,   114,
   115,   116,   119,   128,   126,   121,   124,   123,   125,   130,
   131,   122,   117,   118,     0,   127,   120,   129,    93,     0,
     0,     0,     0,     0,     0,   208,   207,   211,   209,   210,
   201,   202,   203,   204,   205,   206,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,    96,     0,     0,    98,     0,    97,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,    44,    30,     0,
   208,   207,   211,   209,   210,   201,   202,   203,   204,   205,
   206,     0,     0,     0,     0,     0,     0,     0,   208,   207,
   211,   209,   210,   201,   202,   203,   204,   205,   206,     0,
    46,    47,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,    95,     0,     0,    94,     0,     0,     0,     0,
     0,     0,   143,     0,     0,   111,   199,   905,     0,     0,
     0,   197,   195,     0,   196,     0,   198,     0,     0,     0,
     0,   144,   145,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,   199,     0,     0,
     0,     0,   197,   195,     0,   196,     0,   198,     0,     0,
     0,    60,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,   200,     0,     0,     0,     0,   175,   174,
     0,    85,    86,    87,    88,    89,    90,    91,    92,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,   200,     0,     0,     0,     0,     0,
     0,   177,   178,   179,   180,   181,   182,   183,   184,   185,
     0,   186,   190,   191,   187,   188,     0,     0,     0,     0,
     0,    62,     0,     0,     0,     0,     0,     0,    63,    64,
    65,    66,     0,     0,     0,     0,     0,     0,     0,    50,
    55,    16,    17,    18,    19,     0,     0,    72,    73,    74,
    67,    15,    68,    69,    70,    71,    51,    11,    61,     0,
   108,   109,     0,    14,    58,    10,     9,    13,   105,   106,
    59,    35,    36,    37,    38,   107,    21,    22,    27,    28,
   136,   137,   110,     0,     0,     0,    56,    57,   176,   103,
     0,     0,   104,     0,    39,    53,   101,    48,    49,    45,
   102,    43,   100,   132,   133,   134,   135,    41,    42,     0,
    31,    84,   138,   139,   140,   141,     0,     0,     0,     0,
     0,    99,    54,    32,    34,     0,     0,     0,     0,     0,
     0,     0,     0,     0,   146,   147,   148,   149,   150,   151,
   152,   153,   154,   155,   156,   157,   158,   159,   160,   161,
   162,   163,   164,   165,   166,   167,   168,   173,     0,     0,
   169,   170,   171,   172,   113,   114,   115,   116,   119,   128,
   126,   121,   124,   123,   125,   130,   131,   122,   117,   118,
     0,   127,   120,   129,    93,     0,     0,     0,     0,     0,
     0,     0,     0,   208,   207,   211,   209,   210,   201,   202,
   203,   204,   205,   206,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,    96,     0,
     0,    98,     0,    97,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,    44,    30,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,   199,     0,     0,     0,   953,
   197,   195,     0,   196,     0,   198,    46,    47,     0,     0,
     0,     0,     0,     0,     0,     0,     0,   199,    95,     0,
     0,    94,   197,   195,     0,   196,     0,   198,   143,     0,
     0,   111,     0,     0,     0,     0,     0,     0,     0,     7,
     0,     0,     0,     0,     0,     0,     0,   144,   145,   199,
     0,     0,   200,     0,   197,   195,     0,   196,     0,   198,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,   200,     0,     0,    60,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,   175,   174,     0,    85,    86,    87,
    88,    89,    90,    91,    92,   970,   200,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,   177,   178,   179,
   180,   181,   182,   183,   184,   185,   969,   186,   190,   191,
   187,   188,     0,     0,     0,     0,     0,    62,     0,     0,
     0,     0,     0,     0,    63,    64,    65,    66,     0,     0,
     0,     0,     0,     0,     0,    50,    55,    16,    17,    18,
    19,     0,     0,    72,    73,    74,    67,    15,    68,    69,
    70,    71,    51,    11,    61,     0,   108,   109,     0,    14,
    58,    10,     9,    13,   105,   106,    59,    35,    36,    37,
    38,   107,    21,    22,    27,    28,   136,   137,   110,     0,
     0,     0,    56,    57,   176,   103,     0,     0,   104,     0,
    39,    53,   101,    48,    49,    45,   102,    43,   100,   132,
   133,   134,   135,    41,    42,     0,    31,    84,   138,   139,
   140,   141,     0,     0,     0,     0,     0,    99,    54,    32,
    34,     0,     0,     0,     0,     0,     0,     0,     0,     0,
   146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
   156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
   166,   167,   168,   173,     0,     0,   169,   170,   171,   172,
   113,   114,   115,   116,   119,   128,   126,   121,   124,   123,
   125,   130,   131,   122,   117,   118,     0,   127,   120,   129,
    93,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,   208,   207,   211,   209,   210,   201,   202,   203,   204,
   205,   206,     0,     0,  1206,  1207,  1208,  1209,    96,  1210,
     0,    98,     0,    97,     0,     0,     0,     0,     0,     0,
     0,     0,   208,   207,   211,   209,   210,   201,   202,   203,
   204,   205,   206,     0,     0,     0,     0,     0,     0,    44,
    30,     0,     0,     0,     0,     0,     0,  1189,  1192,  1193,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,   695,    46,    47,     0,     0,     0,   697,   698,   699,
     0,     0,     0,     0,    95,   708,     0,    94,     0,     0,
     0,   224,     0,     0,   143,     0,     0,     0,   703,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,   144,   145,  1185,  1186,     0,  1187,     0,
     0,     0,   709,  1194,  1195,     0,  1196,     0,     0,     0,
     0,   700,   693,   694,     0,   696,     0,     0,     0,     0,
     0,  1190,  1191,    60,     0,     0,     0,     0,     0,  1198,
  1199,  1200,  1201,  1202,  1203,  1204,  1205,     0,     0,     0,
   175,   174,     0,    85,    86,    87,    88,    89,    90,    91,
    92,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,   177,   178,   179,   180,   181,   182,   183,
   184,   185,     0,   186,   190,   191,   187,   188,     0,   707,
     0,     0,     0,    62,     0,     0,     0,     0,     0,     0,
    63,    64,    65,    66,     0,    50,    55,     0,     0,     0,
     0,     0,     0,    72,    73,    74,    67,     0,    68,    69,
    70,    71,    51,   225,    61,   706,   705,   704,     0,     0,
    58,     0,     0,  1211,     0,  1188,    59,  1197,     0,     0,
     0,     0,     0,   596,     0,     0,   136,   137,     0,     0,
     0,     0,    56,    57,     0,   103,     0,     0,   104,     0,
   176,    53,   101,     0,     0,     0,   102,     0,   100,    48,
    49,    45,     0,    43,   702,   701,     0,    84,   138,   139,
   140,   141,     0,     0,     0,     0,     0,     0,    54,     0,
     0,     0,     0,    99,     0,     0,     0,  1385,  1386,  1387,
   146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
   156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
   166,   167,   168,   173,     0,     0,   169,   170,   171,   172,
   208,   207,   211,   209,   210,   201,   202,   203,   204,   205,
   206,     0,     0,   597,     0,     0,     0,     0,     0,     0,
    93,     0,   208,   207,   211,   209,   210,   201,   202,   203,
   204,   205,   206,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,   580,  1390,     0,    96,   600,   601,
    98,   607,    97,     0,   208,   207,   211,   209,   210,   201,
   202,   203,   204,   205,   206,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,   606,     0,     0,     0,  1046,   301,     0,   300,     0,
  1047,     0,     0,  1048,     0,     0,     0,   299,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,    95,     0,     0,    94,     0,     0,
   224,     0,     0,     0,   143,   302,     0,     0,  1388,     0,
     0,     0,     0,     0,     0,     0,   581,     0,     0,     0,
     0,     0,     0,   144,   145,     0,   595,     0,   585,   586,
   587,   588,   589,   590,   591,   592,   593,   594,   604,   605,
   602,   603,     0,   598,   599,     0,     0,     0,     0,     0,
     0,     0,     0,    60,     0,     0,     0,   582,   583,   584,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,    85,    86,    87,    88,    89,    90,    91,
    92,     0,  1382,  1383,  1384,     0,     0,     0,     0,   596,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,   177,   178,   179,   180,   181,   182,   183,
   184,   185,     0,   186,   190,   191,   187,   188,     0,     0,
     0,     0,     0,    62,     0,     0,     0,     0,     0,     0,
    63,    64,    65,    66,    50,    55,     0,     0,     0,     0,
     0,     0,    72,    73,    74,    67,     0,    68,    69,    70,
    71,    51,   225,    61,     0,     0,     0,     0,     0,    58,
     0,     0,     0,     0,     0,    59,     0,     0,     0,     0,
     0,     0,     0,     0,   596,   136,   137,     0,     0,     0,
     0,    56,    57,     0,   103,     0,     0,   104,     0,   597,
    53,   101,     0,     0,     0,   102,     0,   100,     0,     0,
     0,     0,     0,     0,     0,     0,    84,   138,   139,   140,
   141,     0,     0,     0,     0,     0,     0,    54,     0,     0,
   580,     0,     0,    99,   600,   601,     0,   607,     0,   146,
   147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
   157,   158,   159,   160,   161,   162,   163,   164,   165,   166,
   167,   168,   173,     0,     0,   169,   170,   171,   172,     0,
     0,   288,   608,     0,     0,     0,   609,   606,     0,     0,
     0,     0,     0,     0,   597,     0,     0,     0,     0,    93,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,   580,     0,     0,    96,   600,
   601,    98,   607,    97,     0,     0,     0,     0,     0,     0,
     0,     0,   581,     0,     0,     0,     0,     0,     0,     0,
     0,     0,   595,     0,   585,   586,   587,   588,   589,   590,
   591,   592,   593,   594,   604,   605,   602,   603,     0,   598,
   599,     0,   606,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,   582,   583,   584,     0,     0,     0,     0,
     0,     0,     0,     0,   719,     0,     0,     0,     0,     0,
     0,     0,     0,    95,     0,     0,    94,     0,     0,     0,
     0,   224,     0,   143,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,   581,     0,     0,
     0,     0,   144,   145,     0,     0,     0,   595,     0,   585,
   586,   587,   588,   589,   590,   591,   592,   593,   594,   604,
   605,   602,   603,     0,   598,   599,     0,     0,     0,     0,
     0,     0,    60,     0,     0,     0,     0,     0,   582,   583,
   584,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,    85,    86,    87,    88,    89,    90,    91,    92,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,   177,   178,   179,   180,   181,   182,   183,   184,
   185,     0,   186,   190,   191,   187,   188,     0,     0,     0,
     0,     0,    62,     0,     0,     0,     0,     0,     0,    63,
    64,    65,    66,     0,     0,    50,    55,     0,     0,     0,
     0,     0,     0,    72,    73,    74,    67,     0,    68,    69,
    70,    71,    51,   225,    61,     0,     0,     0,     0,     0,
    58,     0,     0,     0,     0,     0,    59,     0,   722,     0,
     0,     0,     0,     0,     0,     0,   136,   137,     0,   718,
     0,     0,    56,    57,   720,   103,   723,   724,   104,     0,
     0,    53,   101,     0,   721,     0,   102,     0,   100,     0,
     0,     0,     0,     0,     0,     0,     0,    84,   138,   934,
   140,   141,     0,     0,     0,     0,     0,     0,    54,     0,
     0,     0,    99,     0,     0,     0,     0,     0,     0,     0,
   146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
   156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
   166,   167,   168,   173,     0,     0,   169,   170,   171,   172,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    93,     0,     0,   253,   254,   260,   261,   287,   262,   263,
   264,   259,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,   294,   295,     0,   298,   297,    96,   296,     0,
    98,     0,    97,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,   772,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,   268,   267,   266,   265,     0,     0,     0,   256,
     0,   271,   272,   273,   274,     0,   292,     0,     0,     0,
   288,     0,     0,     0,    95,     0,     0,    94,     0,     0,
   224,     0,     0,     0,   143,     0,     0,     0,     0,   935,
   936,   937,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,   144,   145,   939,   938,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,   280,   282,   283,   281,     0,     0,   290,   291,
     0,   286,     0,    60,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,    85,    86,    87,    88,    89,    90,    91,
    92,     0,     0,     0,     0,   275,   301,     0,   300,     0,
   276,     0,     0,   277,   278,     0,     0,   299,     0,     0,
     0,     0,     0,   177,   178,   179,   180,   181,   182,   183,
   184,   185,     0,   186,   190,   191,   187,   188,     0,     0,
     0,     0,     0,    62,     0,   302,     0,     0,     0,     0,
    63,    64,    65,    66,    50,    55,   284,   285,     0,     0,
     0,     0,    72,    73,    74,    67,     0,    68,    69,    70,
    71,    51,   225,    61,   933,     0,     0,     0,     0,    58,
     0,     0,     0,     0,     0,    59,     0,     0,     0,     0,
     0,     0,     0,   248,   247,   136,   137,     0,     0,     0,
     0,    56,    57,     0,   103,     0,     0,   104,     0,     0,
    53,   101,     0,     0,     0,   102,     0,   100,     0,     0,
     0,     0,     0,     0,     0,     0,    84,   138,   139,   140,
   141,     0,     0,     0,     0,     0,     0,    54,     0,     0,
     0,     0,     0,    99,     0,     0,     0,     0,     0,   146,
   147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
   157,   158,   159,   160,   161,   162,   163,   164,   165,   166,
   167,   168,   173,     0,     0,   169,   170,   171,   172,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,    93,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,    96,     0,     0,    98,
     0,    97,     0,   774,   771,   773,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
   358,   361,     0,     0,     0,     0,     0,   359,   360,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,    95,     0,     0,    94,     0,     0,   224,
     0,     0,     0,   143,  1097,   138,   139,   140,   141,  1098,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,   144,   145,     0,     0,     0,   146,   147,   148,
   149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
   159,   160,   161,   162,   163,   164,   165,   166,   167,   168,
   173,     0,    60,   169,   170,   171,   172,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,    85,    86,    87,    88,    89,    90,    91,    92,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,   177,   178,   179,   180,   181,   182,   183,   184,
   185,     0,   186,   190,   191,   187,   188,     0,     0,     0,
     0,     0,    62,     0,     0,     0,     0,     0,     0,    63,
    64,    65,    66,    50,    55,     0,     0,     0,     0,     0,
     0,    72,    73,    74,    67,     0,    68,    69,    70,    71,
    51,   225,    61,     0,     0,     0,     0,     0,    58,     0,
     0,     0,     0,     0,    59,     0,     0,     0,     0,     0,
     0,     0,     0,     0,   136,   137,     0,     0,     0,     0,
    56,    57,     0,   103,     0,     0,   104,     0,     0,    53,
   101,   143,     0,     0,   102,     0,   100,     0,     0,     0,
     0,     0,     0,     0,     0,    84,   138,   139,   140,   141,
   144,   145,     0,     0,     0,     0,    54,     0,     0,     0,
     0,     0,    99,     0,     0,     0,     0,     0,   146,   147,
   148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
   158,   159,   160,   161,   162,   163,   164,   165,   166,   167,
   168,   173,     0,     0,   169,   170,   171,   172,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,    93,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
   177,   178,   179,   180,   181,   182,   183,   184,   185,     0,
   186,   190,   191,   187,   188,    96,     0,     0,    98,     0,
    97,     0,  1086,  1084,  1085,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,   358,
   361,     0,     0,     0,     0,     0,   359,   360,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,    95,     0,     0,    94,     0,     0,   224,     0,
     0,     0,   143,   355,   138,   139,   140,   141,   356,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,   144,   145,     0,     0,     0,   146,   147,   148,   149,
   150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
   160,   161,   162,   163,   164,   165,   166,   167,   168,   173,
     0,    60,   169,   170,   171,   172,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,    85,    86,    87,    88,    89,    90,    91,    92,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,   177,   178,   179,   180,   181,   182,   183,   184,   185,
     0,   186,   190,   191,   187,   188,     0,     0,     0,     0,
     0,    62,     0,     0,     0,     0,     0,     0,    63,    64,
    65,    66,    50,    55,     0,     0,     0,     0,     0,     0,
    72,    73,    74,    67,     0,    68,    69,    70,    71,    51,
   225,    61,     0,     0,     0,     0,     0,    58,     0,     0,
     0,     0,     0,    59,     0,     0,     0,     0,     0,     0,
     0,     0,     0,   136,   137,     0,     0,     0,     0,    56,
    57,     0,   103,     0,     0,   104,     0,     0,    53,   101,
   143,     0,     0,   102,     0,   100,     0,     0,     0,     0,
     0,     0,     0,     0,    84,   138,   945,   140,   141,   144,
   145,     0,     0,     0,     0,    54,     0,     0,     0,     0,
     0,    99,     0,     0,     0,     0,     0,   146,   147,   148,
   149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
   159,   160,   161,   162,   163,   164,   165,   166,   167,   168,
   173,   946,   947,   169,   170,   171,   172,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,    93,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,   177,
   178,   179,   180,   181,   182,   183,   184,   185,     0,   186,
   190,   191,   187,   188,    96,   501,     0,    98,     0,    97,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,   633,   387,   388,   392,   393,
   389,   394,   395,   396,   401,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,   294,   295,     0,   298,   297,
     0,   296,     0,     0,     0,  1043,   403,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,    95,     0,     0,    94,     0,     0,   224,     0,     0,
     0,   948,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,   400,   399,   398,   397,     0,
   144,   145,   390,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,   387,   388,   392,   393,
   389,   394,   395,   396,   401,     0,     0,     0,     0,     0,
    60,     0,     0,     0,     0,   294,   295,     0,   298,   297,
     0,   296,     0,     0,     0,     0,   403,     0,     0,     0,
    85,    86,    87,    88,    89,    90,    91,    92,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,   402,     0,     0,     0,     0,     0,     0,     0,     0,
   177,   178,   179,   180,   181,   182,   183,   184,   185,     0,
   186,   190,   191,   187,   188,   400,   399,   398,   397,     0,
    62,     0,   390,     0,     0,     0,     0,    63,    64,    65,
    66,    50,    55,     0,     0,     0,     0,     0,     0,    72,
    73,    74,    67,     0,    68,    69,    70,    71,    51,   225,
    61,   944,     0,     0,     0,     0,    58,     0,     0,   405,
   404,     0,    59,     0,     0,     0,     0,     0,     0,     0,
     0,     0,   136,   137,   345,     0,     0,     0,    56,    57,
     0,   103,     0,     0,   104,     0,     0,    53,   101,     0,
     0,   402,   102,     0,   100,     0,     0,     0,     0,     0,
     0,     0,     0,    84,   138,   139,   140,   141,     0,     0,
     0,     0,     0,     0,    54,     0,     0,     0,     0,     0,
    99,     0,     0,     0,     0,     0,   146,   147,   148,   149,
   150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
   160,   161,   162,   163,   164,   165,   166,   167,   168,   173,
     0,     0,   169,   170,   171,   172,     0,     0,     0,   405,
   404,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,    93,     0,     0,     0,
     0,   307,   336,     0,     0,     0,     0,     0,     0,   294,
   295,     0,   298,   297,     0,   296,     0,     0,     0,     0,
     0,     0,     0,    96,     0,     0,    98,     0,    97,     0,
   324,   325,   326,   329,   327,   328,   334,     0,   306,   310,
   331,   330,   311,   313,   314,   341,   319,   312,   315,   316,
   317,   344,   343,   335,   308,   309,   337,   338,   318,   320,
     0,     0,     0,     0,     0,     0,     0,   339,   340,     0,
     0,     0,     0,   333,   465,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    95,     0,     0,    94,     0,     0,   224,     0,     0,     0,
   143,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,   144,
   145,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,   342,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,    60,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,    85,
    86,    87,    88,    89,    90,    91,    92,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,   177,
   178,   179,   180,   181,   182,   183,   184,   185,     0,   186,
   190,   191,   187,   188,     0,     0,     0,     0,     0,    62,
     0,     0,     0,     0,     0,     0,    63,    64,    65,    66,
    50,    55,     0,     0,     0,     0,     0,     0,    72,    73,
    74,    67,     0,    68,    69,    70,    71,    51,   225,    61,
     0,     0,     0,     0,     0,    58,     0,     0,     0,     0,
     0,    59,     0,     0,     0,     0,     0,     0,     0,     0,
     0,   136,   137,     0,     0,     0,     0,    56,    57,     0,
   103,     0,     0,   104,     0,     0,    53,   101,     0,     0,
     0,   102,     0,   100,     0,     0,     0,     0,     0,     0,
     0,     0,    84,   138,   139,   140,   141,     0,     0,     0,
     0,     0,     0,    54,     0,     0,     0,     0,     0,    99,
     0,     0,     0,     0,     0,   146,   147,   148,   149,   150,
   151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
   161,   162,   163,   164,   165,   166,   167,   168,   173,     0,
     0,   169,   170,   171,   172,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,    93,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,    96,     0,     0,    98,     0,    97,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,  1578,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,    95,
     0,     0,    94,     0,     0,   224,     0,     0,     0,   143,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,   144,   145,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,    60,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,    85,    86,
    87,    88,    89,    90,    91,    92,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,   177,   178,
   179,   180,   181,   182,   183,   184,   185,     0,   186,   190,
   191,   187,   188,     0,     0,     0,     0,     0,    62,     0,
     0,     0,     0,     0,     0,    63,    64,    65,    66,    50,
    55,     0,     0,     0,     0,     0,     0,    72,    73,    74,
    67,     0,    68,    69,    70,    71,    51,   225,    61,     0,
     0,     0,     0,     0,    58,     0,     0,     0,     0,     0,
    59,     0,     0,     0,     0,     0,     0,     0,     0,     0,
   136,   137,     0,     0,     0,     0,    56,    57,     0,   103,
     0,     0,   104,     0,     0,    53,   101,     0,     0,     0,
   102,     0,   100,     0,     0,     0,     0,     0,     0,     0,
     0,    84,   138,   139,   140,   141,     0,     0,     0,     0,
     0,     0,    54,     0,     0,     0,     0,     0,    99,     0,
     0,     0,     0,     0,   146,   147,   148,   149,   150,   151,
   152,   153,   154,   155,   156,   157,   158,   159,   160,   161,
   162,   163,   164,   165,   166,   167,   168,   173,     0,     0,
   169,   170,   171,   172,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,    93,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,    96,     0,     0,    98,     0,    97,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,   633,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,    95,     0,
     0,    94,     0,     0,   224,     0,     0,     0,   143,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,   144,   145,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,    60,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,    85,    86,    87,
    88,    89,    90,    91,    92,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,   177,   178,   179,
   180,   181,   182,   183,   184,   185,     0,   186,   190,   191,
   187,   188,     0,     0,     0,     0,     0,    62,     0,     0,
     0,     0,     0,     0,    63,    64,    65,    66,    50,    55,
     0,     0,     0,     0,     0,     0,    72,    73,    74,    67,
     0,    68,    69,    70,    71,    51,   225,    61,     0,     0,
     0,     0,     0,    58,     0,     0,     0,     0,     0,    59,
     0,     0,     0,     0,     0,     0,     0,     0,     0,   136,
   137,     0,     0,     0,     0,    56,    57,     0,   103,     0,
     0,   104,     0,     0,    53,   101,     0,     0,     0,   102,
     0,   100,     0,     0,     0,     0,     0,     0,     0,     0,
    84,   138,   139,   140,   141,     0,     0,     0,     0,     0,
     0,    54,     0,     0,     0,     0,     0,    99,     0,     0,
     0,     0,     0,   146,   147,   148,   149,   150,   151,   152,
   153,   154,   155,   156,   157,   158,   159,   160,   161,   162,
   163,   164,   165,   166,   167,   168,   173,     0,     0,   169,
   170,   171,   172,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,    93,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    96,     0,     0,    98,     0,    97,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,  1533,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,    95,     0,     0,
    94,     0,     0,   224,     0,     0,     0,   143,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,   144,   145,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,    60,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,    85,    86,    87,    88,
    89,    90,    91,    92,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,   177,   178,   179,   180,
   181,   182,   183,   184,   185,     0,   186,   190,   191,   187,
   188,     0,     0,     0,     0,     0,    62,     0,     0,     0,
     0,     0,     0,    63,    64,    65,    66,    50,    55,     0,
     0,     0,     0,     0,     0,    72,    73,    74,    67,     0,
    68,    69,    70,    71,    51,   225,    61,     0,     0,     0,
     0,     0,    58,     0,     0,     0,     0,     0,    59,     0,
     0,     0,     0,     0,     0,     0,     0,     0,   136,   137,
     0,     0,     0,     0,    56,    57,     0,   103,     0,     0,
   104,     0,     0,    53,   101,     0,     0,     0,   102,     0,
   100,     0,     0,     0,     0,     0,     0,     0,     0,    84,
   138,   139,   140,   141,     0,     0,     0,     0,     0,     0,
    54,     0,     0,     0,     0,     0,    99,     0,     0,     0,
     0,     0,   146,   147,   148,   149,   150,   151,   152,   153,
   154,   155,   156,   157,   158,   159,   160,   161,   162,   163,
   164,   165,   166,   167,   168,   173,     0,     0,   169,   170,
   171,   172,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,    93,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,    96,
     0,     0,    98,     0,    97,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,  1356,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,    95,     0,     0,    94,
     0,     0,   224,     0,     0,     0,   143,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,   144,   145,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,    60,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,    85,    86,    87,    88,    89,
    90,    91,    92,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,   177,   178,   179,   180,   181,
   182,   183,   184,   185,     0,   186,   190,   191,   187,   188,
     0,     0,     0,     0,     0,    62,     0,     0,     0,     0,
     0,     0,    63,    64,    65,    66,    50,    55,     0,     0,
     0,     0,     0,     0,    72,    73,    74,    67,     0,    68,
    69,    70,    71,    51,   225,    61,     0,     0,     0,     0,
     0,    58,     0,     0,     0,     0,     0,    59,     0,     0,
     0,     0,     0,     0,     0,     0,     0,   136,   137,     0,
     0,     0,     0,    56,    57,     0,   103,     0,     0,   104,
     0,     0,    53,   101,     0,     0,     0,   102,     0,   100,
     0,     0,     0,     0,     0,     0,     0,     0,    84,   138,
   139,   140,   141,     0,     0,     0,     0,     0,     0,    54,
     0,     0,     0,     0,     0,    99,     0,     0,     0,     0,
     0,   146,   147,   148,   149,   150,   151,   152,   153,   154,
   155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
   165,   166,   167,   168,   173,     0,     0,   169,   170,   171,
   172,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,    93,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,    96,     0,
     0,    98,     0,    97,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,    95,     0,     0,    94,     0,
     0,   224,     0,     0,     0,   143,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,   144,   145,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,    60,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,    85,    86,    87,    88,    89,    90,
    91,    92,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,   177,   178,   179,   180,   181,   182,
   183,   184,   185,     0,   186,   190,   191,   187,   188,     0,
     0,     0,     0,     0,    62,     0,     0,     0,     0,     0,
     0,    63,    64,    65,    66,    50,    55,     0,     0,     0,
     0,     0,     0,    72,    73,    74,    67,     0,    68,    69,
    70,    71,    51,   225,    61,     0,     0,     0,     0,     0,
    58,     0,     0,     0,     0,     0,    59,     0,     0,     0,
     0,     0,     0,     0,     0,     0,   136,   137,     0,     0,
     0,     0,    56,    57,     0,   103,     0,     0,   104,     0,
     0,    53,   101,     0,     0,     0,   102,     0,   100,     0,
     0,     0,     0,     0,     0,     0,     0,    84,   138,   139,
   140,   141,     0,     0,     0,     0,     0,     0,    54,     0,
     0,     0,     0,     0,    99,     0,     0,     0,     0,     0,
   146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
   156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
   166,   167,   168,   173,     0,     0,   169,   170,   171,   172,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    93,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,    96,     0,     0,
    98,     0,    97,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,   642,     0,     0,     0,     0,
     0,     0,     0,     0,    95,     0,     0,    94,     0,     0,
   224,     0,     0,     0,   143,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,   144,   145,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,    60,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,    85,    86,    87,    88,    89,    90,    91,
    92,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,   177,   178,   179,   180,   181,   182,   183,
   184,   185,     0,   186,   190,   191,   187,   188,     0,     0,
     0,     0,     0,    62,     0,     0,     0,     0,     0,     0,
    63,    64,    65,    66,    50,    55,     0,     0,     0,     0,
     0,     0,    72,    73,    74,    67,     0,    68,    69,    70,
    71,    51,   225,    61,     0,     0,     0,     0,     0,    58,
     0,     0,     0,     0,     0,    59,     0,     0,     0,     0,
     0,     0,     0,     0,     0,   136,   137,     0,     0,     0,
     0,    56,    57,     0,   103,     0,     0,   104,     0,     0,
    53,   101,     0,     0,     0,   102,     0,   100,     0,     0,
     0,     0,     0,     0,     0,     0,    84,   138,   139,   140,
   141,     0,     0,     0,     0,     0,     0,    54,     0,     0,
     0,     0,     0,    99,     0,     0,     0,     0,     0,   146,
   147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
   157,   158,   159,   160,   161,   162,   163,   164,   165,   166,
   167,   168,   173,     0,     0,   169,   170,   171,   172,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,    93,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,   668,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,   665,   666,   667,
   664,   675,     0,     0,     0,   676,     0,   645,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,    95,     0,     0,    94,     0,     0,     0,
     0,     0,     0,   143,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,   144,   145,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,    60,     0,     0,     0,     0,     0,     0,   678,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,    85,    86,    87,    88,    89,    90,    91,    92,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,   608,     0,     0,     0,   609,   677,
     0,     0,   177,   178,   179,   180,   181,   182,   183,   184,
   185,     0,   186,   190,   191,   187,   188,     0,     0,     0,
     0,     0,    62,     0,     0,     0,     0,     0,     0,    63,
    64,    65,    66,     0,   674,   673,   683,   684,   685,   686,
   688,     0,   687,     0,     0,   679,   680,   681,   682,   654,
   655,   643,   644,   653,   652,     0,     0,   656,   658,   659,
   671,   672,   662,   663,   669,   670,   376,     0,     0,     0,
     0,     0,     0,     0,     0,   386,     0,     0,     0,     0,
     0,     0,     0,     0,     0,   661,   660,     0,     0,     0,
     0,     0,     0,     0,     0,   657,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,    99,     0,     0,   380,     0,     0,     0,   367,
   370,   366,   364,   372,   373,   374,   375,   378,   369,   406,
   407,   408,   377,     0,     0,     0,     0,     0,   384,   385,
   387,   388,   392,   393,   389,   394,   395,   396,   401,     0,
     0,   379,     0,     0,     0,     0,     0,     0,     0,   294,
   295,     0,   298,   297,     0,   296,     0,     0,     0,     0,
   403,     0,     0,     0,     0,     0,     0,     0,     0,   383,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,   400,
   399,   398,   397,   382,     0,     0,   390,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,   402,     0,     0,     0,   365,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
   381,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,   405,   404 };
yytabelem yypact[]={

 -1000,  2150, -1000,   355,   355,  3410,   355, -1000,   -13,  8787,
 -1000, -1000, -1000, -1000, -1000,   694,  8787, -1000, -1000, -1000,
   693, -1000, -1000,   692,   692,  -162, -1000,  8787,  8787,  4490,
  6037,  5474,  9127, -1000,  -196, -1000, -1000, -1000, -1000, -1000,
 -1000, -1000, -1000,  -176,  8787,  -226,  -662,  -663, -1000,  8787,
 -1000, -1000, -1000,   691, -1000, -1000,   111,   111, -1000,   690,
   689, -1000, -1000,   688,   687,   685,   684,   682,   680,   675,
   671,   670, -1000, -1000, -1000, -1000, -1000, -1000,   276,   276,
   276, -1000, -1000,   245, -1000, -1000, -1000, -1000, -1000, -1000,
 -1000, -1000, -1000,   245,   245, -1000,  3338,  8787,  8787,  8787,
   662, -1000, -1000, -1000, -1000,    72,    72, -1000, -1000, -1000,
  5703,   176, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
 -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
 -1000, -1000, -1000, -1000, -1000, -1000, -1000,   659, -1000, -1000,
 -1000, -1000, -1000,   599,   658,   657, -1000, -1000, -1000, -1000,
 -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
 -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
 -1000, -1000, -1000,   656, -1000, -1000,  8787, -1000, -1000, -1000,
 -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
 -1000, -1000, -1000, -1000, -1000,  8787,  8787,  8787,  8787,  8787,
  8787,  8787,  8787,  8787,  8787,  8787,  8787,  8787,  8787,  8787,
  8787,  8787, -1000,  8787,  8787,  8787,  8787,  8787,  8787,  8787,
 -1000, -1000,  3442, -1000,   176, -1000,   598,   598,  8787,   536,
  3442,   655,   653,   651,  3338,  3338,  3338,  3338,  3338,   246,
  8787,  8787, -1000,  3442, -1000, -1000, -1000,  8787,   111,  3896,
  1608,  7231,  -344,  -385,  8398,  8788,  1004,  -229,  3398,  -351,
  4117,  4117,  8787,  8787,  8787,  8787,  8787,  8787,  8787,  -587,
  1225, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
 -1000, -1000, -1000, -1000, -1000, -1000,  7231, -1000, -1000, -1000,
 -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
 -1000, -1000, -1000,  6037, -1000, -1000, -1000, -1000,  7231,  7231,
  7231,  7231,  7231,  7231,  7231,  7231,  7231,  7231,  7231,  7231,
 -1000, -1000, -1000, -1000,  8787,  8787,  8787,  8787,  8787,  8787,
 -1000, -1000,  8787, -1000,  8787,  8787,  4897,  7231,  7231,  7231,
  7231,  7231,   337,  7231,  7231,  8787,  1825, -1000, -1000,  6453,
  6453,  6453, -1000, -1000,   245, -1000,   111, -1000, -1000, -1000,
 -1000, -1000,  9127, -1000, -1000, -1000, -1000,   245, -1000, -1000,
 -1000,  7231,  7231, -1000,  7231,  7231,    72,  7231, -1000, -1000,
 -1000, -1000, -1000,  -496,  7231, -1000,  -178, -1000, -1000, -1000,
 -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
 -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,  -196,
 -1000,   598, -1000, -1000, -1000,  -178,  -178,   650,   648,   644,
   641,  -123,   640,   639,   632,  -176, -1000,  -178,  -178,  -178,
   245,  -350,  3442,   245, -1000, -1000, -1000, -1000,   631,   630,
  3442,   111, -1000, -1000,   598,   111,  5803,   598,   627,   111,
   111,   111,   111,  8787,   111,   111,   111,  8787,   626,   625,
   620,   276,   276, -1000,   228,  8787, -1000, -1000,   245,   245,
 -1000, -1000, -1000,  8787,   311,   619,   616,   615,   610,   609,
   608,   607,   605,  -113,  -114,  6453,   596,  3442,   535,   534,
   210,   210,   210,   111,   276,   276,   276,   339,   338,   313,
 -1000, -1000,  2942,  -133,  8787,   598,   598,   598,   598,   598,
   598,   598,   598,   598,   598,   598,   598,   598,   598,   598,
   598,   598,   604,   603,  8787,  4508,  8787,  8787,  5675,  6453,
  6453,  3442,   530,   530,   210,   210,   210,   210,   447,   447,
   447,   447,   447,   447,    47,    47,    47,    47,    47,  3442,
  3442,  3442,  3442,  3442,  3442,  3442, -1000,  8787, -1000,  3388,
  8787,  8787,   111,  8787,   360, -1000, -1000,  3442,   594, -1000,
 -1000,   160,   111,  8787,  3060,  3029,  3442, -1000,  7231,  -270,
 -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
 -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
 -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,  7231,  7231,
  7231,  -229,  -270,  7231,  -439,  -413,  -401,   -65,  2070, -1000,
 -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
 -1000, -1000,  3442,  8787,  7231,  -436,  7231,  7231,  7231,  7231,
 -1000,  3442,  7231, -1000, -1000,  -234,  7231,  6064, -1000,  -270,
 -1000,  3590, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
 -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
 -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
 -1000, -1000, -1000,  7231,  7231,  7231,  7231,  1225, -1000,  3896,
  1608,  -229,  7231, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
 -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
  -433,  7231,  7231,  7231,  7231,  -110,  3442,  7231, -1000, -1000,
 -1000, -1000, -1000, -1000, -1000,  -110,  3442,  3442,  3442,  3442,
  3442,  3442,  3442,  7231,  7231,  7231,  7231, -1000, -1000, -1000,
   598, -1000,   598,   598, -1000, -1000, -1000, -1000, -1000, -1000,
 -1000, -1000, -1000, -1000, -1000, -1000,   598,  3442,  3442,  3442,
  3442,  3442,  3442,  8787,  8787,  3442,   276,  6453, -1000,  3442,
 -1000, -1000,  5286, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
  7231,  7231, -1000, -1000, -1000,  5085, -1000, -1000,  7231,  7231,
  7231,  7231,  7231,    72,  7231,  8787,  7231,  7231,  7231,  7231,
  8787,  6453,  6453, -1000,  3442,   228, -1000, -1000,   245,   245,
 -1000,   310, -1000, -1000,  6453,  6453,  6453, -1000, -1000, -1000,
   598, -1000,  -178, -1000,  -364,   598,   598,  8787, -1000, -1000,
 -1000, -1000,   598,  -159,  -159,  8787,  8787,  8787,  8787,   258,
 -1000, -1000, -1000,  -141,   -51,   -58, -1000, -1000, -1000, -1000,
 -1000,  7231, -1000,  6453,  8787,  8787,   591, -1000,   590,   589,
 -1000,  -123,   588,   582,   581,   580,   531,   522,   512,   506,
  2631,  8787,  8787,  8787, -1000, -1000,  8787,  2233, -1000, -1000,
  2306,  -288,   245,  6453,  6453,  6453,  6453,  6453,  6453,  6453,
  3311,  -432,  -117, -1000,  8787,  8787,   579,   228,   228,   228,
   602,   -36,   600,   -62,   111, -1000,   355,   355, -1000,   243,
  2288, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
 -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,  8787,  8787,
  2025,   578,  1975, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
  1836,  1634,   577,  1302, -1000, -1000, -1000, -1000,   599,    35,
  -415,   532,  3442, -1000,  3442,   574,  1263,   573,   505,  1177,
  3338, -1000, -1000,   -31, -1000, -1000,   160, -1000,  1064,  6453,
  6453, -1000,  7231,  7231,  7231,  7231,  7231,  7231,  7231,  7231,
 -1000, -1000, -1000,  7231,  -439,  -413,  -401,   -65,  2070, -1000,
  7231,  7231,  7231,  7231,  7231,  7231,  7231,  7231,  7231,  7231,
  7231,  7231,  7231,  7231,  7231,  7231,  7231,  7231,  7231,  7231,
  7231,  7231,  7231,  7231,  7231,  7231,  7231,  7231,  7231,  7231,
  7231,  7231,  7231,  7231,  7231,  7231,  7231,  7231,  3442, -1000,
  7231,  7231,  7231,  7231, -1000, -1000, -1000, -1000, -1000, -1000,
 -1000, -1000, -1000,  8787, -1000,  3981, -1000, -1000, -1000,  7231,
 -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,  7231,  7231,
  7231,  7231, -1000, -1000, -1000, -1000,  7231,  -544, -1000, -1000,
 -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
   504,   504,   228, -1000, -1000, -1000, -1000, -1000, -1000,  6453,
  6453,  6453,  6453,  6453,   245,   245,   245, -1000,   111, -1000,
  -194,  -191, -1000, -1000, -1000, -1000, -1000,   254,  3442, -1000,
 -1000, -1000, -1000,  3442, -1000, -1000, -1000, -1000,  -295, -1000,
  -499,  -506, -1000, -1000,   598, -1000, -1000,  3442, -1000,  -159,
 -1000,  7231,  7231,  7231,    72,  7231,  8787,  7231,  7231,  7231,
  7231,  -159,   500,   494,   492,   572,   228,  8009,   571,   488,
   480, -1000, -1000,   570,   568, -1000, -1000, -1000,   478, -1000,
 -1000, -1000, -1000,  8787,  8787,  8787,  8787, -1000,   566,  1089,
  1028,   995,   984, -1000, -1000,   245,   472,   471,   470,   466,
   464,   443,   439,   438, -1000, -1000, -1000, -1000, -1000, -1000,
 -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
 -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
 -1000, -1000, -1000, -1000, -1000, -1000, -1000,  3728,  3442,  3442,
 -1000,  -120, -1000, -1000,  -120, -1000, -1000, -1000,  -153,  -124,
  8787,   156,  8787,   565,   564, -1000, -1000, -1000, -1000, -1000,
 -1000, -1000,   598,   245,  6453,   598, -1000, -1000,  8787, -1000,
  8787,  8787,   345,  3338,  3338, -1000,   160, -1000, -1000, -1000,
 -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
 -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
 -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
 -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
 -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
 -1000,   340,  3442,  7231,  -229, -1000, -1000, -1000, -1000, -1000,
 -1000,  6453, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
   305, -1000,  7231,  7231,  8787,   245,  6453,  6453, -1000, -1000,
 -1000, -1000, -1000, -1000, -1000,   233,  3442, -1000, -1000, -1000,
 -1000,  -123,  -123,  -146, -1000,   335,   330, -1000,  -147,  -149,
 -1000, -1000,    25,   973,   881,   676,   476, -1000,   111,  8787,
  8787, -1000,   370,   245,   245,   245,   245,   245,  6453,  6453,
  6453, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,  3442,
  8787,   524, -1000,   501,  2546, -1000,   409, -1000,   232,  -136,
  3442, -1000,   185, -1000, -1000, -1000,  -652,  -366,  -509,   386,
  3442,   270,   563,  3338, -1000, -1000,  3338, -1000,   -57, -1000,
  8787, -1000, -1000,  -296, -1000, -1000,   322,   369, -1000, -1000,
  8787,   428,   427,   562,   171,   171,   426,   421,   496, -1000,
  7231,  7231,  7231,  7231,  7231,  7231,  7231, -1000, -1000, -1000,
  8787, -1000, -1000,   419, -1000,   561,   560,  8787,   558,   557,
   555,   554,   553,   551,   545,   543,  3442, -1000,  -125, -1000,
 -1000,  -124,  -129,   228,  7620, -1000,   152,  8787,  7231,   598,
  6453,  8787,  8787, -1000,   542, -1000, -1000, -1000,  3338, -1000,
  3442,   245, -1000,  8787,   272,   111,   111, -1000, -1000, -1000,
  -151,  -155,    25, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
 -1000,   598,   598,   119,   111, -1000, -1000,  3442, -1000, -1000,
 -1000, -1000, -1000, -1000, -1000, -1000,   175, -1000,   175,   409,
 -1000,   231,   329,   327, -1000,    59,  -657, -1000,  -368,  3442,
   386,  3338, -1000, -1000,  3338,   362,  3442, -1000,   463, -1000,
   416,   540,   450, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
 -1000,   228,  6842,   171,   171,   147,  6453,   598, -1000, -1000,
 -1000,  8787, -1000,   111, -1000, -1000, -1000,   320,   316, -1000,
 -1000, -1000, -1000, -1000, -1000, -1000,  3442, -1000,   171,   171,
 -1000, -1000 };
yytabelem yypgo[]={

     0,   256,   920,   948,     0,    57,   736,   919,     1,    18,
   716,   906,   905,   320,    46,   904,    43,   903,   902,    12,
   740,   901,   122,   900,    13,   897,   894,   893,   892,   891,
   883,   876,   875,   870,   869,   137,    39,   868,   250,   867,
   866,   865,   864,   254,   129,   863,   194,   861,   859,   858,
   857,   852,   832,   253,    54,    47,    44,    41,    37,    36,
   831,   829,   136,   826,   252,    22,    15,   825,    80,    77,
    71,    70,    66,    74,   819,   814,   125,   813,   811,   808,
   804,   278,   800,   799,     3,    21,    25,   795,    24,    27,
   794,     9,   793,   792,   780,    23,   771,    65,   761,    40,
    30,   121,   760,   759,     6,    42,   539,    19,     8,     5,
    20,   754,    14,   753,    11,   752,     7,    38,     4,  1007,
   195,    16,    35,    26,   751,   750,   749,   746,   745,   744,
   743,   742,   739,   737 };
yytabelem yyr1[]={

     0,   124,   124,   124,   124,   124,   124,    89,    25,    25,
    25,    25,    25,    26,    26,    26,    26,    26,    26,    26,
    26,    26,    26,    26,    26,    26,    26,    26,    26,    26,
    26,    26,    27,    27,    27,    27,    28,    28,    28,    28,
    28,    37,    37,    37,    37,    37,    37,    37,    37,    39,
    39,    40,    40,    40,    40,    40,    40,    40,    40,    40,
    38,    38,    38,    38,    38,    38,    38,    38,    99,    99,
    99,    99,    99,    99,    99,    43,    43,    43,    43,    43,
    43,    43,    43,    43,    43,    67,    67,    73,    73,    73,
    73,    74,    74,    74,    64,    64,    64,    64,    65,    65,
    66,    66,    66,    66,    66,    66,    66,    66,    66,    66,
    66,    66,    97,    97,    97,    97,    97,    97,    97,    68,
    68,    69,    69,    69,    70,    70,    70,    70,    70,    72,
    72,    72,    72,    72,    72,    72,    72,    72,    72,    72,
    72,    72,    72,    72,    72,    72,    72,    72,    72,    71,
    71,    71,    71,    71,    71,    71,    71,    71,    71,    71,
    71,    71,    95,    95,    95,    95,    95,    95,    95,    95,
    95,    95,    95,    95,    95,    95,    95,    95,    95,    95,
    95,    95,    95,    95,    95,    95,    95,    95,    95,    95,
    41,    41,    41,    41,    45,    45,    93,    93,    93,    93,
    93,    93,    42,    42,    42,    42,    42,    42,    42,    42,
    48,    48,    48,    48,    48,    48,    48,    48,    48,    48,
    48,    51,    51,    50,   100,   100,   101,   101,   101,   101,
   101,   101,   101,   101,   101,   101,   101,   101,   101,    49,
    49,    49,    49,    49,    49,    92,    92,    92,    92,    92,
    92,    92,    92,    92,    92,    92,    92,    92,    92,    92,
    92,    92,    92,    92,    92,    92,    92,    92,    92,    92,
    92,    92,    47,    47,    47,    47,    98,    98,    98,    98,
   114,   114,    44,    44,    44,    44,    44,    44,    44,    44,
    44,    44,    53,    53,    53,    53,    53,    52,    52,    52,
    52,    96,    96,    96,    96,    96,    96,    96,    96,    96,
    96,    96,    96,    96,    96,    96,    29,    29,    46,    46,
    46,    46,    46,    46,    46,    46,    46,    46,    46,    46,
    46,    46,    46,    46,    46,    46,    46,    30,    30,    30,
    30,    30,    30,    30,    30,    30,    30,    30,    30,    30,
    33,    33,    33,    33,    33,    33,    33,    31,    31,    31,
    31,    31,    31,    31,    31,    31,    32,     6,     6,     6,
     6,     6,     6,     6,    24,    24,    24,     5,     5,     5,
     5,     5,     5,     5,     5,     5,     5,     5,     5,     5,
     5,     5,     5,     5,     5,     5,     5,     5,     5,     5,
     5,     5,     5,     5,     5,     5,     5,     5,     5,     5,
     5,     5,     5,     5,     5,   125,     5,     5,     5,     5,
     5,     5,     5,     5,     5,     5,     5,     5,     5,     5,
     5,     5,    83,    83,    84,    84,    84,    84,    84,    84,
    84,    84,    84,    94,    94,    94,    94,    54,    54,    54,
    54,    54,    54,    55,    55,    55,    55,    55,    55,    55,
    55,    55,    55,    55,    55,    55,    55,    55,    55,    55,
    55,    55,    55,    55,    55,    55,    55,    55,    55,    55,
   103,   103,   103,   103,   103,   123,   123,    59,   102,   102,
   102,   102,   102,   102,   102,   122,   122,    58,    56,    57,
    82,    82,    82,    82,    82,    82,    82,    82,    82,    82,
    82,    82,    82,    82,    82,    82,    82,    82,    82,    82,
    82,    82,    82,    82,    60,    60,    60,    60,    60,    60,
    60,    60,    60,    60,    60,    60,    60,    60,    60,    60,
    60,    60,    60,    34,    34,    35,    35,    35,    35,    35,
    35,    35,    35,    36,    36,    86,    86,    85,    85,    85,
    85,    85,    85,    85,    85,    85,    85,    85,    87,    87,
    87,    87,    87,    87,    87,    87,    87,    87,    87,    87,
    61,    61,    62,    62,    62,    62,    62,    62,    62,    62,
    62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
    62,    62,    62,    62,    62,    62,    62,    62,    16,    10,
    11,    19,    18,    12,    21,    21,    22,    22,    22,    22,
    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,
    22,    22,    22,    22,    22,    23,    23,    75,    75,    76,
    76,    76,    76,    77,    77,    13,    14,     8,     8,     9,
     9,     4,     4,     4,     4,     4,     4,     4,     4,     4,
     4,     4,     4,     4,     4,     4,     4,     4,     4,     4,
     4,     4,     4,     4,     4,     4,     4,     4,     4,     4,
     4,     4,     4,     4,     4,     4,     4,     4,     4,     4,
     4,     4,     4,     4,     4,     4,     4,     4,     4,     4,
     4,     4,     4,     4,     4,     4,     4,     4,     4,     4,
     4,     4,     4,     4,     4,     4,     4,     4,     4,     4,
     4,     4,     4,    17,    17,     2,     2,     1,     1,     3,
     3,    20,    20,    20,    20,    20,    20,    20,    20,     7,
     7,   110,   110,   111,   111,   116,   116,   112,   112,   113,
   113,   126,   127,    15,   128,   129,    15,    15,    15,    15,
   117,   117,   119,   119,   120,    81,    81,    81,   121,   121,
    79,    79,    79,    79,    79,    79,    79,    79,    79,    79,
    79,    79,    79,    79,    79,    79,    79,    79,    79,    79,
    79,    79,    79,    79,    79,    79,    79,    78,    78,    78,
    78,    80,    80,    80,    80,    80,    80,    80,    80,    80,
    88,    88,    88,    88,    63,    63,    63,    90,    91,    91,
   105,   105,   105,   106,   118,   118,   118,   107,   107,   107,
   104,   108,   108,   130,   108,   108,   108,   108,   131,   108,
   108,   132,   115,   133,   115,   109,   109 };
yytabelem yyr2[]={

     0,     1,     5,     7,     7,     7,     7,     3,     3,     5,
     5,     7,     7,     5,     5,     3,     5,     5,     3,     3,
     5,     5,     5,     5,     5,     5,     5,     5,     5,     5,
     3,     3,     3,     7,     7,     7,     3,     7,     7,     7,
     5,     5,     5,     5,     5,     7,     7,     7,     7,     3,
     5,     1,     5,     5,     5,     5,     7,     7,     7,     7,
     3,     5,     7,     7,     9,     5,     5,     5,     3,     3,
     3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
     3,     3,     3,     7,     5,     3,     3,     3,     3,     3,
     3,     3,     7,     5,     3,     7,     5,     5,     3,     5,
     5,     3,     3,     3,     3,     3,     7,     5,     5,     5,
     5,     5,     3,     3,     3,     3,     3,     3,     3,     3,
     7,     3,     7,     7,     3,     7,     7,     7,     7,     3,
     7,     7,     7,     7,     7,     7,     7,     7,     7,     7,
     7,     7,     7,     7,     7,     7,     7,     7,     7,     3,
     7,     7,     7,     7,     7,     7,     7,     7,     7,     7,
     7,     7,     3,     3,     3,     3,     3,     3,     3,     3,
     3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
     3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
     3,     3,     5,     3,     5,     7,     3,     3,     3,     3,
     3,     3,     7,    11,    19,    11,    15,    15,    19,     5,
     5,     5,     5,     7,     7,    11,     7,     5,     5,     5,
     5,     3,     3,     5,     3,     3,     3,     3,     3,     3,
     3,     3,     3,     3,     3,     3,     3,     3,     3,     5,
     5,     5,     5,     5,     7,     3,     3,     3,     3,     3,
     3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
     3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
     3,     3,     5,     5,     5,     5,     3,     3,     3,     3,
     3,     7,     5,     5,     7,     7,     7,     7,     7,     7,
     7,     7,     3,     3,     3,     3,     3,     7,     7,     5,
     5,     3,     3,     3,     3,     3,     3,     3,     3,     3,
     3,     3,     3,     3,     3,     3,     3,     5,     3,     7,
     7,     5,     5,     5,     5,     5,     5,     5,     5,     5,
     5,     5,     5,     7,     3,     3,     3,     5,     5,     5,
     5,     5,     5,     7,     7,     5,     7,     7,     5,     5,
     5,     5,     7,     5,     7,     5,     7,     5,     5,     5,
     5,     5,     7,     7,     5,     5,     5,     7,     7,     7,
     7,     7,     7,     7,     1,     9,     9,     3,     3,     5,
     7,     7,     3,     3,     3,     9,     5,    11,    11,    15,
    21,     3,     3,     9,     9,    15,     9,    15,    17,    19,
    21,     3,     5,     5,     3,     5,     5,     5,     3,     5,
    19,    19,    15,    11,     9,     1,    15,    15,    11,    19,
    19,     5,     5,     7,     9,     5,     5,     5,    11,    11,
     3,     5,     3,     7,     5,     5,     5,     5,     5,     5,
     5,     7,     7,     3,     3,     3,     3,     3,     3,     3,
     3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
     3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
     3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
     3,     3,     3,     3,     3,     3,     9,     9,     3,     3,
     3,     3,     3,     3,     3,     3,     9,     9,     9,     9,
     7,     7,     5,     5,     5,     7,     7,     5,    15,     5,
     3,     9,     9,     9,     9,     9,     9,     9,     9,    19,
     9,     7,     5,     5,     7,     7,     7,     7,     7,     7,
     7,     7,     7,     7,     7,     7,     7,     7,     7,     7,
     7,    11,    11,     3,     5,     5,     3,     3,     7,     5,
     7,     5,     7,     9,     9,     3,     5,     5,     5,     5,
     5,     5,    11,     5,     5,     5,     5,     5,     5,     5,
     5,     5,     5,    11,     5,     5,     5,     5,     5,     5,
     3,     5,     7,    11,    11,     5,     3,     3,     3,     5,
     5,     7,     5,     5,     7,     5,     5,     9,     3,     7,
     7,     3,     3,     7,     3,     5,     3,     5,     3,     7,
     3,     3,     3,     3,     3,     9,     3,     3,     3,     3,
     3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
     3,     3,     3,     3,     3,     3,     3,     3,     5,     5,
     5,     5,     5,     3,     7,     1,     1,     7,    13,     1,
     7,     3,     3,     3,     9,     3,     3,     3,     5,     5,
     5,     5,     3,     7,     9,     9,     7,    15,     9,     9,
     9,     9,    13,    17,    13,    13,     9,    11,    15,    15,
     3,     7,     7,     5,     5,     5,     7,     7,     5,    15,
    15,    15,    15,    15,    15,    15,    15,    15,     9,     9,
    11,     7,     7,     7,     7,     7,     7,     7,     5,     5,
     7,     7,     7,     7,     7,     7,     7,     7,     7,     7,
     7,     5,     9,     3,     9,     7,     7,     3,     3,     3,
     5,     3,     7,     3,     3,     7,     3,     7,     3,     3,
     7,     3,     7,     7,    11,     3,     7,     3,     7,     3,
     7,     1,     1,    17,     1,     1,    17,     9,     9,     9,
     7,     9,     3,     3,     3,     3,     3,     7,     5,     7,
     3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
     3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
     3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
     3,     3,     3,     3,     3,     3,     3,     3,     3,     5,
     3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
     1,     3,     7,     7,    11,    15,    19,     1,     3,     7,
     5,     3,     5,     1,    11,    11,     7,     9,     1,    15,
    15,     1,     7,     1,    11,     3,     7 };
yytabelem yychk[]={

 -1000,  -124,   -89,    -6,    -5,    -4,   256,    59,   -20,   284,
   283,   275,   -15,   285,   281,   269,   259,   260,   261,   262,
   -18,   294,   295,   -11,   -12,   -21,    -8,   296,   297,   -25,
   462,   328,   341,   -60,   342,   289,   290,   291,   292,   312,
   -94,   325,   326,   715,   461,   713,   494,   495,   711,   712,
   257,   274,  -118,   313,   340,   258,   304,   305,   282,   288,
   565,   276,   635,   642,   643,   644,   645,   268,   270,   271,
   272,   273,   265,   266,   267,   -17,   -54,  -122,   -58,   -56,
   -57,   -55,  -123,   -59,   329,   585,   586,   587,   588,   589,
   590,   591,   592,   402,   509,   506,    40,    45,    43,   735,
   320,   314,   318,   307,   310,   286,   287,   293,   278,   279,
   300,   123,   -42,   382,   383,   384,   385,   396,   397,   386,
   400,   389,   395,   391,   390,   392,   388,   399,   387,   401,
   393,   394,   321,   322,   323,   324,   298,   299,   330,   331,
   332,   333,  -101,   516,   535,   536,   352,   353,   354,   355,
   356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
   366,   367,   368,   369,   370,   371,   372,   373,   374,   378,
   379,   380,   381,   375,   583,   582,   702,   615,   616,   617,
   618,   619,   620,   621,   622,   623,   625,   628,   629,  -100,
   626,   627,   -89,   -89,   -89,    43,    45,    42,    47,    37,
    94,   727,   728,   729,   730,   731,   732,   723,   722,   725,
   726,   724,   -89,    61,   716,   717,   718,   719,   720,   721,
   304,   305,    -4,    -6,   123,   275,   -13,   -13,    40,    -7,
    -4,   -13,   -13,   -13,    40,   -10,    40,   -10,   -24,   506,
   301,   302,   -16,    -4,   -16,   -41,   -26,   704,   703,   -43,
   -64,   -93,   -45,   423,   424,   -48,   509,   -65,   -52,   431,
   425,   426,   428,   429,   430,   505,   504,   503,   502,   -27,
   -28,   511,   512,   513,   514,   615,   620,   623,   624,   -67,
   572,   575,   573,   574,   666,   667,   581,   427,   520,   -53,
   578,   579,   516,   -73,   442,   443,   448,   446,   445,   627,
   618,   616,   655,   -29,   -46,   -30,   471,   434,   487,   488,
   472,   475,   480,   476,   477,   481,   482,   483,   491,   479,
   492,   -33,   -31,   -32,   463,   464,   465,   467,   468,   466,
   474,   473,   -53,   506,   469,   486,   435,   489,   490,   500,
   501,   478,   580,   485,   484,   327,   -82,   -54,  -122,   -58,
   -56,   -57,   -55,  -123,   -59,   329,   334,   -88,   275,   282,
   283,   276,   -61,   -62,   405,   582,   404,   402,   -22,   411,
   403,   -63,   406,   407,   408,   409,   339,   415,   410,   434,
   398,   593,   506,   462,   421,   422,   348,   423,   424,   427,
   509,   -53,   425,   426,   428,   429,   430,   505,   504,   503,
   502,   431,   578,   453,   647,   646,   412,   413,   414,   -34,
   -35,   -13,   343,   345,   344,   346,   347,   -13,   -13,   -13,
   -13,   -13,   -13,   -13,   -13,   -75,   -76,   346,   347,   348,
   402,   -77,    -4,   402,   506,   314,   275,   714,   714,   714,
    -4,    40,   -20,   -20,   -13,    40,    40,   -13,   -13,    40,
    40,    40,    40,    40,    40,    40,    40,    40,   -13,   -13,
   -13,   -13,   -13,  -120,  -117,    91,  -120,  -120,   -13,   -13,
   -81,   -20,   257,    40,   -13,   -13,   -13,   -13,   -13,   -13,
   -13,   -13,   -13,   -81,   -81,   -13,    -1,    -4,    -2,    -5,
    -4,    -4,    -4,    40,   -13,   -13,   -13,   -88,   -88,   -23,
   -22,   402,    -9,   -13,   123,   -13,   -13,   -13,   -13,   -13,
   -13,   -13,   -13,   -13,   -13,   -13,   -13,   -13,   -13,   -13,
   -13,   -13,   -13,   -13,    40,    40,    40,    40,    40,   -13,
   -13,    -4,    -4,    -4,    -4,    -4,    -4,    -4,    -4,    -4,
    -4,    -4,    -4,    -4,    -4,    -4,    -4,    -4,    -4,    -4,
    -4,    -4,    -4,    -4,    -4,    -4,  -106,    40,  -106,    -4,
    44,    40,    40,    40,   -19,    -1,    -5,    -4,    -1,    -5,
    -5,  -121,    63,    91,    -4,    -4,    -4,   -20,   -95,   -44,
   564,   666,   707,   708,   709,   678,   679,   680,   681,   682,
   683,   684,   685,   686,   687,   676,   433,   533,   693,   694,
   568,   569,   690,   691,   688,   689,   611,   571,   606,   610,
   -95,   -66,   -44,   -97,   -68,   -69,   -70,   -71,   -72,   517,
   518,   519,   534,   531,   532,   515,   529,   526,   535,   537,
   547,    -3,    -4,    61,   460,   -37,   496,   497,   498,   706,
   -39,    -4,   497,   663,   664,   459,   -92,   -98,   -47,   -44,
   -50,   -49,   666,   665,   661,   662,   669,   707,   670,   671,
   698,   697,   674,   675,   452,   449,   450,   451,   433,   676,
   677,   672,   673,   647,   646,   453,   457,   611,   571,   657,
   658,   659,   660,   648,   649,   650,   651,   654,   652,   -43,
   -64,   -66,   -96,   494,   495,   433,   497,   439,   440,   441,
   493,   657,   656,   460,   609,   608,   607,   571,   447,   484,
   -40,   497,   496,   576,   505,   -38,    -4,   -99,   692,   497,
   697,   707,   681,   699,   700,   -38,    -4,    -4,    -4,    -4,
    -4,    -4,    -4,   668,   695,   696,   707,  -101,    -3,   -13,
   -13,   -46,   -13,   -13,    -3,    -3,    -3,    -3,    -3,    -3,
    -3,    -3,    -3,    -3,    -3,    -3,   -13,    -4,    -4,    -4,
    -4,    -4,    -4,   -13,   -13,    -4,   -13,   -13,   -16,    -4,
    -3,   437,    61,   438,   436,    -3,    -3,    -3,    -3,    -3,
  -101,   516,    -3,    -3,   -16,    44,   -36,   -87,   335,   336,
   337,   338,   344,   339,   406,   493,   416,   417,   418,   419,
   420,   -13,   -13,  -119,    -4,  -117,  -119,  -119,   -13,   -13,
   -81,   -13,   -20,   -62,   -13,   -13,   -13,   -81,    -3,    -3,
   -13,    -3,    -3,   -88,    -3,   -13,   -13,   583,    -3,   -36,
   -35,  -106,   -13,   -36,   -36,    40,    40,    40,    40,   -91,
   -90,   314,   275,    40,    40,    40,   -76,   -36,   -36,   -36,
   -81,   460,   -81,   -13,    40,    40,   -20,  -106,   -20,   -22,
  -106,    40,   -20,   -20,   -20,   -20,   -16,   -20,   -20,   -20,
    -4,    40,    40,    40,  -120,  -120,    91,    -4,   -81,   -81,
    -4,    64,    40,    40,    40,    40,    40,    40,    40,    40,
   306,   306,  -119,    41,    44,    44,   -20,  -117,  -117,  -117,
  -126,    61,  -128,    61,    63,   125,    -5,  -115,   308,  -105,
    -4,  -106,  -106,  -106,  -106,  -106,  -106,  -106,  -106,  -106,
  -106,  -106,  -106,  -106,  -106,  -106,  -106,  -106,    40,    40,
    -4,  -102,    -4,   666,   331,   521,   522,   523,   538,   537,
    -4,    -4,  -103,    -4,   666,   331,   376,   377,   516,  -119,
  -119,  -105,    -4,    41,    -4,  -110,    -4,  -111,   -20,    -4,
    59,   -14,    41,   -14,   -14,   -24,  -121,   -20,    -4,   506,
   506,    -3,   611,   612,   613,   460,   641,   640,   571,   687,
    -3,    -3,    -3,   -97,   -68,   -69,   -70,   -71,   -72,    -3,
   530,   527,   528,   527,   672,   524,   525,   538,   540,   541,
   543,   544,   545,   690,   691,   611,   376,   542,   546,   539,
   548,   549,   550,   555,   556,   688,   689,   557,   558,   559,
   554,   560,   552,   551,   553,   561,   562,   563,    -4,    -3,
   496,   497,   498,   706,    -3,    -3,    -3,    -3,    -3,   -51,
   329,   516,    -3,    91,    -3,   -74,   615,   620,   623,   -95,
   -73,    -3,    -3,    -3,    -3,  -101,   -13,    -3,   497,   496,
   576,   667,    -3,    -3,    -3,    -3,   -99,   653,   663,   664,
   701,    -3,    -3,    -3,    -3,    -3,  -106,  -106,  -106,  -106,
  -105,  -105,  -117,  -119,   437,   438,   436,    -3,    -3,   -54,
  -122,   -58,   -56,   -57,   -55,  -123,   -59,   329,   334,   -88,
    -3,    -3,    -3,    -3,    -3,   -88,    -3,   -13,    -4,    -3,
    -3,    -3,    -3,    -4,  -119,  -119,   -81,   -81,    64,  -119,
  -119,  -119,  -106,   -36,   471,  -106,  -106,    -4,  -106,   -86,
   -85,   337,   338,   344,   339,   406,   493,   416,   417,   418,
   419,   -86,   -16,   -16,   -16,   -16,  -117,    91,   314,   282,
   282,    -3,  -119,   -16,   -16,    41,    41,    41,   -91,    41,
    41,    41,    41,    44,    44,    44,    44,    41,  -112,    -4,
    -4,    -4,    -4,    93,    41,   423,   -81,  -119,  -119,  -119,
  -119,  -119,  -119,  -119,   -79,   564,   565,   567,   704,   496,
   590,   591,   497,   498,   572,   573,   575,   706,   598,   599,
   600,   601,   602,   603,   604,   605,   453,   454,   455,   456,
   458,   702,   -78,   564,   565,   566,   570,   306,    -4,    -4,
    41,    40,   282,   276,    40,   283,   -20,   -89,   -89,  -132,
    44,   125,    58,  -110,  -110,    41,    41,    41,    41,    41,
    41,    41,   471,    58,   584,   471,    41,    41,    44,    41,
    44,    44,   -19,   280,   -14,   -24,  -121,    93,  -119,  -119,
    -3,    -3,    -3,    -3,    -3,    -3,    -3,    -3,    -3,    -3,
    -3,    -3,    -3,    -3,    -3,    -3,    -3,    -3,    -3,    -3,
    -3,    -3,    -3,    -3,    -3,    -3,    -3,    -3,    -3,    -3,
    -3,    -3,    -3,    -3,    -3,    -3,    -3,    -3,    -3,    -3,
    -3,    -3,    -3,    -3,    -3,    -3,    -3,    -3,    -3,    -3,
    -3,  -114,    -4,   -95,   -65,    -3,    -3,    -3,    -3,    -3,
    -3,  -100,  -119,  -119,  -119,  -119,  -119,   -81,   -81,   -81,
   -13,   -20,   336,   335,    91,   423,   584,   584,  -106,   -85,
    -3,    -3,    -3,   -88,    -3,   -13,    -4,    -3,    -3,    -3,
    -3,    44,    44,    44,    41,  -125,    93,    41,    44,    44,
    41,    41,    44,    -4,    -4,    -4,    -4,    41,    44,    44,
    44,    93,   -81,    44,    44,    44,    44,    44,    44,    44,
    44,   -80,   594,   595,   596,   349,   350,   351,   520,    -4,
   427,  -107,   307,  -107,    -9,   308,  -108,   310,  -104,   312,
    -4,   125,    -4,    41,    41,  -106,   -81,  -119,  -106,  -116,
    -4,    -4,  -110,    59,    -5,    -5,   -14,   -24,  -121,    93,
    44,    -3,  -119,    64,    -3,    -3,  -114,   -81,  -119,  -119,
    91,   -91,   -91,   314,    61,    61,   314,   314,   -83,   -84,
   611,   636,   637,   568,   639,   460,   638,   406,   434,    41,
    44,    41,    41,  -113,   -20,  -112,  -112,    58,   -81,   -81,
   -81,   -81,   -81,  -119,  -119,  -119,    -4,    41,    44,    41,
   125,  -133,    44,  -117,    91,   310,   125,    58,   707,   471,
   584,    44,    44,    41,   -19,   -14,   -14,    -5,   -14,   -24,
    -4,   423,    93,    58,  -114,    44,    44,    41,  -118,  -118,
    44,    44,    44,    41,    -3,    -3,    -3,    -3,    -3,    -3,
    -3,   -13,   -13,    -4,    44,    41,    41,    -4,    41,    41,
    41,    41,    41,    41,    41,    41,  -127,   307,  -129,  -108,
   310,  -104,  -130,    93,   125,    -4,    -3,  -106,  -119,    -4,
  -116,    41,   -14,    -5,   -14,   -81,    -4,    93,  -109,   -20,
  -109,   314,   314,   -84,  -106,  -106,    41,   -20,    -8,   123,
    -8,  -117,    91,    61,    61,   125,   710,   471,    -5,   -14,
    -5,    58,    41,    44,    41,    41,    41,  -131,    93,  -118,
  -118,   125,  -119,  -106,   -14,   -14,    -4,   -20,    61,    61,
  -118,  -118 };
yytabelem yydef[]={

     1,    -2,     2,   662,     0,     0,     0,     7,   657,   378,
   645,    -2,   382,   383,   384,     0,     0,   645,   645,   645,
     0,   391,   392,     0,     0,   374,   401,     0,     0,   404,
     0,     0,     0,   408,   645,   645,   645,   645,   645,   645,
   645,   645,   645,     0,     0,     0,     0,     0,   430,     0,
   651,   652,   653,     0,   655,   656,     0,     0,   645,     0,
     0,   645,   645,     0,     0,     0,     0,     0,     0,     0,
     0,     0,   645,   645,   645,   680,   645,   645,     0,     0,
     0,   645,   645,     0,    -2,   645,   645,   645,   645,   645,
   645,   645,   645,     0,     0,   645,     0,     0,     0,     0,
     0,    -2,    -2,    -2,   738,     0,     0,   612,   610,   613,
   614,    -2,     8,   645,   645,   645,   645,   645,   645,   645,
   645,   645,   645,   645,   645,   645,   645,   645,   645,   645,
   645,   645,   443,   444,   445,   446,   723,     0,   448,   449,
   450,   451,   452,   495,     0,     0,   453,   454,   455,   456,
   457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
   467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
   477,   478,   479,   485,   645,   645,     0,   226,   227,   228,
   229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
   224,   225,     3,     4,     5,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     6,     0,     0,     0,     0,     0,     0,     0,
   658,   659,   379,   662,     0,   731,     0,     0,     0,   386,
   739,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,   402,   608,   403,     9,    10,     0,     0,   190,
   191,     0,   193,     0,     0,    15,     0,    18,    19,    51,
     0,     0,     0,     0,     0,     0,     0,     0,     0,    30,
    31,    75,    76,    77,    78,    79,    80,    81,    82,    94,
   196,   197,   198,   199,   200,   201,     0,   645,    98,   645,
    32,    36,    85,    86,   292,   293,   294,   295,   296,    87,
    88,    89,    90,   405,   316,   318,   645,   645,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
   645,   334,   335,   336,     0,     0,     0,     0,     0,     0,
   645,   645,   645,   645,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,   406,   645,   645,     0,
     0,     0,   645,   645,     0,    -2,     0,   510,   810,   811,
   812,   813,   407,   580,   645,   645,   645,     0,   586,   587,
   588,     0,     0,   645,     0,     0,     0,     0,   598,   645,
   645,   601,   602,   604,     0,   606,     0,   616,   617,   618,
   619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
   629,   630,   631,   632,   633,   634,   814,   815,   816,    -2,
   543,     0,   546,   547,   645,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,   421,   637,     0,     0,     0,
     0,   422,   643,     0,   645,   425,   426,   427,     0,     0,
   431,     0,   660,   661,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,   683,   764,     0,   684,   685,     0,     0,
   688,   765,   766,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,    -2,   728,     0,
   708,   709,   721,     0,     0,     0,     0,   751,   754,     0,
   635,   636,     0,     0,   820,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,   209,   702,   703,   704,   705,   706,   707,   710,   711,
   712,   713,   714,   715,   716,   717,   718,   719,   720,   367,
   368,   369,   370,   371,   372,   373,   380,   820,   381,     0,
     0,     0,     0,     0,     0,   611,   646,   377,     0,   646,
   646,   374,     0,     0,     0,     0,    11,    12,     0,    84,
   162,   163,   164,   165,   166,   167,   168,   169,   170,   171,
   172,   173,   174,   175,   176,   177,   178,   179,   180,   181,
   182,   183,   184,   185,   186,   187,   188,   189,     0,     0,
     0,    96,    97,     0,   101,   102,   103,   104,   105,   112,
   113,   114,   115,   116,   117,   118,   119,   121,   124,   149,
   129,   192,   729,     0,     0,    13,     0,     0,     0,     0,
    14,    49,     0,   211,   212,     0,     0,     0,   217,   218,
   219,   220,   245,   246,   247,   248,   249,   250,   251,   252,
   253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
   263,   264,   265,   266,   267,   268,   269,   270,   271,   276,
   277,   278,   279,     0,     0,     0,     0,     0,   645,    16,
    17,    99,     0,   299,   300,   301,   302,   303,   304,   305,
   306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
    20,     0,     0,     0,     0,    21,    60,     0,    68,    69,
    70,    71,    72,    73,    74,    22,    23,    24,    25,    26,
    27,    28,    29,     0,     0,     0,     0,    40,   194,   210,
     0,   317,     0,     0,   321,   322,   323,   324,   325,   326,
   327,   328,   329,   330,   331,   332,     0,   337,   338,   339,
   340,   341,   342,   820,   820,   345,     0,     0,   348,   349,
   350,   351,     0,   353,   355,   357,   358,   359,   360,   361,
     0,     0,   364,   365,   366,     0,   522,   523,     0,     0,
     0,     0,     0,     0,     0,   645,     0,     0,     0,     0,
     0,     0,     0,   502,   762,   763,   503,   504,     0,     0,
   507,     0,   509,   581,     0,     0,     0,   585,   589,   590,
     0,   592,   593,   595,   596,     0,     0,     0,   605,   607,
   544,   545,     0,   549,   551,     0,     0,     0,     0,     0,
   818,   819,   817,     0,     0,     0,   638,   639,   640,   641,
   642,     0,   423,     0,     0,     0,     0,   663,     0,     0,
   666,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,   681,   682,     0,     0,   686,   687,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,   701,     0,     0,     0,   732,   735,   737,
     0,     0,     0,     0,     0,   647,     0,     0,   841,     0,
   821,   524,   525,   526,   527,   528,   529,   530,   531,   532,
   533,   534,   535,   536,   537,   538,   539,   540,     0,     0,
     0,     0,     0,   488,    -2,   490,   491,   492,   493,   494,
     0,     0,     0,     0,   480,    -2,   482,   483,    -2,   202,
     0,     0,   821,   385,   740,     0,   741,     0,     0,     0,
     0,   393,   609,   394,   396,   646,   374,   768,     0,     0,
     0,    83,     0,     0,     0,     0,     0,     0,     0,     0,
   282,   283,    95,     0,   107,   108,   109,   110,   111,   100,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,   730,   195,
     0,     0,     0,     0,    41,    42,    43,    44,    50,   213,
   221,   222,   214,     0,   216,   240,   241,   242,   243,     0,
    91,   272,   273,   274,   275,   223,   239,   298,     0,     0,
     0,     0,    52,    53,    54,    55,     0,     0,    65,    66,
    67,    61,    33,    -2,    -2,    39,   297,   319,   320,   333,
   343,   344,   346,   347,   352,   354,   356,   362,   363,     0,
     0,     0,     0,     0,     0,     0,     0,    -2,     0,   521,
     0,     0,   568,   569,   570,   571,   572,     0,   574,   575,
   576,   577,   578,   579,   500,   501,   505,   506,     0,   582,
     0,     0,   591,   594,     0,   599,   600,   603,   548,   550,
   555,     0,     0,     0,     0,     0,   645,     0,     0,     0,
     0,   552,     0,     0,     0,     0,    -2,     0,     0,     0,
     0,   644,   424,     0,     0,   654,   664,   665,     0,   668,
   669,   670,   671,     0,     0,     0,     0,   676,     0,   747,
     0,     0,     0,   760,   767,     0,     0,     0,     0,     0,
     0,     0,     0,     0,   698,   770,   771,   772,   773,   774,
   775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
   785,   786,   787,   788,   789,   790,   791,   792,   793,   794,
   795,   796,   699,   797,   798,   799,   800,     0,   726,   725,
   722,   827,   758,   759,   827,   757,   615,   650,   649,     0,
     0,     0,     0,     0,     0,   724,   496,   497,   498,   499,
   486,   487,     0,     0,     0,     0,   823,   387,     0,   388,
     0,     0,     0,     0,     0,   646,   374,   769,   375,   376,
   284,   285,   286,   287,   288,   289,   290,   291,   106,   120,
   122,   123,   125,   126,   127,   128,   150,   151,   152,   153,
   154,   155,   156,   157,   158,   159,   160,   161,   130,   131,
   132,   133,   134,   135,   136,   137,   138,   139,   140,   141,
   142,   143,   144,   145,   146,   147,   148,    45,    46,    47,
    48,     0,   280,     0,    93,   244,    56,    57,    58,    59,
    62,    63,   511,   512,   513,   514,   515,   516,   517,   518,
     0,   520,     0,     0,     0,     0,     0,     0,   597,   556,
   557,   558,   559,   560,   561,     0,   563,   564,   565,   566,
   567,     0,     0,     0,   413,     0,     0,   418,     0,     0,
   428,   429,     0,     0,     0,     0,     0,   677,     0,     0,
     0,   761,     0,     0,     0,     0,     0,     0,     0,     0,
     0,   700,   801,   802,   803,   804,   805,   806,   807,   808,
     0,     0,   828,     0,     0,   843,   842,   831,     0,     0,
   822,   824,     0,   541,   542,   203,     0,   205,     0,   742,
   745,   743,     0,     0,   646,   646,     0,   646,   374,   215,
     0,    92,    64,     0,   553,   554,     0,     0,   583,   584,
     0,     0,     0,     0,     0,     0,     0,     0,     0,   432,
     0,     0,     0,     0,     0,     0,     0,   645,   645,   672,
     0,   674,   675,   748,   749,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,   809,   752,     0,   755,
   648,     0,     0,    -2,     0,   830,     0,     0,     0,     0,
     0,     0,     0,   389,     0,   395,   397,   646,     0,   646,
   281,     0,   573,     0,     0,     0,     0,   412,   416,   417,
     0,     0,     0,   667,   434,   435,   436,   437,   438,   439,
   440,     0,     0,     0,     0,   678,   679,   689,   690,   691,
   692,   693,   694,   695,   696,   697,     0,   829,     0,   844,
   836,     0,     0,     0,   825,     0,     0,   207,   206,   746,
   744,     0,   398,   646,     0,     0,   508,   562,     0,   845,
     0,     0,     0,   433,   441,   442,   673,   750,   753,    -2,
   756,    -2,     0,     0,     0,     0,     0,     0,   646,   399,
   646,     0,   410,     0,   411,   419,   420,     0,     0,   834,
   835,   826,   204,   208,   390,   400,   519,   846,     0,     0,
   839,   840 };
/* @(#)yaccpar */

/*
** Skeleton parser driver for yacc output
*/

/*
** yacc user known macros and defines
*/
#define YYERROR		goto yyerrlab
#define YYACCEPT	return(0)
#define YYABORT		return(1)
#define YYBACKUP( newtoken, newvalue )\
{\
	if ( yychar >= 0 || ( yyr2[ yytmp ] >> 1 ) != 1 )\
	{\
		yyerror( "syntax error - cannot backup" );\
		goto yyerrlab;\
	}\
	yychar = newtoken;\
	yystate = *yyps;\
	yylval = newvalue;\
	goto yynewstate;\
}
#define YYRECOVERING()	(!!yyerrflag)
#ifndef YYDEBUG
/*#	define YYDEBUG	1	/* make debugging available */
#endif

/*
** user known globals
*/
int yydebug;			/* set to 1 to get debugging */

/*
** driver internal defines
*/
#define YYFLAG		(-1000)

/*
** global variables used by the parser
*/
YYSTYPE yyv[ YYMAXDEPTH ];	/* value stack */
int yys[ YYMAXDEPTH ];		/* state stack */

YYSTYPE *yypv;			/* top of value stack */
int *yyps;			/* top of state stack */

int yystate;			/* current state */
int yytmp;			/* extra var (lasts between blocks) */

int yynerrs;			/* number of errors */
int yyerrflag;			/* error recovery flag */
int yychar;			/* current input token number */



/*
** yyparse - return 0 if worked, 1 if syntax error not recovered from
*/
int
yyparse()
{
	register YYSTYPE *yypvt;	/* top of value stack for $vars */

	/*
	** Initialize externals - yyparse may be called more than once
	*/
	yypv = &yyv[-1];
	yyps = &yys[-1];
	yystate = 0;
	yytmp = 0;
	yynerrs = 0;
	yyerrflag = 0;
	yychar = -1;

	goto yystack;
	{
		register YYSTYPE *yy_pv;	/* top of value stack */
		register int *yy_ps;		/* top of state stack */
		register int yy_state;		/* current state */
		register int  yy_n;		/* internal state number info */

		/*
		** get globals into registers.
		** branch to here only if YYBACKUP was called.
		*/
	yynewstate:
		yy_pv = yypv;
		yy_ps = yyps;
		yy_state = yystate;
		goto yy_newstate;

		/*
		** get globals into registers.
		** either we just started, or we just finished a reduction
		*/
	yystack:
		yy_pv = yypv;
		yy_ps = yyps;
		yy_state = yystate;

		/*
		** top of for (;;) loop while no reductions done
		*/
	yy_stack:
		/*
		** put a state and value onto the stacks
		*/
#if YYDEBUG
		/*
		** if debugging, look up token value in list of value vs.
		** name pairs.  0 and negative (-1) are special values.
		** Note: linear search is used since time is not a real
		** consideration while debugging.
		*/
		if ( yydebug )
		{
			register int yy_i;

			printf( "State %d, token ", yy_state );
			if ( yychar == 0 )
				printf( "end-of-file\n" );
			else if ( yychar < 0 )
				printf( "-none-\n" );
			else
			{
				for ( yy_i = 0; yytoks[yy_i].t_val >= 0;
					yy_i++ )
				{
					if ( yytoks[yy_i].t_val == yychar )
						break;
				}
				printf( "%s\n", yytoks[yy_i].t_name );
			}
		}
#endif /* YYDEBUG */
		if ( ++yy_ps >= &yys[ YYMAXDEPTH ] )	/* room on stack? */
		{
			yyerror( "yacc stack overflow" );
			YYABORT;
		}
		*yy_ps = yy_state;
		*++yy_pv = yyval;

		/*
		** we have a new state - find out what to do
		*/
	yy_newstate:
		if ( ( yy_n = yypact[ yy_state ] ) <= YYFLAG )
			goto yydefault;		/* simple state */
#if YYDEBUG
		/*
		** if debugging, need to mark whether new token grabbed
		*/
		yytmp = yychar < 0;
#endif
		if ( ( yychar < 0 ) && ( ( yychar = yylex() ) < 0 ) )
			yychar = 0;		/* reached EOF */
#if YYDEBUG
		if ( yydebug && yytmp )
		{
			register int yy_i;

			printf( "Received token " );
			if ( yychar == 0 )
				printf( "end-of-file\n" );
			else if ( yychar < 0 )
				printf( "-none-\n" );
			else
			{
				for ( yy_i = 0; yytoks[yy_i].t_val >= 0;
					yy_i++ )
				{
					if ( yytoks[yy_i].t_val == yychar )
						break;
				}
				printf( "%s\n", yytoks[yy_i].t_name );
			}
		}
#endif /* YYDEBUG */
		if ( ( ( yy_n += yychar ) < 0 ) || ( yy_n >= YYLAST ) )
			goto yydefault;
		if ( yychk[ yy_n = yyact[ yy_n ] ] == yychar )	/*valid shift*/
		{
			yychar = -1;
			yyval = yylval;
			yy_state = yy_n;
			if ( yyerrflag > 0 )
				yyerrflag--;
			goto yy_stack;
		}

	yydefault:
		if ( ( yy_n = yydef[ yy_state ] ) == -2 )
		{
#if YYDEBUG
			yytmp = yychar < 0;
#endif
			if ( ( yychar < 0 ) && ( ( yychar = yylex() ) < 0 ) )
				yychar = 0;		/* reached EOF */
#if YYDEBUG
			if ( yydebug && yytmp )
			{
				register int yy_i;

				printf( "Received token " );
				if ( yychar == 0 )
					printf( "end-of-file\n" );
				else if ( yychar < 0 )
					printf( "-none-\n" );
				else
				{
					for ( yy_i = 0;
						yytoks[yy_i].t_val >= 0;
						yy_i++ )
					{
						if ( yytoks[yy_i].t_val
							== yychar )
						{
							break;
						}
					}
					printf( "%s\n", yytoks[yy_i].t_name );
				}
			}
#endif /* YYDEBUG */
			/*
			** look through exception table
			*/
			{
				register int *yyxi = yyexca;

				while ( ( *yyxi != -1 ) ||
					( yyxi[1] != yy_state ) )
				{
					yyxi += 2;
				}
				while ( ( *(yyxi += 2) >= 0 ) &&
					( *yyxi != yychar ) )
					;
				if ( ( yy_n = yyxi[1] ) < 0 )
					YYACCEPT;
			}
		}

		/*
		** check for syntax error
		*/
		if ( yy_n == 0 )	/* have an error */
		{
			/* no worry about speed here! */
			switch ( yyerrflag )
			{
			case 0:		/* new error */
				yyerror( "syntax error" );
				goto skip_init;
			yyerrlab:
				/*
				** get globals into registers.
				** we have a user generated syntax type error
				*/
				yy_pv = yypv;
				yy_ps = yyps;
				yy_state = yystate;
				yynerrs++;
			skip_init:
			case 1:
			case 2:		/* incompletely recovered error */
					/* try again... */
				yyerrflag = 3;
				/*
				** find state where "error" is a legal
				** shift action
				*/
				while ( yy_ps >= yys )
				{
					yy_n = yypact[ *yy_ps ] + YYERRCODE;
					if ( yy_n >= 0 && yy_n < YYLAST &&
						yychk[yyact[yy_n]] == YYERRCODE)					{
						/*
						** simulate shift of "error"
						*/
						yy_state = yyact[ yy_n ];
						goto yy_stack;
					}
					/*
					** current state has no shift on
					** "error", pop stack
					*/
#if YYDEBUG
#	define _POP_ "Error recovery pops state %d, uncovers state %d\n"
					if ( yydebug )
						printf( _POP_, *yy_ps,
							yy_ps[-1] );
#	undef _POP_
#endif
					yy_ps--;
					yy_pv--;
				}
				/*
				** there is no state on stack with "error" as
				** a valid shift.  give up.
				*/
				YYABORT;
			case 3:		/* no shift yet; eat a token */
#if YYDEBUG
				/*
				** if debugging, look up token in list of
				** pairs.  0 and negative shouldn't occur,
				** but since timing doesn't matter when
				** debugging, it doesn't hurt to leave the
				** tests here.
				*/
				if ( yydebug )
				{
					register int yy_i;

					printf( "Error recovery discards " );
					if ( yychar == 0 )
						printf( "token end-of-file\n" );
					else if ( yychar < 0 )
						printf( "token -none-\n" );
					else
					{
						for ( yy_i = 0;
							yytoks[yy_i].t_val >= 0;
							yy_i++ )
						{
							if ( yytoks[yy_i].t_val
								== yychar )
							{
								break;
							}
						}
						printf( "token %s\n",
							yytoks[yy_i].t_name );
					}
				}
#endif /* YYDEBUG */
				if ( yychar == 0 )	/* reached EOF. quit */
					YYABORT;
				yychar = -1;
				goto yy_newstate;
			}
		}/* end if ( yy_n == 0 ) */
		/*
		** reduction by production yy_n
		** put stack tops, etc. so things right after switch
		*/
#if YYDEBUG
		/*
		** if debugging, print the string that is the user's
		** specification of the reduction which is just about
		** to be done.
		*/
		if ( yydebug )
			printf( "Reduce by (%d) \"%s\"\n",
				yy_n, yyreds[ yy_n ] );
#endif
		yytmp = yy_n;			/* value to switch over */
		yypvt = yy_pv;			/* $vars top of value stack */
		/*
		** Look in goto table for next state
		** Sorry about using yy_state here as temporary
		** register variable, but why not, if it works...
		** If yyr2[ yy_n ] doesn't have the low order bit
		** set, then there is no action to be done for
		** this reduction.  So, no saving & unsaving of
		** registers done.  The only difference between the
		** code just after the if and the body of the if is
		** the goto yy_stack in the body.  This way the test
		** can be made before the choice of what to do is needed.
		*/
		{
			/* length of production doubled with extra bit */
			register int yy_len = yyr2[ yy_n ];

			if ( !( yy_len & 01 ) )
			{
				yy_len >>= 1;
				yyval = ( yy_pv -= yy_len )[1];	/* $$ = $1 */
				yy_state = yypgo[ yy_n = yyr1[ yy_n ] ] +
					*( yy_ps -= yy_len ) + 1;
				if ( yy_state >= YYLAST ||
					yychk[ yy_state =
					yyact[ yy_state ] ] != -yy_n )
				{
					yy_state = yyact[ yypgo[ yy_n ] ];
				}
				goto yy_stack;
			}
			yy_len >>= 1;
			yyval = ( yy_pv -= yy_len )[1];	/* $$ = $1 */
			yy_state = yypgo[ yy_n = yyr1[ yy_n ] ] +
				*( yy_ps -= yy_len ) + 1;
			if ( yy_state >= YYLAST ||
				yychk[ yy_state = yyact[ yy_state ] ] != -yy_n )
			{
				yy_state = yyact[ yypgo[ yy_n ] ];
			}
		}
					/* save until reenter driver code */
		yystate = yy_state;
		yyps = yy_ps;
		yypv = yy_pv;
	}
	/*
	** code supplied by user is placed in this switch
	*/
	switch( yytmp )
	{
		
case 2:
# line 109 "nc.y"
{ code(STOPC); return 1; } break;
case 3:
# line 111 "nc.y"
{ code2(expop,STOPC); return 1; } break;
case 4:
# line 112 "nc.y"
{ code(STOPC); return 1; } break;
case 5:
# line 113 "nc.y"
{ code2(print, STOPC); return 1; } break;
case 6:
# line 114 "nc.y"
{ yyerrok; } break;
case 7:
# line 116 "nc.y"
{} break;
case 8:
# line 118 "nc.y"
{} break;
case 9:
# line 119 "nc.y"
{} break;
case 10:
# line 120 "nc.y"
{} break;
case 11:
# line 121 "nc.y"
{ code2(xmod,(Inst)yypvt[-1].sym); } break;
case 12:
# line 122 "nc.y"
{ code2(xmod,(Inst)yypvt[-1].sym); } break;
case 13:
# line 124 "nc.y"
{ yyval.inst=yypvt[-0].inst; } break;
case 14:
# line 125 "nc.y"
{ yyval.inst=yypvt[-0].inst; } break;
case 15:
# line 126 "nc.y"
{ yyval.inst=yypvt[-0].inst; } break;
case 16:
# line 127 "nc.y"
{ yyval.inst=yypvt[-0].inst; } break;
case 17:
# line 128 "nc.y"
{ yyval.inst=yypvt[-0].inst; } break;
case 18:
# line 129 "nc.y"
{ yyval.inst=yypvt[-0].inst; } break;
case 19:
# line 130 "nc.y"
{ yyval.inst=yypvt[-0].inst; } break;
case 20:
# line 131 "nc.y"
{ yyval.inst=yypvt[-0].inst; } break;
case 21:
# line 132 "nc.y"
{ yyval.inst=yypvt[-0].inst; code2(xgj,(Inst)yypvt[-1].sym);} break;
case 22:
# line 133 "nc.y"
{ yyval.inst=yypvt[-0].inst; code2(xgj,(Inst)yypvt[-1].sym);} break;
case 23:
# line 134 "nc.y"
{ yyval.inst=yypvt[-0].inst; code(rload); } break;
case 24:
# line 135 "nc.y"
{ yyval.inst=yypvt[-0].inst; code(xresistor); } break;
case 25:
# line 136 "nc.y"
{ yyval.inst=yypvt[-0].inst; code(xdiode); } break;
case 26:
# line 137 "nc.y"
{ yyval.inst=yypvt[-0].inst; code(rcap); } break;
case 27:
# line 138 "nc.y"
{ yyval.inst=yypvt[-0].inst; code(xgcap); } break;
case 28:
# line 139 "nc.y"
{ yyval.inst=yypvt[-0].inst; code(rbatt); } break;
case 29:
# line 140 "nc.y"
{ yyval.inst=yypvt[-0].inst; code(xgbatt); } break;
case 30:
# line 141 "nc.y"
{ } break;
case 31:
# line 142 "nc.y"
{ } break;
case 32:
# line 144 "nc.y"
{ yyval.inst=(Inst *)code(xvbuf); } break;
case 33:
# line 145 "nc.y"
{ yyval.inst=yypvt[-2].inst; code(xvbufd); } break;
case 34:
# line 146 "nc.y"
{ yyval.inst=yypvt[-2].inst; code(xvbufg); } break;
case 35:
# line 147 "nc.y"
{ yyval.inst=yypvt[-2].inst; code(xvbufo); } break;
case 36:
# line 149 "nc.y"
{ yyval.inst=(Inst *)code(xnbuf); } break;
case 37:
# line 150 "nc.y"
{ yyval.inst=yypvt[-2].inst; code(xnbufg); } break;
case 38:
# line 151 "nc.y"
{ yyval.inst=yypvt[-2].inst; code(xnbufo); } break;
case 39:
# line 152 "nc.y"
{ yyval.inst=yypvt[-2].inst; code(xnbuft); } break;
case 40:
# line 153 "nc.y"
{ yyval.inst=yypvt[-1].inst; code(xnbufn); } break;
case 41:
# line 155 "nc.y"
{ yyval.inst=yypvt[-0].inst; code2(xcable,(Inst)yypvt[-1].sym); } break;
case 42:
# line 156 "nc.y"
{ yyval.inst=yypvt[-0].inst; code2(xcable,(Inst)yypvt[-1].sym); } break;
case 43:
# line 157 "nc.y"
{ yyval.inst=yypvt[-0].inst; code2(xcable,(Inst)yypvt[-1].sym); } break;
case 44:
# line 158 "nc.y"
{ yyval.inst=yypvt[-0].inst; code2(xcable,(Inst)yypvt[-1].sym); } break;
case 45:
# line 159 "nc.y"
{ code2(xcable,(Inst)yypvt[-1].sym); } break;
case 46:
# line 160 "nc.y"
{ code2(xcable,(Inst)yypvt[-1].sym); } break;
case 47:
# line 161 "nc.y"
{ code2(xcable,(Inst)yypvt[-1].sym); } break;
case 48:
# line 162 "nc.y"
{ code2(xcable,(Inst)yypvt[-1].sym); } break;
case 49:
# line 164 "nc.y"
{ code2(xsphere,(Inst)0); } break;
case 50:
# line 165 "nc.y"
{ yyval.inst=yypvt[-0].inst; code2(xsphere,(Inst)yypvt[-1].sym); } break;
case 51:
# line 167 "nc.y"
{ yyval.inst=(Inst*)code2(xelec,(Inst)0); } break;
case 52:
# line 168 "nc.y"
{ yyval.inst=yypvt[-0].inst;  code2(xelec,(Inst)yypvt[-1].sym); } break;
case 53:
# line 169 "nc.y"
{ yyval.inst=yypvt[-0].inst;  code2(xelec,(Inst)yypvt[-1].sym); } break;
case 54:
# line 170 "nc.y"
{ yyval.inst=yypvt[-0].inst;  code2(xelec,(Inst)yypvt[-1].sym); } break;
case 55:
# line 171 "nc.y"
{ yyval.inst=yypvt[-0].inst;  code2(xelec,(Inst)yypvt[-1].sym); } break;
case 56:
# line 172 "nc.y"
{ code2(xelec,(Inst)yypvt[-1].sym); } break;
case 57:
# line 173 "nc.y"
{ code2(xelec,(Inst)yypvt[-1].sym); } break;
case 58:
# line 174 "nc.y"
{ code2(xelec,(Inst)yypvt[-1].sym); } break;
case 59:
# line 175 "nc.y"
{ code2(xelec,(Inst)yypvt[-1].sym); } break;
case 60:
# line 177 "nc.y"
{ code2(xgj,(Inst)0); } break;
case 61:
# line 178 "nc.y"
{ yyval.inst=yypvt[-0].inst; code2(xgj,(Inst)yypvt[-1].sym); } break;
case 62:
# line 179 "nc.y"
{ code2(xgj,(Inst)yypvt[-1].sym); } break;
case 63:
# line 180 "nc.y"
{ code3(xgj,(Inst)yypvt[-0].sym,(Inst)0); } break;
case 64:
# line 181 "nc.y"
{ code3(xgj,(Inst)(long)yypvt[-1].sym,(Inst)(long)yypvt[-0].narg); } break;
case 65:
# line 182 "nc.y"
{ code2(xgj,(Inst)yypvt[-0].sym); } break;
case 66:
# line 183 "nc.y"
{ code2(xgj,(Inst)yypvt[-0].sym); } break;
case 67:
# line 184 "nc.y"
{ code2(xgj,(Inst)yypvt[-0].sym); } break;
case 75:
# line 194 "nc.y"
{ yyval.inst=(Inst *)code2(xchan,(Inst)yypvt[-0].sym);} break;
case 76:
# line 195 "nc.y"
{ yyval.inst=(Inst *)code2(xchan,(Inst)yypvt[-0].sym);} break;
case 77:
# line 196 "nc.y"
{ yyval.inst=(Inst *)code2(xchan,(Inst)yypvt[-0].sym);} break;
case 78:
# line 197 "nc.y"
{ yyval.inst=(Inst *)code2(xchan,(Inst)yypvt[-0].sym);} break;
case 79:
# line 198 "nc.y"
{ yyval.inst=(Inst *)code2(xchan,(Inst)yypvt[-0].sym);} break;
case 80:
# line 199 "nc.y"
{ yyval.inst=(Inst *)code2(xchan,(Inst)yypvt[-0].sym);} break;
case 81:
# line 200 "nc.y"
{ yyval.inst=(Inst *)code2(xchan,(Inst)yypvt[-0].sym);} break;
case 82:
# line 201 "nc.y"
{ yyval.inst=(Inst *)code2(xchan,(Inst)yypvt[-0].sym);} break;
case 83:
# line 202 "nc.y"
{ code2(xchan,(Inst)yypvt[-1].sym); } break;
case 84:
# line 203 "nc.y"
{ } break;
case 85:
# line 205 "nc.y"
{ } break;
case 86:
# line 206 "nc.y"
{ } break;
case 87:
# line 208 "nc.y"
{ } break;
case 88:
# line 209 "nc.y"
{ } break;
case 89:
# line 210 "nc.y"
{ } break;
case 90:
# line 211 "nc.y"
{ } break;
case 91:
# line 213 "nc.y"
{ yyval.inst=(Inst *)code2(xcachan,(Inst)yypvt[-0].inst);} break;
case 92:
# line 214 "nc.y"
{ code2(xcachan,(Inst)yypvt[-1].sym);} break;
case 93:
# line 215 "nc.y"
{ } break;
case 94:
# line 217 "nc.y"
{ yyval.inst=(Inst *)code2(xcachan,(Inst)yypvt[-0].inst);} break;
case 95:
# line 218 "nc.y"
{ code2(xcachan,(Inst)yypvt[-1].sym);} break;
case 96:
# line 219 "nc.y"
{ } break;
case 97:
# line 220 "nc.y"
{ } break;
case 98:
# line 222 "nc.y"
{ yyval.inst=(Inst*)code2(xcachan,(Inst)yypvt[-0].sym); } break;
case 99:
# line 223 "nc.y"
{ } break;
case 100:
# line 225 "nc.y"
{ yyval.inst=(Inst*)code2(xcachan,(Inst)yypvt[-1].sym); } break;
case 106:
# line 231 "nc.y"
{ code2(xcachan,(Inst)yypvt[-1].sym); } break;
case 119:
# line 246 "nc.y"
{ yyval.inst=(Inst *)code2(xcachan,(Inst)yypvt[-0].sym);} break;
case 120:
# line 247 "nc.y"
{ code2(xcachan, (Inst)yypvt[-1].sym); } break;
case 121:
# line 249 "nc.y"
{ yyval.inst=(Inst *)code2(xcachan,(Inst)yypvt[-0].sym);} break;
case 122:
# line 250 "nc.y"
{ code2(xcachan, (Inst)yypvt[-1].sym); } break;
case 123:
# line 251 "nc.y"
{ code2(xcachan, (Inst)yypvt[-1].sym); } break;
case 124:
# line 253 "nc.y"
{ yyval.inst=(Inst *)code2(xcachan,(Inst)yypvt[-0].sym);} break;
case 125:
# line 254 "nc.y"
{ code2(xcachan, (Inst)yypvt[-1].sym); } break;
case 126:
# line 255 "nc.y"
{ code2(xcachan, (Inst)yypvt[-1].sym); } break;
case 127:
# line 256 "nc.y"
{ code2(xcachan, (Inst)yypvt[-1].sym); } break;
case 128:
# line 257 "nc.y"
{ code2(xcachan, (Inst)yypvt[-1].sym); } break;
case 129:
# line 259 "nc.y"
{ yyval.inst=(Inst *)code2(xcachan,(Inst)yypvt[-0].sym);} break;
case 130:
# line 260 "nc.y"
{ code2(xcachan, (Inst)yypvt[-1].sym); } break;
case 131:
# line 261 "nc.y"
{ code2(xcachan, (Inst)yypvt[-1].sym); } break;
case 132:
# line 262 "nc.y"
{ code2(xcachan, (Inst)yypvt[-1].sym); } break;
case 133:
# line 263 "nc.y"
{ code2(xcachan, (Inst)yypvt[-1].sym); } break;
case 134:
# line 264 "nc.y"
{ code2(xcachan, (Inst)yypvt[-1].sym); } break;
case 135:
# line 265 "nc.y"
{ code2(xcachan, (Inst)yypvt[-1].sym); } break;
case 136:
# line 266 "nc.y"
{ code2(xcachan, (Inst)yypvt[-1].sym); } break;
case 137:
# line 267 "nc.y"
{ code2(xcachan, (Inst)yypvt[-1].sym); } break;
case 138:
# line 268 "nc.y"
{ code2(xcachan, (Inst)yypvt[-1].sym); } break;
case 139:
# line 269 "nc.y"
{ code2(xcachan, (Inst)yypvt[-1].sym); } break;
case 140:
# line 270 "nc.y"
{ code2(xcachan, (Inst)yypvt[-1].sym); } break;
case 141:
# line 271 "nc.y"
{ code2(xcachan, (Inst)yypvt[-1].sym); } break;
case 142:
# line 272 "nc.y"
{ code2(xcachan, (Inst)yypvt[-1].sym); } break;
case 143:
# line 273 "nc.y"
{ code2(xcachan, (Inst)yypvt[-1].sym); } break;
case 144:
# line 274 "nc.y"
{ code2(xcachan, (Inst)yypvt[-1].sym); } break;
case 145:
# line 275 "nc.y"
{ code2(xcachan, (Inst)yypvt[-1].sym); } break;
case 146:
# line 276 "nc.y"
{ code2(xcachan, (Inst)yypvt[-1].sym); } break;
case 147:
# line 277 "nc.y"
{ code2(xcachan, (Inst)yypvt[-1].sym); } break;
case 148:
# line 278 "nc.y"
{ code2(xcachan, (Inst)yypvt[-1].sym); } break;
case 149:
# line 280 "nc.y"
{ yyval.inst=(Inst *)code2(xcachan,(Inst)yypvt[-0].sym);} break;
case 150:
# line 281 "nc.y"
{ code2(xcachan, (Inst)yypvt[-1].sym); } break;
case 151:
# line 282 "nc.y"
{ code2(xcachan, (Inst)yypvt[-1].sym); } break;
case 152:
# line 283 "nc.y"
{ code2(xcachan, (Inst)yypvt[-1].sym); } break;
case 153:
# line 284 "nc.y"
{ code2(xcachan, (Inst)yypvt[-1].sym); } break;
case 154:
# line 285 "nc.y"
{ code2(xcachan, (Inst)yypvt[-1].sym); } break;
case 155:
# line 286 "nc.y"
{ code2(xcachan, (Inst)yypvt[-1].sym); } break;
case 156:
# line 287 "nc.y"
{ code2(xcachan, (Inst)yypvt[-1].sym); } break;
case 157:
# line 288 "nc.y"
{ code2(xcachan, (Inst)yypvt[-1].sym); } break;
case 158:
# line 289 "nc.y"
{ code2(xcachan, (Inst)yypvt[-1].sym); } break;
case 159:
# line 290 "nc.y"
{ code2(xcachan, (Inst)yypvt[-1].sym); } break;
case 160:
# line 291 "nc.y"
{ code2(xcachan, (Inst)yypvt[-1].sym); } break;
case 161:
# line 292 "nc.y"
{ code2(xcachan, (Inst)yypvt[-1].sym); } break;
case 190:
# line 323 "nc.y"
{ } break;
case 191:
# line 324 "nc.y"
{ } break;
case 192:
# line 325 "nc.y"
{ yyval.inst=yypvt[-0].inst; code2(membtyp,(Inst)yypvt[-1].sym); } break;
case 193:
# line 326 "nc.y"
{ } break;
case 194:
# line 328 "nc.y"
{ yyval.inst=code2(membtyp,(Inst)yypvt[-1].sym); } break;
case 195:
# line 329 "nc.y"
{ code2(membtyp,(Inst)yypvt[-1].sym); } break;
case 202:
# line 338 "nc.y"
{ yyval.inst=yypvt[-1].inst; code2(conn1,(Inst)(long)yypvt[-0].narg); } break;
case 203:
# line 340 "nc.y"
{ yyval.inst=yypvt[-3].inst; code3(conn1l,(Inst)(long)yypvt[-0].narg,(Inst)(long)yypvt[-2].narg); } break;
case 204:
# line 343 "nc.y"
{ yyval.inst=yypvt[-7].inst; code3(conn1m,(Inst)(long)yypvt[-0].narg, (Inst)(long)yypvt[-6].narg); } break;
case 205:
# line 346 "nc.y"
{ yyval.inst=yypvt[-3].inst; code2(conn2d,(Inst)(long)yypvt[-0].narg);
					 code2(conn2s,(Inst)(long)yypvt[-2].narg); } break;
case 206:
# line 350 "nc.y"
{ yyval.inst=yypvt[-5].inst; code2(conn2d,(Inst)(long)yypvt[-0].narg);
					 code3(conn2sl,(Inst)(long)yypvt[-2].narg,(Inst)(long)yypvt[-4].narg); } break;
case 207:
# line 354 "nc.y"
{ yyval.inst=yypvt[-5].inst; code3(conn2dl,(Inst)(long)yypvt[-0].narg,(Inst)(long)yypvt[-2].narg);
					 code2(conn2s,(Inst)(long)yypvt[-4].narg); } break;
case 208:
# line 359 "nc.y"
{ yyval.inst=yypvt[-7].inst; code3(conn2dl,(Inst)(long)yypvt[-0].narg,(Inst)(long)yypvt[-2].narg);
					 code3(conn2sl,(Inst)(long)yypvt[-4].narg,(Inst)(long)yypvt[-6].narg); } break;
case 209:
# line 361 "nc.y"
{ yyval.inst=yypvt[-0].inst; code2(xmod,(Inst)yypvt[-1].sym); } break;
case 210:
# line 363 "nc.y"
{ yyval.inst=yypvt[-0].inst; } break;
case 211:
# line 364 "nc.y"
{ code2(xsynapse,(Inst)yypvt[-0].sym); } break;
case 212:
# line 365 "nc.y"
{ code2(xsynapse,(Inst)yypvt[-0].sym); } break;
case 213:
# line 366 "nc.y"
{ code2(xsynapse,(Inst)yypvt[-0].inst); } break;
case 214:
# line 367 "nc.y"
{ code2(xsynapse,(Inst)yypvt[-1].sym); } break;
case 215:
# line 369 "nc.y"
{ code3(xsynapse,(Inst)yypvt[-3].sym,(Inst)(long)yypvt[-1].narg); } break;
case 216:
# line 370 "nc.y"
{ code3(xsynapse,(Inst)yypvt[-1].sym,(Inst)1); } break;
case 217:
# line 371 "nc.y"
{ } break;
case 218:
# line 372 "nc.y"
{ } break;
case 219:
# line 373 "nc.y"
{ } break;
case 220:
# line 374 "nc.y"
{ } break;
case 221:
# line 376 "nc.y"
{ } break;
case 222:
# line 377 "nc.y"
{ } break;
case 223:
# line 379 "nc.y"
{yyval.inst=code2(xsynapse,(Inst)yypvt[-0].sym); } break;
case 224:
# line 381 "nc.y"
{ } break;
case 225:
# line 382 "nc.y"
{ } break;
case 226:
# line 384 "nc.y"
{ } break;
case 227:
# line 385 "nc.y"
{ } break;
case 228:
# line 386 "nc.y"
{ } break;
case 229:
# line 387 "nc.y"
{ } break;
case 230:
# line 388 "nc.y"
{ } break;
case 231:
# line 389 "nc.y"
{ } break;
case 232:
# line 390 "nc.y"
{ } break;
case 233:
# line 391 "nc.y"
{ } break;
case 234:
# line 392 "nc.y"
{ } break;
case 235:
# line 393 "nc.y"
{ } break;
case 236:
# line 394 "nc.y"
{ } break;
case 237:
# line 395 "nc.y"
{ } break;
case 238:
# line 396 "nc.y"
{ } break;
case 239:
# line 398 "nc.y"
{ yyval.inst=yypvt[-0].inst; code2(xsynapse,(Inst)yypvt[-1].sym); } break;
case 240:
# line 399 "nc.y"
{ } break;
case 241:
# line 400 "nc.y"
{ code2(xchan,(Inst)yypvt[-0].sym); } break;
case 242:
# line 401 "nc.y"
{ code2(xchan,(Inst)yypvt[-0].sym); } break;
case 243:
# line 402 "nc.y"
{ code2(xchan,(Inst)yypvt[-0].sym); } break;
case 244:
# line 403 "nc.y"
{ code2(xchan,(Inst)yypvt[-1].sym); } break;
case 272:
# line 433 "nc.y"
{ yyval.inst=yypvt[-0].inst; code2(xsynapse,(Inst)yypvt[-1].sym); } break;
case 273:
# line 434 "nc.y"
{ yyval.inst=yypvt[-0].inst; code2(xsynapse,(Inst)yypvt[-1].sym); } break;
case 274:
# line 435 "nc.y"
{ yyval.inst=yypvt[-0].inst; code2(xsynapse,(Inst)yypvt[-1].sym); } break;
case 275:
# line 436 "nc.y"
{ yyval.inst=yypvt[-0].inst; code2(xsynapse,(Inst)yypvt[-1].sym); } break;
case 280:
# line 443 "nc.y"
{ yyval.narg = 1; } break;
case 281:
# line 444 "nc.y"
{ yyval.narg = yypvt[-2].narg + 1; } break;
case 282:
# line 446 "nc.y"
{ yyval.inst=(Inst *)code2(noise,(Inst)yypvt[-1].sym); } break;
case 283:
# line 447 "nc.y"
{ yyval.inst=(Inst *)code2(noise,(Inst)yypvt[-1].sym); } break;
case 284:
# line 448 "nc.y"
{ code2(noise,(Inst)yypvt[-1].sym); } break;
case 285:
# line 449 "nc.y"
{ code2(noise,(Inst)yypvt[-1].sym); } break;
case 286:
# line 450 "nc.y"
{ code2(noise,(Inst)yypvt[-1].sym); } break;
case 287:
# line 451 "nc.y"
{ code2(noise,(Inst)yypvt[-1].sym); } break;
case 288:
# line 452 "nc.y"
{ code2(noise,(Inst)yypvt[-1].sym); } break;
case 289:
# line 453 "nc.y"
{ code2(noise,(Inst)yypvt[-1].sym); } break;
case 290:
# line 454 "nc.y"
{ code2(noise,(Inst)yypvt[-1].sym); } break;
case 291:
# line 455 "nc.y"
{ code2(noise,(Inst)yypvt[-1].sym); } break;
case 292:
# line 457 "nc.y"
{ } break;
case 293:
# line 458 "nc.y"
{ } break;
case 294:
# line 459 "nc.y"
{ } break;
case 295:
# line 460 "nc.y"
{ } break;
case 296:
# line 461 "nc.y"
{ } break;
case 297:
# line 463 "nc.y"
{ yyval.inst=yypvt[-1].inst;code3(xphotrec,(Inst)yypvt[-2].inst,(Inst)(long)yypvt[-0].narg);} break;
case 298:
# line 464 "nc.y"
{ code2(xrecparm, (Inst)yypvt[-1].sym); } break;
case 299:
# line 465 "nc.y"
{ code2(xrecparm, (Inst)yypvt[-0].sym); } break;
case 300:
# line 466 "nc.y"
{ code2(xrecparm, (Inst)yypvt[-0].sym); } break;
case 301:
# line 468 "nc.y"
{} break;
case 302:
# line 469 "nc.y"
{} break;
case 303:
# line 470 "nc.y"
{} break;
case 304:
# line 471 "nc.y"
{} break;
case 305:
# line 472 "nc.y"
{} break;
case 306:
# line 473 "nc.y"
{} break;
case 307:
# line 474 "nc.y"
{} break;
case 308:
# line 475 "nc.y"
{} break;
case 309:
# line 476 "nc.y"
{} break;
case 310:
# line 477 "nc.y"
{} break;
case 311:
# line 478 "nc.y"
{} break;
case 312:
# line 479 "nc.y"
{} break;
case 313:
# line 480 "nc.y"
{} break;
case 314:
# line 481 "nc.y"
{} break;
case 315:
# line 482 "nc.y"
{} break;
case 316:
# line 484 "nc.y"
{} break;
case 317:
# line 485 "nc.y"
{} break;
case 318:
# line 487 "nc.y"
{} break;
case 319:
# line 488 "nc.y"
{ yyval.inst=yypvt[-1].inst; code3(xstim,(Inst)yypvt[-2].sym,(Inst)(long)yypvt[-0].narg); } break;
case 320:
# line 489 "nc.y"
{ yyval.inst=yypvt[-1].inst; code3(xstim,(Inst)yypvt[-2].sym,(Inst)(long)yypvt[-0].narg); } break;
case 321:
# line 490 "nc.y"
{ yyval.inst=yypvt[-0].inst; code2(xstim,(Inst)yypvt[-1].sym); } break;
case 322:
# line 491 "nc.y"
{ yyval.inst=yypvt[-0].inst; code2(xstim,(Inst)yypvt[-1].sym); } break;
case 323:
# line 492 "nc.y"
{ yyval.inst=yypvt[-0].inst; code2(xstim,(Inst)yypvt[-1].sym); } break;
case 324:
# line 493 "nc.y"
{ yyval.inst=yypvt[-0].inst; code2(xstim,(Inst)yypvt[-1].sym); } break;
case 325:
# line 494 "nc.y"
{ yyval.inst=yypvt[-0].inst; code2(xstim,(Inst)yypvt[-1].sym); } break;
case 326:
# line 495 "nc.y"
{ yyval.inst=yypvt[-0].inst; code2(xstim,(Inst)yypvt[-1].sym); } break;
case 327:
# line 496 "nc.y"
{ yyval.inst=yypvt[-0].inst; code2(xstim,(Inst)yypvt[-1].sym); } break;
case 328:
# line 497 "nc.y"
{ yyval.inst=yypvt[-0].inst; code2(xstim,(Inst)yypvt[-1].sym); } break;
case 329:
# line 498 "nc.y"
{ yyval.inst=yypvt[-0].inst; code2(xstim,(Inst)yypvt[-1].sym); } break;
case 330:
# line 499 "nc.y"
{ yyval.inst=yypvt[-0].inst; code2(xstim,(Inst)yypvt[-1].sym); } break;
case 331:
# line 500 "nc.y"
{ yyval.inst=yypvt[-0].inst; code2(xstim,(Inst)yypvt[-1].sym); } break;
case 332:
# line 501 "nc.y"
{ yyval.inst=yypvt[-0].inst; code2(xstim,(Inst)yypvt[-1].sym); } break;
case 333:
# line 502 "nc.y"
{ yyval.inst=yypvt[-1].inst; code3(xstim,(Inst)yypvt[-2].sym,(Inst)(long)yypvt[-0].narg); } break;
case 334:
# line 503 "nc.y"
{} break;
case 335:
# line 504 "nc.y"
{} break;
case 336:
# line 505 "nc.y"
{} break;
case 337:
# line 507 "nc.y"
{ yyval.inst=yypvt[-0].inst; code2(xstim,(Inst)yypvt[-1].sym); } break;
case 338:
# line 508 "nc.y"
{ yyval.inst=yypvt[-0].inst; code2(xstim,(Inst)yypvt[-1].sym); } break;
case 339:
# line 509 "nc.y"
{ yyval.inst=yypvt[-0].inst; code2(xstim,(Inst)yypvt[-1].sym); } break;
case 340:
# line 510 "nc.y"
{ yyval.inst=yypvt[-0].inst; code2(xstim,(Inst)yypvt[-1].sym); } break;
case 341:
# line 511 "nc.y"
{ yyval.inst=yypvt[-0].inst; code2(xstim,(Inst)yypvt[-1].sym); } break;
case 342:
# line 512 "nc.y"
{ yyval.inst=yypvt[-0].inst; code2(xstim,(Inst)yypvt[-1].sym); } break;
case 343:
# line 513 "nc.y"
{ yyval.inst=yypvt[-1].inst; code3(xstim,(Inst)yypvt[-2].sym,(Inst)(long)yypvt[-0].narg); } break;
case 344:
# line 514 "nc.y"
{ yyval.inst=yypvt[-1].inst; code3(xstim,(Inst)yypvt[-2].sym,(Inst)(long)yypvt[-0].narg); } break;
case 345:
# line 515 "nc.y"
{ yyval.inst=yypvt[-0].inst; code3(xstim,(Inst)yypvt[-1].inst,(Inst)1);} break;
case 346:
# line 516 "nc.y"
{ yyval.inst=yypvt[-1].inst; code3(xstim,(Inst)yypvt[-2].inst,(Inst)(long)yypvt[-0].narg);} break;
case 347:
# line 517 "nc.y"
{ yyval.inst=yypvt[-1].inst; code3(xstim,(Inst)yypvt[-2].sym,(Inst)(long)yypvt[-0].narg);} break;
case 348:
# line 518 "nc.y"
{ yyval.inst=yypvt[-0].inst; code2(xstim,(Inst)yypvt[-1].sym);} break;
case 349:
# line 519 "nc.y"
{ yyval.inst=yypvt[-0].inst; code2(xstim,(Inst)yypvt[-1].sym);} break;
case 350:
# line 521 "nc.y"
{ yyval.inst=yypvt[-0].inst; code3(xstim,(Inst)yypvt[-1].sym,(Inst)0); } break;
case 351:
# line 522 "nc.y"
{ yyval.inst=(Inst *)code3(xstim,(Inst)yypvt[-1].sym,(Inst)yypvt[-0].sym); } break;
case 352:
# line 523 "nc.y"
{ yyval.inst=(Inst *)code3(xstim,(Inst)yypvt[-2].sym,(Inst)yypvt[-0].sym); } break;
case 353:
# line 524 "nc.y"
{ yyval.inst=(Inst *)code3(xstim,(Inst)yypvt[-1].sym,(Inst)yypvt[-0].sym); } break;
case 354:
# line 525 "nc.y"
{ yyval.inst=(Inst *)code3(xstim,(Inst)yypvt[-2].sym,(Inst)yypvt[-0].sym); } break;
case 355:
# line 526 "nc.y"
{ yyval.inst=(Inst *)code3(xstim,(Inst)yypvt[-1].sym,(Inst)yypvt[-0].sym); } break;
case 356:
# line 527 "nc.y"
{ yyval.inst=(Inst *)code3(xstim,(Inst)yypvt[-2].sym,(Inst)yypvt[-0].sym); } break;
case 357:
# line 529 "nc.y"
{ yyval.inst=yypvt[-0].inst; code2(xstim,(Inst)yypvt[-1].sym); } break;
case 358:
# line 530 "nc.y"
{ yyval.inst=yypvt[-0].inst; code2(xstim,(Inst)yypvt[-1].sym); } break;
case 359:
# line 531 "nc.y"
{ yyval.inst=yypvt[-0].inst; code2(xstim,(Inst)yypvt[-1].sym); } break;
case 360:
# line 532 "nc.y"
{ yyval.inst=yypvt[-0].inst; code2(xstim,(Inst)yypvt[-1].sym); } break;
case 361:
# line 533 "nc.y"
{ yyval.inst=yypvt[-0].inst; code2(xstim,(Inst)yypvt[-1].sym); } break;
case 362:
# line 534 "nc.y"
{ yyval.inst=yypvt[-0].inst; code3(xstim,(Inst)yypvt[-2].sym,(Inst)yypvt[-1].sym); } break;
case 363:
# line 535 "nc.y"
{ yyval.inst=yypvt[-0].inst; code3(xstim,(Inst)yypvt[-2].sym,(Inst)yypvt[-1].sym); } break;
case 364:
# line 536 "nc.y"
{ yyval.inst=yypvt[-0].inst; code2(xstim,(Inst)yypvt[-1].sym); } break;
case 365:
# line 537 "nc.y"
{ yyval.inst=yypvt[-0].inst; code2(xstim,(Inst)yypvt[-1].sym); } break;
case 366:
# line 539 "nc.y"
{yyval.inst=yypvt[-0].inst; code2(xstim,(Inst)yypvt[-1].sym);} break;
case 367:
# line 541 "nc.y"
{ code(assign); } break;
case 368:
# line 542 "nc.y"
{ code(addeq); } break;
case 369:
# line 543 "nc.y"
{ code(subeq); } break;
case 370:
# line 544 "nc.y"
{ code(muleq); } break;
case 371:
# line 545 "nc.y"
{ code(diveq); } break;
case 372:
# line 546 "nc.y"
{ code(andeq); } break;
case 373:
# line 547 "nc.y"
{ code(oreq); } break;
case 374:
# line 549 "nc.y"
{ yyval.inst = 0; } break;
case 375:
# line 550 "nc.y"
{ yyval.inst = (Inst*)(long) yypvt[-0].narg; } break;
case 376:
# line 551 "nc.y"
{ yyval.inst = (Inst*)(long) -yypvt[-0].narg; } break;
case 377:
# line 553 "nc.y"
{ code(expop); } break;
case 378:
# line 554 "nc.y"
{ defnonly("return"); yyval.inst=code(procret); } break;
case 379:
# line 556 "nc.y"
{defnonly("return"); yyval.inst=yypvt[-0].inst; code(funcret); } break;
case 380:
# line 558 "nc.y"
{ yyval.inst=yypvt[-1].inst; code3(call, (Inst)yypvt[-2].sym, (Inst)(long)yypvt[-0].narg); } break;
case 381:
# line 560 "nc.y"
{ yyval.inst=yypvt[-1].inst; code3(call, (Inst)yypvt[-2].sym, (Inst)(long)yypvt[-0].narg); } break;
case 382:
# line 561 "nc.y"
{ } break;
case 383:
# line 562 "nc.y"
{ yyval.inst=code(xexit); } break;
case 384:
# line 563 "nc.y"
{ yyval.inst=code(xdebugf); } break;
case 385:
# line 564 "nc.y"
{ yyval.inst=yypvt[-1].inst; code(pfclose); } break;
case 386:
# line 565 "nc.y"
{ yyval.inst = yypvt[-0].inst; code(crlf); } break;
case 387:
# line 566 "nc.y"
{ yyval.inst=yypvt[-3].inst; code2(pprintf,(Inst)(long)yypvt[-1].narg);} break;
case 388:
# line 567 "nc.y"
{ yyval.inst=yypvt[-3].inst; code2(psprintf,(Inst)(long)yypvt[-1].narg);} break;
case 389:
# line 568 "nc.y"
{yyval.inst=yypvt[-5].inst; code2(pfprintf,(Inst)(long)yypvt[-1].narg);} break;
case 390:
# line 569 "nc.y"
{
		(yypvt[-9].inst)[1] = (Inst)(yypvt[-5].inst-yypvt[-9].inst-1);	/* cond of loop */
		(yypvt[-9].inst)[2] = (Inst)(yypvt[-3].inst-yypvt[-9].inst-1);	/* incr of loop */
		(yypvt[-9].inst)[3] = (Inst)(yypvt[-1].inst-yypvt[-9].inst-1);	/* body of loop */
		(yypvt[-9].inst)[4] = (Inst)(yypvt[-0].inst-yypvt[-9].inst-1); } break;
case 391:
# line 574 "nc.y"
{ yyval.inst = (Inst *)code(breakcode); } break;
case 392:
# line 575 "nc.y"
{ yyval.inst = (Inst *)code(contcode); } break;
case 393:
# line 576 "nc.y"
{
		(yypvt[-3].inst)[1] = (Inst)(yypvt[-1].inst-yypvt[-3].inst-1);	/* body of loop */
		(yypvt[-3].inst)[2] = (Inst)(yypvt[-0].inst-yypvt[-3].inst-1); } break;
case 394:
# line 579 "nc.y"
{	 	/* else-less if */
		(yypvt[-3].inst)[1] = (Inst)(yypvt[-1].inst-yypvt[-3].inst-1);	/* then part */
		(yypvt[-3].inst)[3] = (Inst)(yypvt[-0].inst-yypvt[-3].inst-1); } break;
case 395:
# line 582 "nc.y"
{ /* if with else */
		(yypvt[-6].inst)[1] = (Inst)(yypvt[-4].inst-yypvt[-6].inst-1);	/* thenpart */
		(yypvt[-6].inst)[2] = (Inst)(yypvt[-1].inst-yypvt[-6].inst-1);	/* elsepart */
		(yypvt[-6].inst)[3] = (Inst)(yypvt[-0].inst-yypvt[-6].inst-1); } break;
case 396:
# line 586 "nc.y"
{ /* look through all nodes */
		(yypvt[-3].inst)[2] = (Inst)0;
		(yypvt[-3].inst)[3] = (Inst)0;
		(yypvt[-3].inst)[4] = (Inst)0;
		(yypvt[-3].inst)[5] = (Inst)0;
		(yypvt[-3].inst)[6] = (Inst)0;
		(yypvt[-3].inst)[7] = (Inst)yypvt[-2].inst;		/* within node */
		(yypvt[-3].inst)[8] = (Inst)(yypvt[-1].inst-yypvt[-3].inst-1);	/* body of loop */
		(yypvt[-3].inst)[9] = (Inst)(yypvt[-0].inst-yypvt[-3].inst-1); } break;
case 397:
# line 595 "nc.y"
{ /* look through all nodes */
		(yypvt[-6].inst)[2] = (Inst)1;
		(yypvt[-6].inst)[3] = (Inst)(long)yypvt[-4].narg;
		(yypvt[-6].inst)[4] = (Inst)0;
		(yypvt[-6].inst)[5] = (Inst)0;
		(yypvt[-6].inst)[6] = (Inst)0;
		(yypvt[-6].inst)[7] = (Inst)yypvt[-3].inst;		/* within node */
		(yypvt[-6].inst)[8] = (Inst)(yypvt[-1].inst-yypvt[-6].inst-1);	/* body of loop */
		(yypvt[-6].inst)[9] = (Inst)(yypvt[-0].inst-yypvt[-6].inst-1); } break;
case 398:
# line 604 "nc.y"
{
		(yypvt[-7].inst)[2] = (Inst)2;
		(yypvt[-7].inst)[3] = (Inst)(long)yypvt[-5].narg;
		(yypvt[-7].inst)[4] = (Inst)(long)yypvt[-4].narg;
		(yypvt[-7].inst)[5] = (Inst)0;
		(yypvt[-7].inst)[6] = (Inst)0;
		(yypvt[-7].inst)[7] = (Inst)yypvt[-3].inst;		/* within node */
		(yypvt[-7].inst)[8] = (Inst)(yypvt[-1].inst-yypvt[-7].inst-1);	/* body of loop */
		(yypvt[-7].inst)[9] = (Inst)(yypvt[-0].inst-yypvt[-7].inst-1); } break;
case 399:
# line 613 "nc.y"
{
		(yypvt[-8].inst)[2] = (Inst)3;
		(yypvt[-8].inst)[3] = (Inst)(long)yypvt[-6].narg;
		(yypvt[-8].inst)[4] = (Inst)(long)yypvt[-5].narg;
		(yypvt[-8].inst)[5] = (Inst)(long)yypvt[-4].narg;
		(yypvt[-8].inst)[6] = (Inst)0;
		(yypvt[-8].inst)[7] = (Inst)yypvt[-3].inst;		/* within node */
		(yypvt[-8].inst)[8] = (Inst)(yypvt[-1].inst-yypvt[-8].inst-1);	/* body of loop */
		(yypvt[-8].inst)[9] = (Inst)(yypvt[-0].inst-yypvt[-8].inst-1); } break;
case 400:
# line 622 "nc.y"
{
		(yypvt[-9].inst)[2] = (Inst)4;
		(yypvt[-9].inst)[3] = (Inst)(long)yypvt[-7].narg;
		(yypvt[-9].inst)[4] = (Inst)(long)yypvt[-6].narg;
		(yypvt[-9].inst)[5] = (Inst)(long)yypvt[-5].narg;
		(yypvt[-9].inst)[6] = (Inst)(long)yypvt[-4].narg;
		(yypvt[-9].inst)[7] = (Inst)yypvt[-3].inst;		/* within node */
		(yypvt[-9].inst)[8] = (Inst)(yypvt[-1].inst-yypvt[-9].inst-1);	/* body of loop */
		(yypvt[-9].inst)[9] = (Inst)(yypvt[-0].inst-yypvt[-9].inst-1); } break;
case 401:
# line 631 "nc.y"
{ } break;
case 402:
# line 632 "nc.y"
{ yyval.inst=yypvt[-0].inst; code(edit); } break;
case 403:
# line 633 "nc.y"
{ yyval.inst=yypvt[-0].inst; code(pushfil); } break;
case 404:
# line 634 "nc.y"
{ } break;
case 405:
# line 635 "nc.y"
{ yyval.inst=yypvt[-0].inst;    code2(xstim,(Inst)yypvt[-1].sym); } break;
case 406:
# line 636 "nc.y"
{ yyval.inst=yypvt[-0].inst; } break;
case 407:
# line 637 "nc.y"
{ yyval.inst=yypvt[-0].inst;    code2(dispnod,(Inst)yypvt[-1].sym); } break;
case 408:
# line 638 "nc.y"
{ } break;
case 409:
# line 639 "nc.y"
{ yyval.inst=yypvt[-0].inst; } break;
case 410:
# line 641 "nc.y"
{ yyval.inst=yypvt[-7].inst; code3(xfread,(Inst)yypvt[-3].sym,(Inst)(long)yypvt[-1].narg); yypvt[-3].sym->type=ARRAY; } break;
case 411:
# line 643 "nc.y"
{ yyval.inst=yypvt[-7].inst; code3(xfreads,(Inst)yypvt[-3].sym,(Inst)(long)yypvt[-1].narg); yypvt[-3].sym->type=ARRAY; } break;
case 412:
# line 645 "nc.y"
{ yyval.inst=yypvt[-5].inst; code2(xfwrite,(Inst)yypvt[-1].sym); } break;
case 413:
# line 647 "nc.y"
{ yyval.inst=yypvt[-3].inst; code(xunlink); } break;
case 414:
# line 648 "nc.y"
{ yyval.inst=yypvt[-2].inst; 
	  code3(darray,(Inst)yypvt[-1].sym,(Inst)(long)yypvt[-0].narg); yypvt[-1].sym->type=ARRAY; 
			yypvt[-1].sym->arrp= (ncarray*)NULL; } break;
case 415:
# line 651 "nc.y"
{ yyval.inst=yypvt[-2].inst; 
	  code3(darray,(Inst)yypvt[-1].sym,(Inst)(long)yypvt[-0].narg); yypvt[-1].sym->type=ARRAY; 
 		yypvt[-1].sym->arrp= (ncarray*)NULL; } break;
case 416:
# line 655 "nc.y"
{yyval.inst=yypvt[-5].inst; code3(initarr,(Inst)yypvt[-4].sym,(Inst)(long)yypvt[-0].narg);} break;
case 417:
# line 656 "nc.y"
{ yyval.inst=yypvt[-5].inst; 
	  code4(darray,(Inst)yypvt[-4].sym,(Inst)0,(Inst)(long)yypvt[-0].narg); yypvt[-4].sym->type=ARRAY; 
 		yypvt[-4].sym->arrp= (ncarray*)NULL; code3(initarr,(Inst)yypvt[-4].sym,(Inst)(long)yypvt[-0].narg);} break;
case 418:
# line 659 "nc.y"
{ yyval.inst=yypvt[-3].inst; code3(dofft,(Inst)yypvt[-4].sym,(Inst)yypvt[-1].sym); } break;
case 419:
# line 660 "nc.y"
{ 
			yyval.inst=yypvt[-7].inst; code4(do_lmfit,(Inst)yypvt[-5].sym,(Inst)yypvt[-3].sym,(Inst)yypvt[-1].sym); } break;
case 420:
# line 662 "nc.y"
{ 
			yyval.inst=yypvt[-7].inst; code4(do_lmfit2d,(Inst)yypvt[-5].sym,(Inst)yypvt[-3].sym,(Inst)yypvt[-1].sym); } break;
case 421:
# line 664 "nc.y"
{ yyval.inst=yypvt[-0].inst; } break;
case 422:
# line 665 "nc.y"
{ yyval.inst=yypvt[-0].inst; code2(initrgen,(Inst)yypvt[-1].sym); } break;
case 423:
# line 666 "nc.y"
{ yyval.inst=yypvt[-0].inst; code(erelem); } break;
case 424:
# line 667 "nc.y"
{ yyval.inst=yypvt[-1].inst; code2(eranode, (Inst)(long)yypvt[-0].narg); } break;
case 425:
# line 668 "nc.y"
{ yyval.inst=(Inst *)code2(erasarr,(Inst)yypvt[-0].sym); } break;
case 426:
# line 669 "nc.y"
{ yyval.inst=(Inst *)code2(erasarr,(Inst)yypvt[-0].sym); } break;
case 427:
# line 670 "nc.y"
{ yyval.inst=(Inst *)code(eramod); } break;
case 428:
# line 671 "nc.y"
{ yyval.inst=yypvt[-1].inst; code(savemod); } break;
case 429:
# line 672 "nc.y"
{ yyval.inst=yypvt[-1].inst; code(restoremod); } break;
case 430:
# line 673 "nc.y"
{ yyval.inst = (Inst *)code2(modrun,(Inst)yypvt[-0].sym); } break;
case 431:
# line 674 "nc.y"
{ yyval.inst = yypvt[-0].inst;     code2(modrun,(Inst)yypvt[-1].sym); } break;
case 432:
# line 676 "nc.y"
{  } break;
case 433:
# line 677 "nc.y"
{  } break;
case 434:
# line 679 "nc.y"
{ yyval.inst=yypvt[-0].inst; code2(xgausnn,(Inst)yypvt[-1].sym); } break;
case 435:
# line 680 "nc.y"
{ yyval.inst=yypvt[-0].inst; code2(xgausnn,(Inst)yypvt[-1].sym); } break;
case 436:
# line 681 "nc.y"
{ yyval.inst=yypvt[-0].inst; code2(xgausnn,(Inst)yypvt[-1].sym); } break;
case 437:
# line 682 "nc.y"
{ yyval.inst=yypvt[-0].inst; code2(xgausnn,(Inst)yypvt[-1].sym); } break;
case 438:
# line 683 "nc.y"
{ yyval.inst=yypvt[-0].inst; code2(xgausnn,(Inst)yypvt[-1].sym); } break;
case 439:
# line 684 "nc.y"
{ yyval.inst=yypvt[-0].inst; code2(xgausnn,(Inst)yypvt[-1].sym); } break;
case 440:
# line 685 "nc.y"
{ yyval.inst=yypvt[-0].inst; code2(xgausnn,(Inst)yypvt[-1].sym); } break;
case 441:
# line 686 "nc.y"
{ yyval.inst=yypvt[-1].inst; code3(xgausnn,(Inst)yypvt[-2].sym,(Inst)(long)yypvt[-0].narg); } break;
case 442:
# line 687 "nc.y"
{ yyval.inst=yypvt[-1].inst; code3(xgausnn,(Inst)yypvt[-2].sym,(Inst)(long)yypvt[-0].narg); } break;
case 443:
# line 689 "nc.y"
{ } break;
case 444:
# line 690 "nc.y"
{ } break;
case 445:
# line 691 "nc.y"
{ } break;
case 446:
# line 692 "nc.y"
{ } break;
case 447:
# line 694 "nc.y"
{ } break;
case 448:
# line 695 "nc.y"
{ } break;
case 449:
# line 696 "nc.y"
{ } break;
case 450:
# line 697 "nc.y"
{ } break;
case 451:
# line 698 "nc.y"
{ } break;
case 452:
# line 699 "nc.y"
{ } break;
case 453:
# line 701 "nc.y"
{ } break;
case 454:
# line 702 "nc.y"
{ } break;
case 455:
# line 703 "nc.y"
{ } break;
case 456:
# line 704 "nc.y"
{ } break;
case 457:
# line 705 "nc.y"
{ } break;
case 458:
# line 706 "nc.y"
{ } break;
case 459:
# line 707 "nc.y"
{ } break;
case 460:
# line 708 "nc.y"
{ } break;
case 461:
# line 709 "nc.y"
{ } break;
case 462:
# line 710 "nc.y"
{ } break;
case 463:
# line 711 "nc.y"
{ } break;
case 464:
# line 712 "nc.y"
{ } break;
case 465:
# line 713 "nc.y"
{ } break;
case 466:
# line 714 "nc.y"
{ } break;
case 467:
# line 715 "nc.y"
{ } break;
case 468:
# line 716 "nc.y"
{ } break;
case 469:
# line 717 "nc.y"
{ } break;
case 470:
# line 718 "nc.y"
{ } break;
case 471:
# line 719 "nc.y"
{ } break;
case 472:
# line 720 "nc.y"
{ } break;
case 473:
# line 721 "nc.y"
{ } break;
case 474:
# line 722 "nc.y"
{ } break;
case 475:
# line 723 "nc.y"
{ } break;
case 476:
# line 724 "nc.y"
{ } break;
case 477:
# line 725 "nc.y"
{ } break;
case 478:
# line 726 "nc.y"
{ } break;
case 479:
# line 727 "nc.y"
{ } break;
case 480:
# line 729 "nc.y"
{ } break;
case 481:
# line 730 "nc.y"
{ } break;
case 482:
# line 731 "nc.y"
{ } break;
case 483:
# line 732 "nc.y"
{ } break;
case 484:
# line 733 "nc.y"
{ } break;
case 485:
# line 735 "nc.y"
{ yyval.narg=0; } break;
case 486:
# line 736 "nc.y"
{ yyval.narg=yypvt[-1].sym->type; } break;
case 487:
# line 738 "nc.y"
{ yyval.inst=yypvt[-1].inst; } break;
case 488:
# line 740 "nc.y"
{ } break;
case 489:
# line 741 "nc.y"
{ } break;
case 490:
# line 742 "nc.y"
{ } break;
case 491:
# line 743 "nc.y"
{ } break;
case 492:
# line 744 "nc.y"
{ } break;
case 493:
# line 745 "nc.y"
{ } break;
case 494:
# line 746 "nc.y"
{ } break;
case 495:
# line 748 "nc.y"
{ yyval.narg=0; } break;
case 496:
# line 749 "nc.y"
{ yyval.narg=yypvt[-1].sym->type; } break;
case 497:
# line 751 "nc.y"
{ yyval.inst=yypvt[-1].inst; } break;
case 498:
# line 753 "nc.y"
{ yyval.inst=yypvt[-1].inst; } break;
case 499:
# line 755 "nc.y"
{ yyval.inst=yypvt[-1].inst; } break;
case 500:
# line 758 "nc.y"
{ yyval.inst=yypvt[-1].inst; code3(vplot,(Inst)yypvt[-2].inst,(Inst)(long)yypvt[-0].narg); } break;
case 501:
# line 759 "nc.y"
{ yyval.inst=yypvt[-1].inst; 
				code4(vplot,(Inst)CA,(Inst)(long)yypvt[-0].narg,(Inst)(long)yypvt[-2].narg); } break;
case 502:
# line 761 "nc.y"
{ yyval.inst=yypvt[-1].inst; code4(vplot,(Inst)CA,(Inst)(long)yypvt[-0].narg,(Inst)1); } break;
case 503:
# line 762 "nc.y"
{ yyval.inst=yypvt[-1].inst; code4(vplot,(Inst)CABUF,(Inst)(long)yypvt[-0].narg,(Inst)1); } break;
case 504:
# line 763 "nc.y"
{ yyval.inst=yypvt[-1].inst; code4(vplot,(Inst)CABUFB,(Inst)(long)yypvt[-0].narg,(Inst)1); } break;
case 505:
# line 764 "nc.y"
{ yyval.inst=yypvt[-1].inst; code3(vplot,(Inst)yypvt[-2].inst,(Inst)1); } break;
case 506:
# line 765 "nc.y"
{ yyval.inst=yypvt[-1].inst; 
				code4(vplot,(Inst)G,(Inst)1,(Inst)(long)yypvt[-2].narg); } break;
case 507:
# line 767 "nc.y"
{ yyval.inst=yypvt[-1].inst; code4(vplot,(Inst)G,(Inst)1,(Inst)1); } break;
case 508:
# line 769 "nc.y"
{ yyval.inst=yypvt[-5].inst;code3(vplot,(Inst)yypvt[-3].sym,(Inst)2);} break;
case 509:
# line 770 "nc.y"
{ yyval.inst=yypvt[-0].inst; code3(vplot,(Inst)yypvt[-1].sym,(Inst)1); } break;
case 510:
# line 771 "nc.y"
{ yyval.inst=code3(vplot,(Inst)yypvt[-0].sym,(Inst)0);} break;
case 511:
# line 773 "nc.y"
{ yyval.inst=yypvt[-3].inst; code3(vplot,(Inst)yypvt[-1].inst,(Inst)(long)yypvt[-0].narg);} break;
case 512:
# line 775 "nc.y"
{ yyval.inst=yypvt[-3].inst; code4(vplot,(Inst)CA,(Inst)(long)yypvt[-0].narg,(Inst)(long)yypvt[-1].narg);} break;
case 513:
# line 777 "nc.y"
{ yyval.inst=yypvt[-3].inst; code4(vplot,(Inst)CA,(Inst)(long)yypvt[-0].narg,(Inst)1);} break;
case 514:
# line 779 "nc.y"
{yyval.inst=yypvt[-3].inst; code4(vplot,(Inst)CABUF,(Inst)(long)yypvt[-0].narg,(Inst)1);} break;
case 515:
# line 781 "nc.y"
{yyval.inst=yypvt[-3].inst; code4(vplot,(Inst)CABUFB,(Inst)(long)yypvt[-0].narg,(Inst)1);} break;
case 516:
# line 783 "nc.y"
{ yyval.inst=yypvt[-3].inst; code3(vplot,(Inst)yypvt[-1].inst,(Inst)1);} break;
case 517:
# line 785 "nc.y"
{ yyval.inst=yypvt[-3].inst; code4(vplot,(Inst)G,(Inst)1,(Inst)(long)yypvt[-1].narg);} break;
case 518:
# line 787 "nc.y"
{ yyval.inst=yypvt[-3].inst; code4(vplot,(Inst)G,(Inst)1,(Inst)1);} break;
case 519:
# line 789 "nc.y"
{ yyval.inst=yypvt[-8].inst; code3(vplot,(Inst)yypvt[-3].sym,(Inst)2);} break;
case 520:
# line 790 "nc.y"
{ yyval.inst=yypvt[-3].inst; code3(vplot,(Inst)yypvt[-1].sym,(Inst)1); } break;
case 521:
# line 791 "nc.y"
{ yyval.inst=yypvt[-2].inst; code3(vplot,(Inst)yypvt[-0].sym,(Inst)0); } break;
case 522:
# line 792 "nc.y"
{ yyval.inst=yypvt[-1].inst; code(vplotm); } break;
case 523:
# line 793 "nc.y"
{ yyval.inst=yypvt[-1].inst; } break;
case 524:
# line 795 "nc.y"
{ yyval.inst=yypvt[-1].inst;    code3(gplot,(Inst)yypvt[-2].sym,(Inst)(long)yypvt[-0].narg); } break;
case 525:
# line 796 "nc.y"
{ yyval.inst=yypvt[-1].inst;    code3(gplot,(Inst)yypvt[-2].sym,(Inst)(long)yypvt[-0].narg); } break;
case 526:
# line 797 "nc.y"
{ yyval.inst=yypvt[-1].inst;    code3(gplot,(Inst)yypvt[-2].sym,(Inst)(long)yypvt[-0].narg); } break;
case 527:
# line 798 "nc.y"
{ yyval.inst=yypvt[-1].inst;    code3(gplot,(Inst)yypvt[-2].sym,(Inst)(long)yypvt[-0].narg); } break;
case 528:
# line 799 "nc.y"
{ yyval.inst=yypvt[-1].inst;    code3(gplot,(Inst)yypvt[-2].sym,(Inst)(long)yypvt[-0].narg); } break;
case 529:
# line 800 "nc.y"
{ yyval.inst=yypvt[-1].inst;    code3(gplot,(Inst)yypvt[-2].sym,(Inst)(long)yypvt[-0].narg); } break;
case 530:
# line 801 "nc.y"
{ yyval.inst=yypvt[-1].inst;    code3(gplot,(Inst)yypvt[-2].sym,(Inst)(long)yypvt[-0].narg); } break;
case 531:
# line 802 "nc.y"
{ yyval.inst=yypvt[-1].inst;    code3(gplot,(Inst)yypvt[-2].sym,(Inst)(long)yypvt[-0].narg); } break;
case 532:
# line 803 "nc.y"
{ yyval.inst=yypvt[-1].inst;    code3(gplot,(Inst)yypvt[-2].sym,(Inst)(long)yypvt[-0].narg); } break;
case 533:
# line 804 "nc.y"
{ yyval.inst=yypvt[-1].inst;    code3(gplot,(Inst)yypvt[-2].sym,(Inst)(long)yypvt[-0].narg); } break;
case 534:
# line 805 "nc.y"
{ yyval.inst=yypvt[-1].inst;    code3(gplot,(Inst)yypvt[-2].sym,(Inst)(long)yypvt[-0].narg); } break;
case 535:
# line 806 "nc.y"
{ yyval.inst=yypvt[-1].inst;    code3(gplot,(Inst)yypvt[-2].sym,(Inst)(long)yypvt[-0].narg); } break;
case 536:
# line 807 "nc.y"
{ yyval.inst=yypvt[-1].inst;    code3(gplot,(Inst)yypvt[-2].sym,(Inst)(long)yypvt[-0].narg); } break;
case 537:
# line 808 "nc.y"
{ yyval.inst=yypvt[-1].inst;    code3(gplot,(Inst)yypvt[-2].sym,(Inst)(long)yypvt[-0].narg); } break;
case 538:
# line 809 "nc.y"
{ yyval.inst=yypvt[-1].inst;    code3(gplot,(Inst)yypvt[-2].sym,(Inst)(long)yypvt[-0].narg); } break;
case 539:
# line 810 "nc.y"
{ yyval.inst=yypvt[-1].inst;    code3(gplot,(Inst)yypvt[-2].sym,(Inst)(long)yypvt[-0].narg); } break;
case 540:
# line 811 "nc.y"
{ yyval.inst=yypvt[-1].inst;    code3(gplot,(Inst)yypvt[-2].sym,(Inst)(long)yypvt[-0].narg); } break;
case 541:
# line 812 "nc.y"
{ yyval.inst=yypvt[-3].inst; code2(txtf,(Inst)(long)yypvt[-1].narg);} break;
case 542:
# line 813 "nc.y"
{ yyval.inst=yypvt[-3].inst; code2(gglabel,(Inst)(long)yypvt[-1].narg);} break;
case 543:
# line 815 "nc.y"
{ yyval.inst=yypvt[-0].inst; } break;
case 544:
# line 816 "nc.y"
{ yyval.inst=yypvt[-1].inst; } break;
case 545:
# line 818 "nc.y"
{ yyval.inst=yypvt[-1].inst;      code3 (grph, (Inst)0L,(Inst)(long)yypvt[-0].narg);} break;
case 546:
# line 819 "nc.y"
{ yyval.inst=(Inst *) code3 (grph,(Inst)yypvt[-0].sym, (Inst)0L); } break;
case 547:
# line 820 "nc.y"
{ yyval.inst=(Inst *) code3 (grph,(Inst)yypvt[-0].sym, 0L); } break;
case 548:
# line 821 "nc.y"
{ yyval.inst=yypvt[-1].inst;      code3 (grph,(Inst)yypvt[-2].sym,(Inst)(long)yypvt[-0].narg);} break;
case 549:
# line 822 "nc.y"
{ yyval.inst=yypvt[-0].inst;      code3 (grph,(Inst)yypvt[-1].sym, 0L); } break;
case 550:
# line 823 "nc.y"
{ yyval.inst=yypvt[-1].inst;      code3 (grph,(Inst)yypvt[-2].sym, 0L); } break;
case 551:
# line 824 "nc.y"
{ yyval.inst=yypvt[-0].inst;      code3 (grph,(Inst)yypvt[-1].sym, 0L); } break;
case 552:
# line 825 "nc.y"
{ yyval.inst=yypvt[-1].inst;      code3 (grph,(Inst)yypvt[-2].sym, 0L); } break;
case 553:
# line 827 "nc.y"
{ yyval.inst=yypvt[-2].inst; } break;
case 554:
# line 828 "nc.y"
{ yyval.inst=yypvt[-2].inst; } break;
case 555:
# line 830 "nc.y"
{  } break;
case 556:
# line 831 "nc.y"
{  } break;
case 557:
# line 833 "nc.y"
{ yyval.inst=yypvt[-0].inst; code3 (grph,(Inst)yypvt[-1].sym, (Inst)-1); } break;
case 558:
# line 834 "nc.y"
{ yyval.inst=yypvt[-0].inst; code3 (grph,(Inst)yypvt[-1].sym, (Inst)-1); } break;
case 559:
# line 835 "nc.y"
{ yyval.inst=yypvt[-0].inst; code3 (grph,(Inst)yypvt[-1].sym, (Inst)-1); } break;
case 560:
# line 836 "nc.y"
{ yyval.inst=    code3 (grph,(Inst)yypvt[-1].sym, (Inst)yypvt[-0].sym); } break;
case 561:
# line 837 "nc.y"
{ yyval.inst=yypvt[-0].inst; code3 (grph,(Inst)yypvt[-1].sym, (Inst)-1); } break;
case 562:
# line 838 "nc.y"
{yyval.inst=yypvt[-3].inst;code3 (grph,(Inst)yypvt[-4].sym,(Inst)(long)yypvt[-1].narg);} break;
case 563:
# line 839 "nc.y"
{ yyval.inst=yypvt[-0].inst; code3 (grph,(Inst)yypvt[-1].sym, (Inst)1); } break;
case 564:
# line 840 "nc.y"
{ yyval.inst=yypvt[-0].inst; code3 (grph,(Inst)yypvt[-1].sym, (Inst)1); } break;
case 565:
# line 841 "nc.y"
{ yyval.inst=yypvt[-0].inst; code3 (grph,(Inst)yypvt[-1].sym, (Inst)1); } break;
case 566:
# line 842 "nc.y"
{ yyval.inst=yypvt[-0].inst; code3 (grph,(Inst)yypvt[-1].sym, (Inst)1); } break;
case 567:
# line 843 "nc.y"
{ yyval.inst=yypvt[-0].inst; code3 (grph,(Inst)yypvt[-1].sym, (Inst)1); } break;
case 568:
# line 845 "nc.y"
{ yyval.inst=yypvt[-0].inst; code3 (plparams,(Inst)yypvt[-1].sym, (Inst)-1); } break;
case 569:
# line 846 "nc.y"
{ yyval.inst=yypvt[-0].inst; code3 (plparams,(Inst)yypvt[-1].sym, (Inst)-1); } break;
case 570:
# line 847 "nc.y"
{ yyval.inst=yypvt[-0].inst; code3 (plparams,(Inst)yypvt[-1].sym, (Inst)-1); } break;
case 571:
# line 848 "nc.y"
{ yyval.inst=    code3 (plparams,(Inst)yypvt[-1].sym, (Inst)yypvt[-0].sym); } break;
case 572:
# line 849 "nc.y"
{ yyval.inst=yypvt[-0].inst; code3 (plparams,(Inst)yypvt[-1].sym, (Inst)-1); } break;
case 573:
# line 850 "nc.y"
{yyval.inst=yypvt[-3].inst;code3 (plparams,(Inst)yypvt[-4].sym,(Inst)(long)yypvt[-1].narg);} break;
case 574:
# line 851 "nc.y"
{ yyval.inst=yypvt[-0].inst; code3 (plparams,(Inst)yypvt[-1].sym, (Inst)1); } break;
case 575:
# line 852 "nc.y"
{ yyval.inst=yypvt[-0].inst; code3 (plparams,(Inst)yypvt[-1].sym, (Inst)1); } break;
case 576:
# line 853 "nc.y"
{ yyval.inst=yypvt[-0].inst; code3 (plparams,(Inst)yypvt[-1].sym, (Inst)1); } break;
case 577:
# line 854 "nc.y"
{ yyval.inst=yypvt[-0].inst; code3 (plparams,(Inst)yypvt[-1].sym, (Inst)1); } break;
case 578:
# line 855 "nc.y"
{ yyval.inst=yypvt[-0].inst; code3 (plparams,(Inst)yypvt[-1].sym, (Inst)1); } break;
case 579:
# line 856 "nc.y"
{ yyval.inst=yypvt[-0].inst; code3 (plparams,(Inst)yypvt[-1].sym, (Inst)1); } break;
case 580:
# line 858 "nc.y"
{ yyval.inst=yypvt[-0].inst; } break;
case 581:
# line 859 "nc.y"
{ yyval.inst=yypvt[-1].inst; } break;
case 582:
# line 861 "nc.y"
{ yyval.inst=yypvt[-1].inst; code4(dispnod,(Inst)yypvt[-2].sym,(Inst)0,(Inst)(long)yypvt[-0].narg); } break;
case 583:
# line 863 "nc.y"
{ yyval.inst=yypvt[-3].inst; code4(dispnod,(Inst)yypvt[-4].sym,(Inst)(long)yypvt[-0].narg,(Inst)(long)yypvt[-2].narg); } break;
case 584:
# line 865 "nc.y"
{ yyval.inst=yypvt[-3].inst; code4(dispnod,(Inst)yypvt[-4].sym,(Inst)(long)yypvt[-0].narg,(Inst)(long)yypvt[-2].narg); } break;
case 585:
# line 866 "nc.y"
{ yyval.inst=yypvt[-0].inst; code4(dispnod,(Inst)yypvt[-1].sym,(Inst)0,(Inst)1); } break;
case 586:
# line 867 "nc.y"
{ yyval.inst=(Inst *)code2(dispnod,(Inst)yypvt[-0].inst); } break;
case 587:
# line 868 "nc.y"
{ yyval.inst=(Inst *)code2(dispnod,(Inst)yypvt[-0].sym); } break;
case 588:
# line 869 "nc.y"
{ yyval.inst=code2(dispnod,(Inst)yypvt[-0].sym); } break;
case 589:
# line 870 "nc.y"
{ yyval.inst=yypvt[-0].inst; code2(dispnod,(Inst)yypvt[-1].inst); } break;
case 590:
# line 871 "nc.y"
{ yyval.inst=yypvt[-0].inst; code2(dispnod,(Inst)yypvt[-1].sym); } break;
case 591:
# line 872 "nc.y"
{ yyval.inst=yypvt[-1].inst; code3(dispnod,(Inst)yypvt[-2].sym,(Inst)(long)yypvt[-0].narg); } break;
case 592:
# line 873 "nc.y"
{ yyval.inst=yypvt[-0].inst; code2(dispnod,(Inst)yypvt[-1].sym); } break;
case 593:
# line 874 "nc.y"
{ yyval.inst=yypvt[-0].inst; code3(dispnod,(Inst)yypvt[-1].sym,(Inst)0); } break;
case 594:
# line 875 "nc.y"
{ yyval.inst=yypvt[-1].inst; code3(dispnod,(Inst)yypvt[-2].sym,(Inst)1); } break;
case 595:
# line 876 "nc.y"
{ yyval.inst= code3(dispnod,(Inst)yypvt[-1].sym,(Inst)yypvt[-0].sym); } break;
case 596:
# line 877 "nc.y"
{ yyval.inst=yypvt[-0].inst; code3(dispnod,(Inst)yypvt[-1].sym,(Inst)0); } break;
case 597:
# line 879 "nc.y"
{ yyval.inst=yypvt[-2].inst; code3(dispnod,(Inst)yypvt[-3].sym,(Inst)(long)yypvt[-0].narg);} break;
case 598:
# line 880 "nc.y"
{ yyval.inst=(Inst *)code2(dispnod,(Inst)yypvt[-0].sym); } break;
case 599:
# line 881 "nc.y"
{ yyval.inst=yypvt[-1].inst; code3(dispnod,(Inst)yypvt[-2].sym,(Inst)(long)yypvt[-0].narg); } break;
case 600:
# line 882 "nc.y"
{ yyval.inst=yypvt[-1].inst; code3(dispnod,(Inst)yypvt[-2].sym,(Inst)(long)yypvt[-0].narg); } break;
case 601:
# line 883 "nc.y"
{ yyval.inst=(Inst *)code2(dispnod,(Inst)yypvt[-0].sym); } break;
case 602:
# line 884 "nc.y"
{ yyval.inst=(Inst *)code2(dispnod,(Inst)yypvt[-0].sym); } break;
case 603:
# line 885 "nc.y"
{ yyval.inst=yypvt[-0].inst; code3(dispnod,(Inst)yypvt[-2].sym,(Inst)1); } break;
case 604:
# line 886 "nc.y"
{ yyval.inst=0; code3(dispnod,(Inst)yypvt[-0].sym,(Inst)0); } break;
case 605:
# line 887 "nc.y"
{ yyval.inst=yypvt[-0].inst; code2(dispnod,(Inst)yypvt[-1].sym); } break;
case 606:
# line 888 "nc.y"
{ yyval.inst=(Inst *)code2(dispnod,(Inst)yypvt[-0].sym); } break;
case 607:
# line 889 "nc.y"
{ yyval.inst=(Inst *)code3(dispnod,(Inst)yypvt[-1].sym,(Inst)1); } break;
case 608:
# line 891 "nc.y"
{ yyval.inst = yypvt[-0].inst; } break;
case 609:
# line 893 "nc.y"
{code(STOPC); yyval.inst = yypvt[-1].inst; } break;
case 610:
# line 895 "nc.y"
{ yyval.inst = (Inst *)code3(whilecode,STOPC,STOPC); } break;
case 611:
# line 897 "nc.y"
{code(STOPC); yyval.inst = yypvt[-0].inst; } break;
case 612:
# line 899 "nc.y"
{ yyval.inst = (Inst *)code(forcode); code4(STOPC,STOPC,STOPC,STOPC); } break;
case 613:
# line 901 "nc.y"
{ yyval.inst = (Inst *)code(ifcode); code3(STOPC,STOPC,STOPC); } break;
case 614:
# line 903 "nc.y"
{ yyval.inst = (Inst *)code(foreacode);
				    code((Inst)0);
				    code4(STOPC,STOPC,STOPC,STOPC);
				    code4(STOPC,STOPC,STOPC,STOPC); } break;
case 615:
# line 907 "nc.y"
{ yyval.inst = (Inst *)code(foreacode);
				    code((Inst)yypvt[-2].inst);
				    code4(STOPC,STOPC,STOPC,STOPC);
				    code4(STOPC,STOPC,STOPC,STOPC); } break;
case 616:
# line 912 "nc.y"
{ } break;
case 617:
# line 913 "nc.y"
{ } break;
case 618:
# line 914 "nc.y"
{ } break;
case 619:
# line 915 "nc.y"
{ } break;
case 620:
# line 916 "nc.y"
{ } break;
case 621:
# line 917 "nc.y"
{ } break;
case 622:
# line 918 "nc.y"
{ } break;
case 623:
# line 919 "nc.y"
{ } break;
case 624:
# line 920 "nc.y"
{ } break;
case 625:
# line 921 "nc.y"
{ } break;
case 626:
# line 922 "nc.y"
{ } break;
case 627:
# line 923 "nc.y"
{ } break;
case 628:
# line 924 "nc.y"
{ } break;
case 629:
# line 925 "nc.y"
{ } break;
case 630:
# line 926 "nc.y"
{ } break;
case 631:
# line 927 "nc.y"
{ } break;
case 632:
# line 928 "nc.y"
{ } break;
case 633:
# line 929 "nc.y"
{ } break;
case 634:
# line 930 "nc.y"
{ } break;
case 635:
# line 932 "nc.y"
{ } break;
case 636:
# line 933 "nc.y"
{ } break;
case 637:
# line 935 "nc.y"
{ yyval.inst=yypvt[-0].inst; } break;
case 638:
# line 936 "nc.y"
{ yyval.inst=yypvt[-1].inst; } break;
case 639:
# line 938 "nc.y"
{ yyval.inst=yypvt[-0].inst; code2(elimit,(Inst)yypvt[-1].sym); } break;
case 640:
# line 939 "nc.y"
{ yyval.inst=yypvt[-0].inst; code2(elimit,(Inst)yypvt[-1].sym); } break;
case 641:
# line 940 "nc.y"
{ yyval.inst=yypvt[-0].inst; code2(elimit,(Inst)yypvt[-1].sym); } break;
case 642:
# line 941 "nc.y"
{ yyval.inst=yypvt[-0].inst; code2(elimit,(Inst)yypvt[-1].sym); } break;
case 643:
# line 943 "nc.y"
{ yyval.inst=yypvt[-0].inst; code2(initrgen,(Inst)0); } break;
case 644:
# line 944 "nc.y"
{ yyval.inst=yypvt[-2].inst; code2(initrgen,(Inst)yypvt[-1].sym); } break;
case 645:
# line 946 "nc.y"
{ yyval.inst = progp; } break;
case 646:
# line 948 "nc.y"
{ code(STOPC); yyval.inst = progp; } break;
case 647:
# line 950 "nc.y"
{ yyval.inst = yypvt[-1].inst; } break;
case 648:
# line 952 "nc.y"
{ yyval.inst = yypvt[-4].inst; code2(locend,(Inst)(long)(-yypvt[-3].narg+1+argcount));
		   erasarg(yypvt[-3].narg); argcount = yypvt[-3].narg - 1; } break;
case 649:
# line 955 "nc.y"
{ yyval.inst = progp; } break;
case 651:
# line 958 "nc.y"
{ yyval.inst = (Inst *)code2(constpush, (Inst)yypvt[-0].sym); } break;
case 652:
# line 959 "nc.y"
{ yyval.inst = 
		(Inst *)code4(varpush,(Inst)(long)yypvt[-0].sym->type,(Inst)yypvt[-0].sym,evalvar);} break;
case 653:
# line 961 "nc.y"
{ yyval.inst = 
		(Inst *)code4(varpush,(Inst)ARRAYCONST,(Inst)(long)yypvt[-0].narg,evalvar);} break;
case 654:
# line 963 "nc.y"
{  code(xdims); } break;
case 655:
# line 964 "nc.y"
{ yyval.inst = (Inst *)code2(constpush,(Inst)yypvt[-0].sym); } break;
case 656:
# line 965 "nc.y"
{ yyval.inst = (Inst *)code2(constpush,(Inst)yypvt[-0].sym); } break;
case 657:
# line 966 "nc.y"
{ yyval.inst = yypvt[-0].inst; code(evalvar); } break;
case 658:
# line 967 "nc.y"
{ yyval.inst = yypvt[-1].inst; code(postinc); } break;
case 659:
# line 968 "nc.y"
{ yyval.inst = yypvt[-1].inst; code(postdec); } break;
case 660:
# line 969 "nc.y"
{ yyval.inst = yypvt[-0].inst; code(preinc); } break;
case 661:
# line 970 "nc.y"
{ yyval.inst = yypvt[-0].inst; code(predec); } break;
case 663:
# line 973 "nc.y"
{ yyval.inst = yypvt[-1].inst; code3(call,(Inst)yypvt[-2].sym,(Inst)(long)yypvt[-0].narg); } break;
case 664:
# line 974 "nc.y"
{ yyval.inst=yypvt[-1].inst; code(varread); } break;
case 665:
# line 975 "nc.y"
{ yyval.inst=code2(gettype,(Inst)yypvt[-1].inst); } break;
case 666:
# line 976 "nc.y"
{ 
			 yyval.inst=yypvt[-1].inst; code3(bltin,(Inst)(long)yypvt[-0].narg,(Inst)yypvt[-2].sym->ptr);} break;
case 667:
# line 979 "nc.y"
{ yyval.inst=yypvt[-5].inst; code3(xgausnn,(Inst)yypvt[-6].sym,(Inst)yypvt[-3].sym);
				yypvt[-3].sym->type = ARRAY; } break;
case 668:
# line 981 "nc.y"
{ yyval.inst=yypvt[-1].inst; code(notinitx); } break;
case 669:
# line 982 "nc.y"
{ yyval.inst=yypvt[-1].inst; code(varnum); } break;
case 670:
# line 983 "nc.y"
{ yyval.inst=yypvt[-1].inst; code(varstr); } break;
case 671:
# line 984 "nc.y"
{ yyval.inst=yypvt[-1].inst; code(varchr); } break;
case 672:
# line 985 "nc.y"
{ yyval.inst=yypvt[-3].inst; code(pfopen); } break;
case 673:
# line 986 "nc.y"
{ yyval.inst=yypvt[-5].inst; code(pfgets); } break;
case 674:
# line 987 "nc.y"
{ yyval.inst=yypvt[-3].inst; code(pfgetc); } break;
case 675:
# line 988 "nc.y"
{ yyval.inst=yypvt[-3].inst; code(pfputc); } break;
case 676:
# line 989 "nc.y"
{ yyval.inst=yypvt[-1].inst; code(getflds); } break;
case 677:
# line 990 "nc.y"
{ yyval.inst=yypvt[-3].inst; code2(pscanf,(Inst)(long)yypvt[-1].narg);} break;
case 678:
# line 991 "nc.y"
{yyval.inst=yypvt[-5].inst; code2(pfscanf,(Inst)(long)yypvt[-1].narg);} break;
case 679:
# line 992 "nc.y"
{yyval.inst=yypvt[-5].inst; code2(psscanf,(Inst)(long)yypvt[-1].narg);} break;
case 680:
# line 993 "nc.y"
{ } break;
case 681:
# line 995 "nc.y"
{ yyval.inst=yypvt[-1].inst; code3(xrecord, (Inst)yypvt[-2].inst, (Inst)(long)yypvt[-0].narg); } break;
case 682:
# line 997 "nc.y"
{ yyval.inst=yypvt[-1].inst; code4(xrecord, (Inst)CA, (Inst)(long)yypvt[-0].narg, (Inst)(long)yypvt[-2].narg); } break;
case 683:
# line 999 "nc.y"
{ yyval.inst=yypvt[-1].inst; code4(xrecord, (Inst)CA, (Inst)(long)yypvt[-0].narg, (Inst)1); } break;
case 684:
# line 1001 "nc.y"
{ yyval.inst=yypvt[-1].inst; code4(xrecord, (Inst)CABUF,(Inst)(long)yypvt[-0].narg,(Inst)1);} break;
case 685:
# line 1003 "nc.y"
{ yyval.inst=yypvt[-1].inst; code4(xrecord, (Inst)CABUFB,(Inst)(long)yypvt[-0].narg,(Inst)1);} break;
case 686:
# line 1005 "nc.y"
{ yyval.inst=yypvt[-1].inst; code3(xrecord, (Inst)yypvt[-2].inst, (Inst)1); } break;
case 687:
# line 1007 "nc.y"
{ yyval.inst=yypvt[-1].inst; code4(xrecord, (Inst)G, (Inst)1, (Inst)(long)yypvt[-2].narg); } break;
case 688:
# line 1009 "nc.y"
{ yyval.inst=yypvt[-1].inst; code4(xrecord, (Inst)G, (Inst)1, (Inst)1); } break;
case 689:
# line 1011 "nc.y"
{ yyval.inst=yypvt[-5].inst;code3(xrecord,(Inst)yypvt[-3].sym,(Inst)2);} break;
case 690:
# line 1013 "nc.y"
{ yyval.inst=yypvt[-5].inst; code(eedist); } break;
case 691:
# line 1015 "nc.y"
{ yyval.inst=yypvt[-5].inst; code2(e3dist, (Inst)(long)yypvt[-3].narg); } break;
case 692:
# line 1017 "nc.y"
{ yyval.inst=yypvt[-5].inst; code2(e2dist, (Inst)(long)yypvt[-3].narg); } break;
case 693:
# line 1019 "nc.y"
{ yyval.inst=yypvt[-5].inst; code2(ezdist, (Inst)(long)yypvt[-3].narg); } break;
case 694:
# line 1021 "nc.y"
{ yyval.inst=yypvt[-5].inst; code2(efrac, (Inst)(long)yypvt[-3].narg); } break;
case 695:
# line 1023 "nc.y"
{ yyval.inst=yypvt[-5].inst; code3(n3dist, (Inst)(long)yypvt[-1].narg, (Inst)(long)yypvt[-3].narg); } break;
case 696:
# line 1025 "nc.y"
{ yyval.inst=yypvt[-5].inst; code3(n2dist, (Inst)(long)yypvt[-1].narg, (Inst)(long)yypvt[-3].narg); } break;
case 697:
# line 1027 "nc.y"
{ yyval.inst=yypvt[-5].inst; code3(nzdist, (Inst)(long)yypvt[-1].narg, (Inst)(long)yypvt[-3].narg); } break;
case 698:
# line 1028 "nc.y"
{ yyval.inst=yypvt[-2].inst; code2(efield, (Inst)yypvt[-0].inst); } break;
case 699:
# line 1029 "nc.y"
{ yyval.inst=yypvt[-2].inst; code2(cfield, (Inst)yypvt[-0].inst); } break;
case 700:
# line 1031 "nc.y"
{ yyval.inst=yypvt[-3].inst; code3(nfield,(Inst)yypvt[-0].inst, (Inst)(long)yypvt[-2].narg);} break;
case 701:
# line 1032 "nc.y"
{ yyval.inst = yypvt[-1].inst; } break;
case 702:
# line 1033 "nc.y"
{ code (add); } break;
case 703:
# line 1034 "nc.y"
{ code (sub); } break;
case 704:
# line 1035 "nc.y"
{ code (mul); } break;
case 705:
# line 1036 "nc.y"
{ code (xdiv); } break;
case 706:
# line 1037 "nc.y"
{ code (mod); } break;
case 707:
# line 1038 "nc.y"
{ code (power); } break;
case 708:
# line 1039 "nc.y"
{ yyval.inst=yypvt[-0].inst; code(negate); } break;
case 709:
# line 1040 "nc.y"
{ yyval.inst=yypvt[-0].inst; } break;
case 710:
# line 1041 "nc.y"
{ code (gt); } break;
case 711:
# line 1042 "nc.y"
{ code (ge); } break;
case 712:
# line 1043 "nc.y"
{ code (lt); } break;
case 713:
# line 1044 "nc.y"
{ code (le); } break;
case 714:
# line 1045 "nc.y"
{ code (eq); } break;
case 715:
# line 1046 "nc.y"
{ code (ne); } break;
case 716:
# line 1047 "nc.y"
{ code (xand); } break;
case 717:
# line 1048 "nc.y"
{ code (orx); } break;
case 718:
# line 1049 "nc.y"
{ code (bitand_x); } break;
case 719:
# line 1050 "nc.y"
{ code (bitor_x); } break;
case 720:
# line 1051 "nc.y"
{ code (xxor); } break;
case 721:
# line 1052 "nc.y"
{ yyval.inst = yypvt[-0].inst; code (xnot); } break;
case 722:
# line 1053 "nc.y"
{ yyval.inst=yypvt[-1].inst; code (xsizeof); } break;
case 723:
# line 1055 "nc.y"
{ yyval.inst=code2(xsystem, (Inst)yypvt[-0].sym); } break;
case 724:
# line 1056 "nc.y"
{ yyval.inst=yypvt[-1].inst; code2(xsystem, (Inst)0); } break;
case 725:
# line 1058 "nc.y"
{ } break;
case 726:
# line 1059 "nc.y"
{ code(popone); } break;
case 727:
# line 1061 "nc.y"
{ } break;
case 728:
# line 1062 "nc.y"
{ } break;
case 729:
# line 1064 "nc.y"
{ yyval.inst = yypvt[-0].inst; } break;
case 730:
# line 1065 "nc.y"
{ yyval.inst = yypvt[-0].inst; } break;
case 731:
# line 1067 "nc.y"
{ yyval.inst=(Inst*)code3(varpush,(Inst)(long)yypvt[-0].sym->type,(Inst)yypvt[-0].sym); } break;
case 732:
# line 1068 "nc.y"
{ yyval.inst = yypvt[-1].inst;
		code4(varpush,(Inst)ARRAYVAL,(Inst)yypvt[-2].sym,(Inst)(long)yypvt[-0].narg);} break;
case 733:
# line 1071 "nc.y"
{ yyval.inst = code4(varpush,(Inst)(long)yypvt[-0].sym->type,(Inst)yypvt[-0].sym,(Inst)0);} break;
case 734:
# line 1073 "nc.y"
{ yyval.inst = code4(varpush,(Inst)(long)yypvt[-0].sym->type,(Inst)(long)yypvt[-0].sym->argnum,(Inst)0);} break;
case 735:
# line 1075 "nc.y"
{ yyval.inst = yypvt[-1].inst; 
		code4(varpush,(Inst)LOCALARRVAL,(Inst)(long)yypvt[-2].sym->argnum,(Inst)(long)yypvt[-0].narg);} break;
case 736:
# line 1078 "nc.y"
{yyval.inst=(Inst *)code3(varpush,(Inst)(long)yypvt[-0].sym->type,(Inst)(long)yypvt[-0].sym->argnum);} break;
case 737:
# line 1079 "nc.y"
{yyval.inst = yypvt[-1].inst;
		code4(varpush,(Inst)ARGARRVAL,(Inst)(long)yypvt[-2].sym->argnum,(Inst)(long)yypvt[-0].narg);} break;
case 738:
# line 1081 "nc.y"
{yyval.inst=(Inst *)code3(varpush,(Inst)(long)yypvt[-0].sym->type,(Inst)(long)yypvt[-0].sym->argnum);} break;
case 739:
# line 1083 "nc.y"
{ code(prexpr); } break;
case 740:
# line 1084 "nc.y"
{ code(prexpr); } break;
case 741:
# line 1086 "nc.y"
{ yyval.narg =  0; } break;
case 742:
# line 1087 "nc.y"
{ yyval.narg = yypvt[-0].narg; } break;
case 743:
# line 1089 "nc.y"
{ yyval.narg =  0; } break;
case 744:
# line 1090 "nc.y"
{ yyval.narg = yypvt[-0].narg; } break;
case 745:
# line 1092 "nc.y"
{ yyval.narg = 1; } break;
case 746:
# line 1093 "nc.y"
{ yyval.narg = yypvt[-2].narg + 1; } break;
case 747:
# line 1095 "nc.y"
{ yyval.narg =  0; } break;
case 748:
# line 1096 "nc.y"
{ yyval.narg = yypvt[-0].narg; } break;
case 749:
# line 1098 "nc.y"
{ yyval.narg = 1; } break;
case 750:
# line 1099 "nc.y"
{ yyval.narg = yypvt[-2].narg + 1; } break;
case 751:
# line 1102 "nc.y"
{ yypvt[-0].sym->type=FUNCTION; indef=1; formal=1; starg = argcount; } break;
case 752:
# line 1103 "nc.y"
{ formal=0; } break;
case 753:
# line 1104 "nc.y"
{code(procret); define(yypvt[-6].sym,(int)yypvt[-3].narg, yypvt[-0].inst, starg);
		erasarg(starg+1); argcount=starg; indef=0; } break;
case 754:
# line 1107 "nc.y"
{ yypvt[-0].sym->type=PROCEDURE; indef=1;formal=1; starg = argcount; } break;
case 755:
# line 1108 "nc.y"
{ formal=0; } break;
case 756:
# line 1109 "nc.y"
{code(procret); define(yypvt[-6].sym,(int)yypvt[-3].narg, yypvt[-0].inst, starg);
		erasarg(starg+1); argcount=starg; indef=0;} break;
case 757:
# line 1112 "nc.y"
{yypvt[-2].sym->type=PROCEDURE; define(yypvt[-2].sym,-1,(Inst*)yypvt[-0].sym,starg);} break;
case 758:
# line 1114 "nc.y"
{yypvt[-2].sym->type=FUNCTION; define(yypvt[-2].sym,-1,(Inst*)yypvt[-0].sym,starg);} break;
case 759:
# line 1116 "nc.y"
{yypvt[-2].sym->type=BLTIN; define(yypvt[-2].sym,-2,(Inst*)yypvt[-0].sym,starg);} break;
case 760:
# line 1125 "nc.y"
{ yyval.narg = 1; } break;
case 761:
# line 1126 "nc.y"
{ yyval.narg = yypvt[-3].narg + 1; } break;
case 762:
# line 1128 "nc.y"
{ yyval.narg = 1; } break;
case 763:
# line 1129 "nc.y"
{ yyval.narg = yypvt[-0].narg; } break;
case 764:
# line 1131 "nc.y"
{ yyval.narg = yypvt[-0].narg; } break;
case 765:
# line 1133 "nc.y"
{ yyval.inst = yypvt[-0].inst; code(evalvar); } break;
case 766:
# line 1134 "nc.y"
{ yyval.inst = (Inst *)code2(constpush, (Inst)yypvt[-0].sym); } break;
case 767:
# line 1135 "nc.y"
{ yyval.inst = yypvt[-1].inst; } break;
case 768:
# line 1137 "nc.y"
{ yyval.narg = 1; } break;
case 769:
# line 1138 "nc.y"
{ yyval.narg = 0; } break;
case 770:
# line 1140 "nc.y"
{ } break;
case 771:
# line 1141 "nc.y"
{ } break;
case 772:
# line 1142 "nc.y"
{ } break;
case 773:
# line 1143 "nc.y"
{ } break;
case 774:
# line 1144 "nc.y"
{ } break;
case 775:
# line 1145 "nc.y"
{ } break;
case 776:
# line 1146 "nc.y"
{ } break;
case 777:
# line 1147 "nc.y"
{ } break;
case 778:
# line 1148 "nc.y"
{ } break;
case 779:
# line 1149 "nc.y"
{ } break;
case 780:
# line 1150 "nc.y"
{ } break;
case 781:
# line 1151 "nc.y"
{ } break;
case 782:
# line 1152 "nc.y"
{ } break;
case 783:
# line 1153 "nc.y"
{ } break;
case 784:
# line 1154 "nc.y"
{ } break;
case 785:
# line 1155 "nc.y"
{ } break;
case 786:
# line 1156 "nc.y"
{ } break;
case 787:
# line 1157 "nc.y"
{ } break;
case 788:
# line 1158 "nc.y"
{ } break;
case 789:
# line 1159 "nc.y"
{ } break;
case 790:
# line 1160 "nc.y"
{ } break;
case 791:
# line 1161 "nc.y"
{ } break;
case 792:
# line 1162 "nc.y"
{ } break;
case 793:
# line 1163 "nc.y"
{ } break;
case 794:
# line 1164 "nc.y"
{ } break;
case 795:
# line 1165 "nc.y"
{ } break;
case 796:
# line 1166 "nc.y"
{ } break;
case 797:
# line 1168 "nc.y"
{ } break;
case 798:
# line 1169 "nc.y"
{ } break;
case 799:
# line 1170 "nc.y"
{ } break;
case 800:
# line 1171 "nc.y"
{ } break;
case 801:
# line 1173 "nc.y"
{ } break;
case 802:
# line 1174 "nc.y"
{ } break;
case 803:
# line 1175 "nc.y"
{ } break;
case 804:
# line 1176 "nc.y"
{ } break;
case 805:
# line 1177 "nc.y"
{ } break;
case 806:
# line 1178 "nc.y"
{ } break;
case 807:
# line 1179 "nc.y"
{ } break;
case 808:
# line 1180 "nc.y"
{ yyval.inst =  (Inst *)0; } break;
case 809:
# line 1181 "nc.y"
{ } break;
case 814:
# line 1188 "nc.y"
{ } break;
case 815:
# line 1189 "nc.y"
{ } break;
case 816:
# line 1190 "nc.y"
{ } break;
case 818:
# line 1194 "nc.y"
{ } break;
case 819:
# line 1195 "nc.y"
{ } break;
case 820:
# line 1197 "nc.y"
{ yyval.narg = 0; } break;
case 821:
# line 1198 "nc.y"
{ yyval.narg = 1; } break;
case 822:
# line 1199 "nc.y"
{ yyval.narg = yypvt[-2].narg + 1; } break;
case 823:
# line 1201 "nc.y"
{ yyval.narg = yypvt[-1].narg; } break;
case 824:
# line 1203 "nc.y"
{ yyval.narg = yypvt[-2].narg; } break;
case 825:
# line 1204 "nc.y"
{ yyval.narg = -2; } break;
case 826:
# line 1205 "nc.y"
{ yyval.narg = -3; } break;
case 827:
# line 1207 "nc.y"
{ yyval.narg = 0; } break;
case 828:
# line 1208 "nc.y"
{ yyval.narg = 1;      yypvt[-0].sym->argnum = ++argcount; } break;
case 829:
# line 1209 "nc.y"
{ yyval.narg = yypvt[-2].narg + 1; yypvt[-0].sym->argnum = ++argcount; } break;
case 830:
# line 1211 "nc.y"
{yyval.sym=yypvt[-0].sym; savlocal=inlocal; inlocal=0;} break;
case 831:
# line 1213 "nc.y"
{ yyval.narg = 1; yypvt[-0].sym->argnum = ++argcount; } break;
case 832:
# line 1215 "nc.y"
{ inlocal=savlocal; yyval.narg = 1; 
			code3(dlocarray,(Inst)(long)++argcount,(Inst)(long)yypvt[-0].narg); 
			 yypvt[-1].sym->argnum=argcount; arrcount++;
			 yypvt[-1].sym->type=LOCALARR; } break;
case 833:
# line 1221 "nc.y"
{ code3(dlocarray,(Inst)(long)++argcount,(Inst)(long)yypvt[-0].narg); 
		 yypvt[-1].sym->argnum=argcount; arrcount++;
		 yypvt[-1].sym->type=LOCALARR; } break;
case 834:
# line 1225 "nc.y"
{ yyval.narg = 1; 
		inlocal=savlocal; code3(initarr,(Inst)0,(Inst)(long)yypvt[-0].narg);} break;
case 835:
# line 1229 "nc.y"
{ yyval.narg=1; code4(dlocarray,(Inst)(long)++argcount,(Inst)0,(Inst)(long)yypvt[-0].narg);
		 code2(stackmove,(Inst)(long)yypvt[-0].narg); 
		yypvt[-4].sym->argnum=argcount; arrcount++; yypvt[-4].sym->type=LOCALARR; 
		inlocal=savlocal; code3(initarr,(Inst)0,(Inst)(long)yypvt[-0].narg); } break;
case 836:
# line 1234 "nc.y"
{ yyval.narg = yypvt[-2].narg + 1; yypvt[-0].sym->argnum = ++argcount; } break;
case 837:
# line 1236 "nc.y"
{ inlocal=savlocal; yyval.narg = yypvt[-3].narg + 1; 
			code3(dlocarray,(Inst)(long)++argcount,(Inst)(long)yypvt[-0].narg); 
			  yypvt[-1].sym->argnum=argcount; arrcount++;
			  yypvt[-1].sym->type=LOCALARR; } break;
case 838:
# line 1242 "nc.y"
{ code3(dlocarray,(Inst)(long)++argcount,(Inst)(long)yypvt[-0].narg); 
		  yypvt[-1].sym->argnum=argcount; arrcount++; yypvt[-1].sym->type=LOCALARR; } break;
case 839:
# line 1245 "nc.y"
{ yyval.narg = yypvt[-6].narg + 1; 
		inlocal=savlocal; code3(initarr,(Inst)0,(Inst)(long)yypvt[-0].narg);} break;
case 840:
# line 1249 "nc.y"
{ yyval.narg=yypvt[-6].narg+1; code4(dlocarray,(Inst)(long)++argcount,(Inst)0,(Inst)(long)yypvt[-0].narg);
		 code2(stackmove,(Inst)(long)yypvt[-0].narg); 
		yypvt[-4].sym->argnum=argcount; arrcount++; yypvt[-4].sym->type=LOCALARR; 
		inlocal=savlocal; code3(initarr,(Inst)0,(Inst)(long)yypvt[-0].narg); } break;
case 841:
# line 1255 "nc.y"
{ inlocal=argcount+1; arrcount=0; } break;
case 842:
# line 1256 "nc.y"
{ yyval.narg=argcount-yypvt[-0].narg+1; inlocal=0; 
		(Inst *)code3(local,(Inst)(long)yypvt[-0].narg,(Inst)(long)arrcount); } break;
case 843:
# line 1258 "nc.y"
{ inlocal=argcount+1; arrcount=0; } break;
case 844:
# line 1259 "nc.y"
{ yyval.narg=yypvt[-4].narg; inlocal=0; (Inst *)code3(local,(Inst)(long)yypvt[-0].narg,(Inst)(long)arrcount); } break;
case 845:
# line 1261 "nc.y"
{ yyval.narg = 1; } break;
case 846:
# line 1262 "nc.y"
{ yyval.narg = yypvt[-2].narg + 1; } break;
	}
	goto yystack;		/* reset registers in driver code */
}
