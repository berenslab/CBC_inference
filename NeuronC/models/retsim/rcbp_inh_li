#! /home/rob/bin/nci -c
#
# rcbp_inh_v3
#
# usage:  (see rcbp_inh script)
#

mosrun = "mosrun -l";         /* for running jobs in parallel with Mosix system */
//mosrun = "";
filename = "";

arrsiz = 150;

v = 0;
w = 1;
B = 7;
d = 0;		/* display model */
R = 0;		/* make povray image */

ninfo = 2;
vers = 5;
plotpdf = 0;
pjobs = 0;

ps = 1e-12;

g_dbp1_am  = 0.4e-10;	// reciprocal feedback dbp1 <-> am
g_am_dbp1  = 0.4e-10;

g_dbp1_am2 = 0.4e-14;	// must have to allow lateral inhb from am2

g_dbp2_am2 = 0.4e-10;	// reciprocal feedback dbp2 <-> am2
g_am2_dbp2 = 0.4e-10;

g_am2_dbp1 = 0.4e-10;	// lateral inhib

dbp1pca4 = 0.05;	// dbp1 -> am  postsyn AMPA Ca perm
dbp2pca5 = 0.02;	// dbp2 -> am2 postsyn AMPA Ca perm

am2ca = 0;		// Ca channel density in am2

cellname = "cbp_0576_t5os";

comnd_line_only = 0;

x = setvar();                   /* get parameters from command line */

// -  -  -  -  -

    sprintf (filename_header,"cbp_inh_%g_v%g",arrsiz,vers);
    if (filename != "") sprintf (filenamec, "%s-%s",filename_header,filename)
    else {
	if (d > 0) sprintf (filenamec,"%s.%g.%g.%g",filename_header,mxrot,myrot,mzrot)
	else       sprintf (filenamec,"%s-%g-%g-%g-%4.2f-%3.1f",filename_header,
					g_dbp2_am2/ps, g_am2_dbp2/ps, g_am2_dbp1/ps, dbp2pca5, am2ca*1e3);
    };

  
    sprintf(str1,"retsim --expt cbp_inh --cbptype dbp1 --dbp1_file %%s --dbp1_soma_z -6 --dbp1_thetaz 120 --dbp2_thetaz 90 --dbp2_file %%s --dbp2_soma_z -6 --make_cones 1 --cone_soma_z 19 --cone_type 2 --presyn1 8 --presyn2 8 --presyn3 8 --axdia 0.7 --drm 30000 --dri 200 -r 12543 --dbp1_am 2 --dbp2_am 2 --dtreedia 460 --cmult 0.0015 --minten -0.0423 --pnoise 0 --dnoise 0 --ksoma 0 --cadist 0.001 --catdist 0 --naab 0 --dbp1_mp 50 --dbp1_mr 0 --dvrev -0.07 --spotdur 0.75 --predur 0.1 --disp_c2 1 --stimloc 0 --axon_base 701 --n_dbp1 -1 --n_dbp2 -1 --amarr 100 --make_dbp1_am2 1 --make_am_dbp2 0 --make_dbp2_am 0 --g_dbp1_am %g --g_dbp1_am2 %g --g_am_dbp1 %g --g_am2_dbp1 %g --g_dbp2_am2 %g --g_am2_dbp2 %g --dbp1_gtau 1 --dbp1_g4tau 2 --am_sdur 1 --am_sfall 0 --am_sdur2 500 --am_sfall2 0 --am_atau 1 --spotdia 400 --arrsiz %g --dbp1pca4 %g --dbp2pca5 %g --am2dbp1ca 1 --mxrot 0 --draw_synapse 1 --am2ca %g --syn_restorefile cbp_inh_cone_gca_save5cx --ninfo 2 --vnoise 0", g_dbp1_am, g_dbp1_am2, g_am_dbp1, g_am2_dbp1, g_dbp2_am2, g_am2_dbp2, arrsiz, dbp1pca4, dbp2pca5, am2ca);

   sprintf (str2,str1, cellname, cellname);

   sprintf(str3,"--cone_nscale -2.1 --dbp1_nscale -2.09 --gca_nscale -2.05 --am_nscale -2.06 --am2_nscale -2.06");

   sprintf(str4,"--plotlabel %s",filenamec);

   sprintf(run_string,"%s %s %s",str2,str3,str4);

    /* run or display model */

    if (d > 0) {		// display model

          if (R > 0) {		// make povray image

            sprintf(ret_string,"%s -d %g -R > %s.pov",run_string,d,filenamec);
            sprintf(pov_string,"povray -w%g -h%g -i%s.pov -dx",povres,povres,filenamec);
            sprintf(system_string,"%s; %s",ret_string,pov_string);
	    if (comnd_line_only) print "\n",system_string 
	    else system (system_string);

          } else {			/* display model with vid */

	    if (v > 0) {	// make image with vid

              sprintf(system_string,"%s -d %g -v | vid -B %g -w %g",run_string,d,B,w);
	      if (comnd_line_only) print "\n",system_string 
	      else system (system_string);

	    } else {		// make .ps image, convert to pdf

	      sprintf(vid_string,"%s -d %g -v | vid -c > %s.ps",run_string,d,filenamec);
	      sprintf(ps2pdf_string,"ps2pdf %s.ps && rm %s.ps",filenamec,filenamec);
	      sprintf(system_string,"%s; %s",vid_string,ps2pdf_string);
	      if (comnd_line_only) print "\n",system_string 
	      else system (system_string);

	    }; /* make ps image */

          }; /* display model with vid */

     }  /* if (d > 0) */

     else {			// run model

	  if (v > 0) {		// run to vid window

            sprintf(system_string,"%s -v | vid -B %g -w %g",run_string,B,w);
	    if (comnd_line_only) print "\n",system_string 
	    else system (system_string);

	 } else {		// make .r file, if not parallel, convert to pdf 

	   if (mosrun!="") pjobs = 1;

	   if (plotpdf > 0) {	// convert .r file into pdf

	      sprintf(plot_string,"plotmod %s.r | vid -c > %s.ps",filenamec,filenamec);
	      sprintf(ps2pdf_string,"ps2pdf %s.ps && rm %s.ps",filenamec,filenamec);
	      sprintf(system_string,"%s; %s",plot_string,ps2pdf_string);
	      if (comnd_line_only) print "\n",system_string 
	      else system (system_string);

	   } else {		// make .r file

	      if (pjobs==0) {	// if not parallel, make .r file, convert to pdf

	        sprintf(model_string,"%s >& %s.r",run_string,filenamec);
	        sprintf(plot_string,"plotmod %s.r | vid -c > %s.ps",filenamec,filenamec);
	        sprintf(ps2pdf_string,"ps2pdf %s.ps && rm %s.ps",filenamec,filenamec);
	        sprintf(system_string,"%s; %s; %s",model_string,plot_string,ps2pdf_string);
	        if (comnd_line_only) print "\n",system_string 
	        else system (system_string);
	     } 
	     else {		// make .r file in parallel

	        if (mosrun=="") {
	          sprintf(system_string,"%s >& %s.r &",run_string,filenamec);
	        } else {
		  sprintf(system_string,"%s %s >& %s.r & sleep 0.5",mosrun,run_string,filenamec);
	        };
	        if (comnd_line_only) print "\n",system_string 
	        else system (system_string);
	     };
	   };  /* else plotpdf==0 */

	  }; /* make .r file */

     }; /* run model */





