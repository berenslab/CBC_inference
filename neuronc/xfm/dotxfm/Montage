#XFM
Ghostview:::ghostview.xpm:exec ghostview:exec ghostview $*
Xfig:::xfig.xpm:exec xfig:exec xfig $*
aimaker:::ps2ai.xpm:exec aimaker % File to convert %:exec aimaker $1 
picture:::neuron.xpm: cd %directory%; xterm -T picture -n picture -e picture: exec xterm -T picture -n picture -e picture $1
picture-ps:::neuron-ps.xpm:cd %directory%; mpict -s %file--file.cor% | vid -c > %Output file--file.ps%:mpict -s $1 | vid -c > $1\:r.ps 
picture-hide:::neuron.xpm:cd %directory%; picthide %file--file.cor%:exec picthide $1 
picture-hide-ps:::neuron-ps.xpm:cd %directory% ; mpict -s %file--file.cor% | hide11 | vid -c %Output file--file.ps%:mpict -s $1 | hide11 | vid -c > $1\:r.ps 
picture-hide-lpr:::neuron.xpm:cd %directory% ; mpict -s %file--file.cor% | hide11 | vid -c | lpr:mpict -s $1 | hide11 | vid -c | lpr
picture-hide-ai:::neuron-ps.xpm:cd %directory% ; mpict -s %file--file.cor% | hide11 | vid -c %Output file--file.ps%:mpict -s $1 | hide11 | vid -c > $1\:r.ps ; aimaker $1\:r.ps 
fstor - store:::neuron-fs.xpm:cd %directory to store file%; exec fstor -s %Input filename--file.dat% %Output filename--file.sto%:exec fstor -s $1 $1\:r.sto
fstor - retrieve:::neuron-fr.xpm:cd %directory to retrieve file%; fstor -l 4096 -r %Input filename--file.sto% %Output filename--file.dat%:
glink - area:::neuron-area.xpm:cd %Directory to analyze area/perim%; glink -t -a %Filename--file.dat (or .sto)% %Output filename--file.a%: ps2ai
glink - flags:::neuron-flag.xpm:cd %Directory to analyze flags%; glink -F %Filename--file.dat (or .sto)% > %Output filename--file.f%:glink -F $1 > $1\:r.f 
