/* Make synapses */

if (make_bpgc) {			/* make synapses from bipolar to gc */
      local g, mindist, dist, close_gc, close_gcn;

    if (notinit(bpsyn_dist_thresh)) bpsyn_dist_thresh = 7;

    nbpgc_syn = 0;
    foreach node [bp] ?b {
      mindist = 1e10;
      close_gc = 0;
      foreach cable ?br node [gc] ?g ?d {
       if ((element br ->elabl) == "dend_dist") {
         if ((dist=n2dist([bp][b],[gc][g][d])) < mindist) {
           mindist = dist;			/* remember this dist */
	   close_gc = d;			/* save gc node */
	   close_gcn = g;			/* save gc node */
         };
       };
       //print dist;
      };
      if (mindist < bpsyn_dist_thresh) {
        conn [bp][b] to [gc][close_gcn][close_gc]
        synapse open expon=exponbp maxcond=nchanbpgc*condf
        thresh=thresh1 vrev=0
        vgain=1
	nfilt1 1 timec1 1
        nfilt3 2 timec3=srdur
        vesnoise=ves_noise vsize=vsiz nfilt2 1 timec2 sfdur
        chnoise= postsyn_noise unit=condf
        ename bpgcsyns[nbpgc_syn];
       nbpgc_syn++;
      };
    };
    if (info>=2) printf ("# number of bpgc synapses %g\n",nbpgc_syn);
};

/*  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  */

  if (make_bpam) {			/* synapse from bipolar to amacrine */
      local mindist, maxdist, dist, c, n, close_am, raddist, condfactor;

    if (notinit(bpam_dist_thresh)) bpam_dist_thresh = 10;
/*  if (notinit(am_input_dist)) am_input_dist = 30;    /* am input */

    nbpam_syn = 0;
    foreach node [bp] ?b {
      mindist = 1e10;
      maxdist = 1e-10;
      close_am_n = 0;
      close_am_d = 0;
      foreach node [am] ?c ?n {

     /* don't connect inputs to peripheral amac dendrites */
     /* if (n2dist([am][n][soma],[am][n][d]) > am_input_dist) continue; */

       if ((dist=n2dist([am][c][n],[am][c][soma])) > maxdist)
           maxdist = dist;			/* remember max dist to soma*/

       if ((dist=n2dist([bp][b],[am][c][n])) < mindist) {
           mindist = dist;			/* remember this dist */
	   close_am_c = c;			/* save am cell number */
	   close_am_n = n;			/* save am node */
       };
      };

      if (notinit(bpsim_mode)) bpsim_mode=0;

      //don't make synapses to soma, unless user specifies it
      if (notinit(bpam_somasyns)){
        if (close_am_n==soma) continue;
      };

      if(notinit(dist_syn_fac)) dist_syn_fac=1;	//increase distal synapses by a factor

      //if node is far enough from soma, increase bpam_dist_thresh (-> make more synapses)
      if ((n2dist([am][close_am_c][close_am_n],[am][close_am_c][soma])) > 0.66*maxdist)
        bpam_dist_thresh2 = bpam_dist_thresh * dist_syn_fac
      else
        bpam_dist_thresh2 = bpam_dist_thresh;

//print n2dist([am][close_am_c][close_am_n],[am][close_am_c][soma]), maxdist, bpam_dist_thresh2;
//print mindist, bpam_dist_thresh;

      if (mindist < bpam_dist_thresh2) {
        raddist = n2dist([am][c][soma],[am][c][close_am_n]);
	//condfactor=1 at soma, 4 at tip; simulates effect of more bp cells
	if (bpsim_mode)
	   condfactor=15/am_nden*PI*(raddist/xmax)^2    //condfactor = 1 + (((raddist/xmax)*2))^2
	else if (!notinit(tipfactor)) {
	   if (raddist>.66*xmax) condfactor=tipfactor;
	}
	else
	   condfactor = 1;

	conn [bp][b] to [am][close_am_c][close_am_n]
         synapse open expon=exponbp maxcond=(nchanbpam*condf)*condfactor
         thresh=thresh1  vrev=0
         vgain=1
  	 nfilt1 1 timec1 .2
         nfilt3 2 timec3=srdur
         vesnoise=ves_noise vsize=vsiz nfilt2 1 timec2 sfdur
         chnoise= postsyn_noise unit=condf
         ename bpamsynsb[b];
//print close_am_n, (nchanbpam*condf)*condfactor;
        bpamsynsa[close_am_c][close_am_n] = bpamsynsb[b];  /* save in am list */
        nbpam_syn++;
      };
    };
    if (info>=2) printf ("# number of bpam synapses %g\n",nbpam_syn);
  };

/*  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  */

 if (make_amgc) {			/* synapse from amacrine to gc */

      local a, ad, an, adn, s;
      local g, gd;
      local mindist, dist;
      local close_gc_n, close_gc_d;
      local too_close;

    if (notinit(amgc_dist_thresh)) amgc_dist_thresh = 10;
    if (notinit(am_refr_dist))   am_refr_dist = 5;   /* synaptic spacing */

    namgc_syn = 0;
    foreach node [am] ?a ?ad {

	/* Check to make sure new synapse will be spaced farther
           than "am_refr_dist" from all other synapses on same cell. */

      too_close = 0;
      foreach synapse ?s node [am] [a] ?adn {
        if (ad==adn) continue;
        if ((n2dist([am][a][ad],[am][a][adn])  < am_refr_dist) ||
	    (n2dist([am][a][ad],[am][a][soma]) < am_output_dist))
			too_close = 1;
      };
      if (too_close) continue;
      mindist = 1e10;
      close_am_n = 0;
      close_am_d = 0;
      foreach node [gc] ?g ?gd {

      if ((dist=n2dist([am][a][ad],[gc][g][gd])) < mindist) {
           mindist = dist;			/* remember this dist */
	   close_gc_n = g;			/* save gc number */
	   close_gc_d = gd;			/* save gc node */
      };
     //print dist;
     };
     if (mindist < amgc_dist_thresh) {
	conn [am][a][ad] to [gc][close_gc_n][close_gc_d]
	synapse open expon=exponam maxcond=nchanamgc*amu
	thresh=thresh1 vrev=vcl
	vgain=1
	nfilt1 1 timec1 1
	nfilt3 2 timec3=srdur
	vesnoise=ves_noise vsize=vsiz nfilt2 1 timec2 sfdur
	chnoise= postsyn_noise unit=amu
	ename amgcsyns[a][ad];
       namgc_syn++;
     };
   };
   if (info>=2) printf ("# number of amgc synapses %g\n",namgc_syn);
 };

if (info>=1) {
   if (make_bpgc || make_bpam || make_amgc) {
     printf ("# Done making synapses.\n");
 }
   else
     printf ("# No synapses made.\n");
   printf ("# */\n");
};
