#! nc -c

/* Creates simple ds cell with spike generator */

/* general parameters */		

ploti    = 1e-4; 
crit     = 1e-8; 
tempcel  = 35;
implicit = 1; 
drm      = 50000;
plsep = 1;

vcl = -0.065;
vk  = -0.080;
vna = +0.04;

soma	= 0;
gang	= 1;
bipl 	= 2;
amac    = 3;

ndseg = 10;			/* number of gc/bp/am segments */

	
/* synaptic parameters */	

condf 	= 22e-12; /* unit conductance of synapes */
nchanbp	= 30;     /* N postsynaptic chan. */
nchanam	= 50;     /* N postsynaptic chan. */
nchanbpam= 10;     /* N postsynaptic chan. */
amu     = 5e-12;  /* bp-> amacrine unitary current */
sfdur 	= 2;
srdur 	= .5;
dvsz    = 10;     /* default vesicle size when no noise */
vsiz	= 10;
expon1	= 2;
exponamgc= 5;
thresh1 = -0.045;

/* end: synaptic parameters */	

/* experiment control variables */	

make_gc		= 1; 	 	/* make ganglion cell */
make_bp		= 1; 	 	/* make bipolar cell */
make_amac	= 1; 	 	/* make amacrine cell */
make_bpsyn	= 1; 	 	/* make bipolar cell synapses */
make_bpam	= 1; 	 	/* make bipolar cell -> amac synapses */
make_bpgc	= 1; 	 	/* make bipolar cell -> GC synapses */
make_amgc	= 1; 	 	/* make amacrine cell -> GC synapses */
light_resp	= 1;
current_stim	= 1;

postsyn_noise	= 0;
ves_noise       = 0;

expt = "surf_area";		/* calc surface area */
expt = "istim_soma";		/* somatic current */
expt = "epsc";			/* spot, short flash with vclamp to see epsc*/
expt = "fro";			/* spot moving left */
expt = "to";			/* spot moving right */
expt = "tofro";			/* spot moving right, left */

expt = "tofro";  		/* Set "expt" value on command line or here */
				/*  to run different experiment. */

v_bp_dark = -.05;		/* bp dark voltage */
v_bp_light = -.042;		/* bp light voltage */

dd = setvar();			/* set values from command line */

/*-------------- set build params ---------------------------*/

/* parameters to set before building model */

if (expt == "istim_soma") {	/* somatic current stimulus, one step */

  make_bp	= 0; 	 	/* =1 -> make bipolar cell */
  make_amac	= 0; 	 	/* =1 -> make amacrine cell */
  make_bpgc	= 0; 	 	/* =1 -> make bipolar cell -> GC synapses */
  make_bpam	= 0; 	 	/* =1 -> make bipolar cell -> amac synapses */
  make_amgc	= 0; 	 	/* =1 -> make amacrine cell -> GC synapses */
  if (notinit(gcv)) gcv = -.07;	/* gc initial resting potential */
}
else if (expt == "epsc") {		/* somatic current stimulus, one step */
  make_amgc	= 0; 	 	/* =1 -> make amacrine cell -> GC synapses */
}
else if (expt == "fro") {	/* spot moving left  */
}
else if (expt == "to") {	/* spot moving right */
};
 
/*-------------- make ---------------------------------------*/

dim bpamsyns[1000];		/* array to hold synapse numbers */
dim bpgcsyns[1000];
dim amgcsyns[1000];

bp_zloc   = 15;		/* bp stratum */
amac_zloc = 14;		/* amacrine stratum */
gc_zloc   = 10;		/* GC dendrite arborization stratum */

xseg = 20;		/* length of segment of GC, amac, bipolar spacing */

ld = 1;			/* left  dendrite */
rd = 0;			/* right dendrite */

if (notinit(gcv)) gcv = -.03;

if (make_gc) {
  at [gang][soma] loc (0,0,-10) sphere dia 15 vrev -.07 vrest=gcv;
  conn [gang][soma] to [gang][rd][soma+1] cable dia .8 vrest=gcv;

  for (i=soma+1; i<ndseg; i++) {		/* make R dendritic arm */
     at [gang][rd][i]   loc (xseg*i,0,gc_zloc);
     at [gang][rd][i+1] loc (xseg*(i+1),0,gc_zloc);
     conn [gang][rd][i] to [gang][rd][i+1] cable dia .2 vrest=gcv;
  };
						/* make L dendritic arm */
  conn [gang][soma] to [gang][ld][soma+1] cable dia .8;
  for (i=soma+1; i<ndseg; i++) {		
     at [gang][ld][i]   loc (-xseg*i,0,gc_zloc);
     at [gang][ld][i+1] loc (-xseg*(i+1),0,gc_zloc);
     conn [gang][ld][i] to [gang][ld][i+1] cable dia .2 vrest=gcv;
  };
};

if (make_bp) {					/* make bipolar cells */
  for (i=soma+1; i<=ndseg; i++) {
    at [bipl][i] loc (xseg*i,0,bp_zloc) sphere dia 5 vrev -.07 vrest -.07;
    if (light_resp) at [bipl][i] transducer (xseg*i,0);
  };
};

if (make_amac) {				/* make amacrine cells */
  for (i=soma+2; i<=ndseg; i++) {
    at [amac][i][0]   loc (xseg*i,0,amac_zloc);	/* receives bp synapse */
    at [amac][i-1][1] loc (xseg*(i-1),0,gc_zloc + 1); /* outputs to gc */
    conn [amac][i][0] to [amac][i-1][1] cable dia 0.1 rm 40000 vrev -.07 vrest -.07;
  };
};

if (make_bpsyn) {
  if (make_bpgc) {
    for (i=soma+1; i<=ndseg; i++) {    /* synapse from bipolar to GC dendrite */
      conn [bipl][i] to [gang][rd][i]
      synapse open expon=expon1 maxcond=nchanbp*condf
      vgain=1
      kd 0.5 
      vesnoise=ves_noise vsize=vsiz nfilt2 1 timec2 sfdur
      chnoise= postsyn_noise unit=condf
      nfilt3 2 timec3=srdur
      thresh=thresh1  vrev=0 nfilt1 1 timec1 1
      ename bpgcsyns[i];
     };
   };
  if (make_bpam && make_amac) {		/* synapse from bipolar to amacrine */
     for (i=soma+2; i<=ndseg; i++) { 
       conn [bipl][i] to [amac][i][0]
       synapse open expon=expon1 maxcond=nchanbpam*amu
       vgain=1
       kd 0.5
       vesnoise=ves_noise vsize=vsiz nfilt2 1 timec2 sfdur
       chnoise= postsyn_noise unit=amu
       nfilt3 2 timec3=srdur
       thresh=thresh1  vrev=0 nfilt1 1 timec1 1
       ename bpamsyns[i];
      };
  };
};

if (make_amgc && make_amac) {
    for (i=soma+1; i<ndseg; i++) {     /* synapse from am to GC dendrite */
      conn [amac][i][1] to [gang][rd][i]
      synapse open expon=exponamgc maxcond=nchanam*condf
      vgain=1
      kd 0.5
      vesnoise=ves_noise vsize=vsiz nfilt2 1 timec2 sfdur
      chnoise= postsyn_noise unit=condf
      nfilt3 2 timec3=srdur
      thresh=thresh1  vrev=-.07 
      ename amgcsyns[i];
    };
};

/*-------------- display ------------------------------------*/

if (disp) {
 display size 450;
 display center (0,0,10);
 display calibline 20;
 display xrot 90;

/* display matching [gang][0][-1] except cable;			/* */
/* display sphere matching [bipl][-1];				/* */
// display synapse matching [bipl][-1] color 4;			/* */

if (1) { 			/* display everything */ 
  display sphere matching [gang][-1][-1] color 1;                   /* */
  display cable  matching [gang][-1][-1] dscale 2 color 1;		/* */
  display node   matching [gang][-1][-1] color 5 dscale 1;		/* */
  display comps  matching [gang][-1][-1] color 4;			/* */
 };
if (1) { 			/* display bipolar */ 
  display sphere matching [bipl][-1] color 4;                   /* */
  display cable  matching [bipl][-1] dscale 1 color 4;		/* */
  display node   matching [bipl][-1] color 5 dscale 1;		/* */
  display comps  matching [bipl][-1] color 4;			/* */
 };
if (1) { 			/* display amacrine */ 
  display sphere matching [amac][-1][-1] color 2;               /* */
  display cable  matching [amac][-1][-1] dscale 1 color 2;	/* */
  display node   matching [amac][-1][-1] color 5 dscale 1;	/* */
  display comps  matching [amac][-1][-1] color 4;		/* */
 };
 exit;		/* exit when done display */

};


/* =========== stim =========================================*/

stim center (xseg*ndseg/2,0);

if (expt == "surf_area") {	/* calculate surface area */
 totsa 	= 0;
 foreach cable ?d node [gang][-1][-1] {
		totsa += PI*element d->dia*element d->length;};
 printf ("# Surface area of dendrites   = %g um2\n",totsa);
 foreach sphere ?d node [gang][-1] {local r;  r = element d->dia/2;
 		totsa += 4*PI*r*r; };
 printf ("# Surface area including soma = %g um2\n",totsa);
 printf ("# Rin estimated from surface area = %g\n",drm/totsa*1e8);
}
else if (expt == "istim_soma") {	/* soma current stimulus */
	if (notinit(istim)) istim = 10e-12;
	if (notinit(stimdur)) stimdur = .2;
    	endexp=stimdur;
	stim node [gang][soma] cclamp istim start .02 dur stimdur; 
	gc_vplg = .1;
  	gc_vplot = 1;
}
else if (expt == "epsc") {        /* spot, short flash with vclamp to see epsc*/

	if (notinit(istim)) istim = 100e-12;
	if (notinit(stimdur)) stimdur = .06;
	stim backgr v_bp_dark start 0;
	stimdur  = .1;
	stim spot 1000 loc (0,0) inten .005 start=time dur=stimdur;
	endexp = .4;
	gc_iplot = 1;
}
else if (expt == "to") {
	stim file "ds_to.t";
        stim backgr v_bp_dark start 0;
	velocity = 3000;
        xnear = -2*xseg;
        xfar = xseg*(ndseg+3);
        xstep=xseg/10;
        stimstep = xstep / velocity;
	for (t=0,x=xnear; x<=xfar; x+= xstep,t += stimstep) {
    	  stim spot 10 loc(x,0) blur 30 inten .06 start t dur stimstep; 
   	}; 
	endexp= (xfar-xnear+1)/xstep * stimstep;
	gc_iplot = 1;
}
else if (expt == "fro") {
	stim file "ds_fro.t";
        stim backgr v_bp_dark start 0;
	velocity = 3000;
        xnear = -2*xseg;
        xfar = xseg*(ndseg+3);
        xstep=xseg/10;
        stimstep = xstep / velocity;
	for (t=0,x=xfar; x >= xnear; x-= xstep,t += stimstep) {
    	  stim spot 10 loc(x,0) blur 30 inten .06 start t dur stimstep; 
   	}; 
	endexp= (xfar-xnear+1)/xstep * stimstep;
	gc_iplot = 1;
}
else if (expt == "tofro") {
	stim file "ds_tofro.t";
        stim backgr v_bp_dark start 0;
	velocity = 3000;
        xnear = -2*xseg;
        xfar = xseg*(ndseg+3);
        xstep=xseg/10;
        stimstep = xstep / velocity;
	for (t=0,x=xnear; x<=xfar; x+= xstep,t += stimstep) {
    	  stim spot 10 loc(x,0) blur 30 inten .06 start t dur stimstep; 
   	}; 
	for (x=xfar; x >= xnear; x-= xstep,t += stimstep) {
    	  stim spot 10 loc(x,0) blur 30 inten .06 start t dur stimstep; 
   	}; 
	endexp= 2 * (xfar-xnear+1)/xstep * stimstep;
	gc_iplot = 1;
};

/*------------ plot -----------------------------------------*/

if (notinit(gc_iplot)) gc_iplot = 0;
if (notinit(gc_vplot)) gc_vplot = 0;

if (gc_iplot) stim node [gang][soma] vclamp gcv start 0 dur 1;
 

if (make_bp) {
  plg   = .03;		/* gain of trace */
  offtr = .3;		/* position of trace within graph */
  offb  = -.05;		/* trace offset base */

  for (i=1; i<=10; i++) {
    if (i<=1)str="Vbp"
    else     str="";
    plot V[bipl][i] max (1-offtr)*plg+offb min (0-offtr)*plg+offb 
					plsize 1 plname str plnum 7;
  };
};

plgain = 100;		/* gain of trace */
offtr = .0;		/* position of trace within graph */
offb  = 0;		/* trace offset base */

if (make_bpgc) plot FA9 bpgcsyns[5] max (1-offtr)*plgain+offb 
				    min (0-offtr)*plgain+offb 
					pen 5 plname "BpGc" plnum 6;

if (make_amac) plot V[amac][5][1] min -0.08 max 0.01 
					pen 12 plname "Vam" plnum 5; 

if (make_amgc) plot FA9 amgcsyns[5] max (1-offtr)*plgain+offb 
				    min (0-offtr)*plgain+offb 
					pen 6 plname "AmGc" plnum 4;


plg = 10e-12;				/* gain of trace */
offb   = 2e-12;				/* trace offset base */
offtr  = .2;				/* position of trace within graph */

if (gc_iplot) plot I[gang][soma] max (1-offtr)*plg+offb 
		   		 min (0-offtr)*plg+offb 
					pen 2 plname "Igc" plnum 1 plsize .5;

if (notinit(gc_vplg)) gc_vplg = .1;	/* gain of trace */
offtr = .3;		/* position of trace within graph */
offb  = -.05;		/* trace offset base */

if (gc_vplot) plot V[gang][soma] max (1-offtr)*gc_vplg+offb 
		   		 min (0-offtr)*gc_vplg+offb 
					pen 2 plname "Vgc" plnum 1;

//plot V[gang][rd][2] min -0.08 max 0.01 plname "Vdend"; /*dendr syn input */

run;
