/* square array of aii amacrines */
/* connected by gap junctions */

/* 100 msec single-photon signal */

/* feedback from depolarization to gj conductance. */

timinc = 1e-4;
endexp = 2.0;
crit = 1e-8;
ploti = .001;
relax = .10;
drm = 20000;
tempcel = 22;
lamcrit=0;

arrsiz = 15;			/* size of cone array */

scal = 8;
aiisoma = 7;
rbpsoma = 7;
drg = 2.5e6;
gjcond =  400e-12;
nconn = 9;

/* qsize =  .008; */
/* darkv  = -.046; */
qsize =  .5e-12;
darkv  = 2.2e-12;

condr = 66e-12;
cond_ampa = 22e-12;
rseed = 46691;

rbprest = -.042;
aiirest = -.055;

nfv = 4;
vsz = 5;
nfc = 0;

natau = 20;
ktau  = 28;

nona = 0;		/* =1 -> no Na, K channels in simulation */
nogj = 0;		/* =1 -> no gap junctions in simulation */
stim1 = 0;		/* =1 -> only 1 AII stimulated (not 5)  */
nostim = 0;		/* =1 -> no stimulus, just resting V */
slowr = 1;		/* =1 -> 100 msec rise time */

nsteps=1;		/* number of steps for stim rise time */
risetime=0.001;		/* length of stim rise time */
stimtime = .15;		/* stim start */
topdur = .03;		/* stimulus top duration */

photsec = 2;		/* photons/sec/rod */

rbp = 3;
aii = 4;
gangc = 7;

aiiz = 0;		/* z location */
rbpz = 20;

ves_noise = 1;
ch_noise  = 1;

x = setvar();

if (slowr==1)  {
  risetime = .050;
  nsteps = 100;
  nsteps = 10;
};

//if (stim1==1) {
//   qsize += 0.0017;
//};

//if (nfv==0) {
//   darkv -= .0003;
//};

numphot = photsec * endexp * arrsiz * arrsiz;

print "## numphot", numphot;

totsiz = arrsiz * arrsiz + 1;

include "mid.m";

midarr = midrow(arrsiz);
mida = mid(arrsiz);

rada = int(arrsiz/2);
cent = rada*scal;			/* location of stimulus in microns */

dim aiiarr[arrsiz][arrsiz][4];
dim gconnect[totsiz][nconn];
dim xx[totsiz];


/*-----------------------------------------------*/

proc congj(sourcex,sourcey,destx,desty) {

  local source, dest, zi;

source = aiiarr[sourcex][sourcey][0];		/* source aii */
dest   = aiiarr[destx][desty][0];		/* dest aii */

found=0;
 for (zi=0; zi<nconn; zi++) {		/* check for previous connection */
   if (gconnect[source][zi]==dest) found = 1;
   if (gconnect[source][zi]<0) break;
 };

 if (found == 0) {
    gconnect[source][zi] = dest;		/* remember connection */
    conn [aii][sourcex][sourcey] to [aii][destx][desty] 
		gj gjcond mesgin cAMP open gnv=1;
 };
 for (zi=0; zi<nconn; zi++) {		/* remember reverse conn */
   if (gconnect[dest][zi]==source) found = 1;
   if (gconnect[dest][zi]<0) break;
 };
 if (found == 0) 
   gconnect[dest][zi] = source;
};

/*-----------------------------------------------*/

func in5 (x,y,locx,locy) {

/* Return 1 if (x,y) location is inside array of 5 cells, 
   centered on (locx, locy).  */

 if (x==locx && y==locy) return 1;
 if (x==locx-1 && y==locy) return 1;
 if (x==locx+1 && y==locy) return 1;
 if (x==locx && y==locy-1) return 1;
 if (x==locx && y==locy+1) return 1;
 return 0;
};
 
/*-----------------------------------------------*/

proc makephot (n1, n2, n3, stimtime) 

{
    local i;

  stepdur = risetime/nsteps;
  topdur = .03;
  stimlen = 2*risetime + topdur;

  for (i=0; i<nsteps; i++) {
      stim node [n1][n2][n3] cclamp=qsize*i/nsteps
	  start=stimtime+risetime*i/nsteps dur stepdur;  /* */
  };
  stim node [n1][n2][n3] cclamp=qsize start=stimtime+risetime 
	  dur topdur;
  for (i=0; i<nsteps; i++) {
    stim node [n1][n2][n3] cclamp=qsize*(nsteps-i)/nsteps
      start=stimtime+risetime+topdur+risetime*i/nsteps dur stepdur;  /* */
  };
};

/*-----------------------------------------------*/

/* set up network */

for (i=0; i<totsiz; i++) 
  for (j=0; j<nconn; j++) {
   gconnect[i][j] = -1;
};

   /* First set up the input cell array.  
   /* Make array of bipolar cells. */

for (y=0; y<arrsiz; y++)		/* Make the bipolars */
 for (x=0; x<arrsiz; x++) {
   at [rbp][x][y] loc (x*scal,y*scal,rbpz) sphere dia rbpsoma vrest=rbprest;
 };

aiinod=0;
for (y=0; y<arrsiz; y++)		/* Next make the aii's */
 for (x=0; x<arrsiz; x++) {
    at [aii][x][y] loc (x*scal,y*scal,aiiz) sphere dia aiisoma vrest=aiirest;
    if (!nona) {
      if (y>1 && y < arrsiz-1 && x>1 && x < arrsiz-1) {
        at [aii][x][y] chan Na type 0 maxcond 4e-9 tauh=natau;
      };
    };
    if (y>1 && y < arrsiz-1 && x>1 && x < arrsiz-1) {
      at [aii][x][y] chan K  type 0 maxcond 4e-10 taun=ktau;
    };
    aiiarr[x][y][0] = aiinod++;
  };

if (!nogj) {                            /* make gap junctions betw aii's */
for (j=0; j<arrsiz; j++)
  for (i=0; i<arrsiz; i++)
    for (k=j-1; k <= j+1; k++)
      for (h=i-1; h <= i+1; h++) {
          if (k<0 || k>=arrsiz) continue;
          if (h<0 || h>=arrsiz) continue;
	  if (i!=h && j!=k) continue; 
          if (i==h && j==k) continue;
          congj (i,j,h,k);
      };
};

dim scyc[totsiz];

for (y=0; y<arrsiz; y++)		/* make synapse at aiis for cycA */
 for (x=0; x<arrsiz; x++) {
    conn [aii][x][y] to [aii][x][y] 
	synapse thresh=-.055 expon 2 maxcond=0 
	nfilt3=2 timec3=50 tfall3=450 
	mesgout cAMP;
 };


/*for (i=0; i<totsiz; i++) {
   print "connect",i;
  for (j=0; j<nconn; j++) {
   print gconnect[i][j];
  };
}; */

   /* make the ganglion cell */

at [gangc] sphere dia 20 vrest -.065 rm 10000;


   /* Next set up the input cell array synapses.   */
   /* Each bipolar cell gets connections to 5 AIIs. */

for (j=0; j<arrsiz; j++)		/* For all bipolars */
 for (i=0; i<arrsiz; i++) 
   for (y=0; y<arrsiz; y++) 
     for (x=0; x<arrsiz; x++) {
        if (in5(x,y,i,j)) {
          conn [rbp][i][j] to [aii][x][y] synapse open expon=3
		thresh=-.045 maxcond=condr
		vrev = -.01 
		vesnoise=ves_noise N nfv vsize=vsz nfilt2=2 timec2=1.0
		chnoise=ch_noise  N=nfc unit=cond_ampa;
     };
   };


for (ginp=x=0; x<arrsiz; x++) {
 for (y=0; y<arrsiz; y++) {
   if (in5(x,y,rada,rada)) {

     if ( j==rada && i==rada) gmaxcond = 10e-10
     else                     gmaxcond =  5e-10;
     conn [aii][x][y] to [gangc] synapse open expon=5 
		thresh=-.050 maxcond=gmaxcond
			vrev = -.01
		/* vesnoise=ves_noise N=5 vsize=2 nfilt2=2 timec2=.5 /* */
		/* chnoise=ch_noise  N=100 dur=.0001	/* */;
     ginp++;
    };
  };
};


/* printf ("ganglion cell has %g inputs\n",ginp);  /* */

display size 150;
display calibline 10 loc (0.82,0.25);
display center (56,56);
display xrot 80 yrot -10;
display sphere matching [rbp][-1][-1] color 5;
display synapse matching [rbp][-1][-1];
display sphere matching [aii][-1][-1];
display sphere matching [aii][rada][rada-1] dscale 1.01 color 4;
display sphere matching [aii][rada][rada]   dscale 1.01 color 4;
display sphere matching [aii][rada][rada+1] dscale 1.01 color 4;
display sphere matching [aii][rada-1][rada] dscale 1.01 color 4;
display sphere matching [aii][rada+1][rada] dscale 1.01 color 4;
display gj     matching [aii][-1][-1] dscale -1 color 14;

display comps  matching [aii][-1][-1];


	/* stimuli */

for (y=0; y<arrsiz; y++)		/* Set darkv in all bipolars */
 for (x=0; x<arrsiz; x++) {
    stim node [rbp][x][y] cclamp darkv start 0 dur 2;
    };


for (i=0; i<numphot; i++) {
  x = rand() * arrsiz;
  y = rand() * arrsiz;
  randtim = rand() * endexp;
  makephot (rbp,x,y,randtim);
};

plmax = -.02;
plmin = -.07;

plot V[rbp][rada][rada];
plot V[rbp][rada][rada+1];
plot V[rbp][rada][rada-1];

/* plot FA9 xx[rada]; /* */

plot V[aii][rada][rada];
plot V[aii][rada][rada+1];
plot V[aii][rada][rada+2];
plot V[aii][rada][rada+3];
plot V[aii][rada][rada+4];
plot V[aii][rada][rada+5];

plot cAMP [aii][rada][rada+4];
plot cAMP [aii][rada][rada+5];

plot V[gangc];

include "pcrf.m";

pcolor = 7;

if (!disp) {
  gcwidth (.024);
  if (nona)   ptext (pcolor, .52, .90, "Without Na channels"); 
  if (nogj)   ptext (pcolor, .52, .85, "Without AII gap junctions"); 
  if (stim1)  ptext (pcolor, .52, .80, "With only 1 AII stimulated"); 

  run;
};

